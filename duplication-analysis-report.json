{
  "summary": {
    "totalFiles": 201,
    "duplicatedFunctions": 1753,
    "duplicatedComponents": 0,
    "duplicatedImports": 15,
    "duplicatedConstants": 169,
    "duplicatedBlocks": 2489,
    "totalDuplications": 4426
  },
  "duplications": {
    "functions": [
      {
        "hash": "786334e239ef1b0a43be942686f504e1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(){if(n){var f,h=n.length;for(i=new Array(h),s=new Array(h),f=0;f<h;++f)i[f]=isNaN(s[f]=+e(n[f],f,n))?0:+t(n[f],f,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "861e17362297f3fcb73330ebe9ed3cb6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(s){const l={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4761b408bef8af05190a506fa50879e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(s){if(s.ep)return;s.ep=!0;const l=n(s);fetch(s.href,l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3f1cf9fa1ac39e43ece20d5fddf2278f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jh(e){const t=Object.create(null);for(const n of e.split(\",\"))t[n]=1;return n=>n in t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "676db5dc485dbe57b201b4e3f7f00248",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nn(e){if(Fe(e)){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "477755d999b5fa3bcc9d9424bc7a98b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nk(e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3367902c5da33c23cda2db8883c106f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ot(e){let t=\"\";if(Dt(e))t=e;else if(Fe(e))for(let n=0;n<e.length;n++){const i=ot(e[n]);i&&(t+=i+\" \")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e88f922c4e8acd0402d682bb47454b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ik(e){if(!e)return null;let{class:t,style:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e39b0be7e878542567126f532b3b709d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ob(e){return!!e||e===\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d26a68eef65c3fe0c1a39b4afb40010a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rk(e,t){if(e.length!==t.length)return!1;let n=!0;for(let i=0;n&&i<e.length;i++)n=Vu(e[i],t[i]);return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ffc3864b929dd5677b4097710f5e4eb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vu(e,t){if(e===t)return!0;let n=Zm(e),i=Zm(t);if(n||i)return n&&i?e.getTime()===t.getTime():!1;if(n=Nr(e),i=Nr(t),n||i)return e===t;if(n=Fe(e),i=Fe(t),n||i)return n&&i?Rk(e,t):!1;if(n=_t(e),i...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fdc2521f8e17a4edae0ffd71d4234fb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sb(e,t){return e.findIndex(n=>Vu(n,t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c37ab5a114fe6189280f222fe6ce8503",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cb(){return yn}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cae8328b0d2c41fdf2e8a29300be9bb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dk(e,t=!1){yn&&yn.cleanups.push(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d7e2ae598e7e45b9c5d8fcb23b9c806",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function db(e,t=!1){if(e.flags|=8,t){e.next=Ql,Ql=e;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b7e6e092c7190a8d685c041f9ed57dc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ep(){fb++}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36349b8997982c19131fc39c99f44ed0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tp(){if(--fb>0)return;if(Ql){let t=Ql;for(Ql=void 0;t;){const n=t.next;t.next=void 0,t.flags&=-9,t=n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9e3c2bbe09ea8b3cf79afbc7f6355b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hb(e){for(let t=e.deps;t;t=t.nextDep)t.version=-1,t.prevActiveLink=t.dep.activeLink,t.dep.activeLink=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "78aa6d5afa6b4ecc498a3af5574fd744",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pb(e){let t,n=e.depsTail,i=n;for(;i;){const s=i.prevDep;i.version===-1?(i===n&&(n=s),np(i),Fk(i)):t=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d9779070a35b434f955f0ef8dd7f729f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zd(e){for(let t=e.deps;t;t=t.nextDep)if(t.dep.version!==t.version||t.dep.computed&&(gb(t.dep.computed)||t.dep.version!==t.version))return!0;return!!e._dirty}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "391c4007a237b8f4056c12e0b2d6877f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gb(e){if(e.flags&4&&!(e.flags&16)||(e.flags&=-17,e.globalVersion===ua)||(e.globalVersion=ua,!e.isSSR&&e.flags&128&&(!e.deps&&!e._dirty||!Zd(e))))return;e.flags|=2;const t=e.dep,n=Tt,i=$r;Tt=e...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b773a39e985f768903dcf810b72f2c84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function np(e,t=!1){const{dep:n,prevSub:i,nextSub:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "389b766b010fdb51058e87ce7d9040e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fk(e){const{prevDep:t,nextDep:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60be7828d5bcc7bc9e003a205861b3a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ki(){mb.push($r),$r=!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "30040e01c3b0c70d968a56aef814d50a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ti(){const e=mb.pop();$r=e===void 0?!0:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08336b378985f79bf67b8af11e26642e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ev(e){const{cleanup:t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a47d2795c03238ff36032e668db8adc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vb(e){if(e.dep.sc++,e.sub.flags&4){const t=e.dep.computed;if(t&&!e.dep.subs){t.flags|=20;for(let i=t.deps;i;i=i.nextDep)vb(i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "461ef78fb32aef25e8f09abfc44bd046",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bn(e,t,n){if($r&&Tt){let i=cu.get(e);i||cu.set(e,i=new Map);let s=i.get(n);s||(i.set(n,s=new Gu),s.map=i,s.key=n),s.track()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58d77ce8fb5aaec4ff07ba4ba06bdda8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wi(e,t,n,i,s,l){const u=cu.get(e);if(!u){ua++;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cfbe3cd53c9aa17e0eae2151ccd0dd29",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bk(e,t){const n=cu.get(e);return n&&n.get(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ac491aed1062e889c9a332b0e20f2ff9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ks(e){const t=mt(e);return t===e?t:(bn(t,\"iterate\",fa),dr(e)?t:t.map(hn))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bd029b888f2d3714fa4331a4c01ed5b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xu(e){return bn(e=mt(e),\"iterate\",fa),e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "46274c38ec304ae47b6a14503a3c0390",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function md(e,t,n){const i=Xu(e),s=i[t]();return i!==e&&!dr(e)&&(s._next=s.next,s.next=()=>{const l=s._next();return l.value&&(l.value=n(l.value)),l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12227614118bc557e290ccc2c5909ed8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hi(e,t,n,i,s,l){const u=Xu(e),f=u!==e&&!dr(e),h=u[t];if(h!==jk[t]){const v=h.apply(e,l);return f?hn(v):v}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7d2a04e54cdf48d21ddd7cc1e2cec89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tv(e,t,n,i){const s=Xu(e);let l=n;return s!==e&&(dr(e)?n.length>3&&(l=function(u,f,h){return n.call(this,u,f,h,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d88be5c3b6e96b1f77edb7cf337b9fbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vd(e,t,n){const i=mt(e);bn(i,\"iterate\",fa);const s=i[t](...n);return(s===-1||s===!1)&&sp(n[0])?(n[0]=mt(n[0]),i[t](...n)):s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86e23a706460a692cce9df03a44fca86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fl(e,t,n=[]){ki(),ep();const i=mt(e)[t].apply(e,n);return tp(),Ti(),i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e36f893a893fb38e24967917c79dfa50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uk(e){Nr(e)||(e=String(e));const t=mt(this);return bn(t,\"has\",e),t.hasOwnProperty(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5ac35a7a556809e2f68caa49d4fc9e4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jk(e,t,n){return function(...i){const s=this.__v_raw,l=mt(s),u=Os(l),f=e===\"entries\"||e===Symbol.iterator&&u,h=e===\"keys\"&&u,p=s[e](...i),g=n?eh:t?uu:hn;return!t&&bn(l,\"iterate\",h?Qd:jo),{nex...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81a42369ec672fcc8aa80939dff8e8ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mc(e){return function(...t){return e===\"delete\"?!1:e===\"clear\"?void 0:this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "861533a961b98721a17755e2739896be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yk(e,t){const n={get(s){const l=this.__v_raw,u=mt(l),f=mt(s);e||(Vn(s,f)&&bn(u,\"get\",s),bn(u,\"get\",f));const{has:h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "46cae8769aac111547af4688cd8072ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rp(e,t){const n=Yk(e,t);return(i,s,l)=>s===\"__v_isReactive\"?!e:s===\"__v_isReadonly\"?e:s===\"__v_raw\"?i:Reflect.get(wt(n,s)&&s in i?n:i,s,l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "56f5dbe8e30088ab23854f0db7441200",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nT(e){switch(e){case\"Object\":case\"Array\":return 1;case\"Map\":case\"Set\":case\"WeakMap\":case\"WeakSet\":return 2;default:return 0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c90c7b5359f001029c31a223cf2aeca7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rT(e){return e.__v_skip||!Object.isExtensible(e)?0:nT(Ck(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6f1888f71076a2941ab91ef2fb1da758",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rr(e){return uo(e)?e:op(e,!1,Gk,Zk,xb)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90806003689c36129a0084ba308c0dfe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ip(e){return op(e,!1,Kk,Qk,Sb)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60f5660678d03a1115c33cfee9561f4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ra(e){return op(e,!0,Xk,eT,_b)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "153a0e18468beb3efb26994665092807",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function op(e,t,n,i,s){if(!_t(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const l=rT(e);if(l===0)return e;const u=s.get(e);if(u)return u;const f=new Proxy(e,l===2?i:n);return s.set(e,f),f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "002dc8fb83c8fe47da0da3bfb2bb92f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rs(e){return uo(e)?Rs(e.__v_raw):!!(e&&e.__v_isReactive)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ca7174df9e3b58718c717162665044b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uo(e){return!!(e&&e.__v_isReadonly)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "494bc26922c4ba24d1344f6f616e73bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dr(e){return!!(e&&e.__v_isShallow)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "67a7bc90f1a5e1bc49c7f4a62b44139e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sp(e){return e?!!e.__v_raw:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "588a52492540185cebc940f3e05f8fa9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mt(e){const t=e&&e.__v_raw;return t?mt(t):e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2e67bf0b473677061fc71b6e4c9180b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lp(e){return!wt(e,\"__v_skip\")&&Object.isExtensible(e)&&rb(e,\"__v_skip\",!0),e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c6204e72b9cd7fc48710e2fca5224f37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kt(e){return e?e.__v_isRef===!0:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8c9fd05b1508bc1c834dc6af54aeedba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ue(e){return kb(e,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7ad56551ab593317d782643126d6d63",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rn(e){return kb(e,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1cbda9fa8a56e6ff3c2566e0eb35660",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kb(e,t){return kt(e)?e:new iT(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90cb30e828235367956f80ed8b8ac4cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function j(e){return kt(e)?e.value:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "941942e44be4c9c86fc7f278302fa2aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gt(e){return Ge(e)?e():j(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3a4fd4d2a226d7ed63aea2965b43022",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tb(e){return Rs(e)?e:new Proxy(e,oT)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6281a0dcbda4bc3ded38585e9018c090",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cb(e){return new sT(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96bfb08c8411a89f123b2ba40765f70a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lT(e){const t=Fe(e)?new Array(e.length):{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b498fbc8068e306fd27466ac0ed23304",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ol(e,t,n){return kt(e)?e:Ge(e)?new cT(e):_t(e)&&arguments.length>1?Eb(e,t,n):Ue(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "153d474e569f03399cd3d359a9ecf0d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Eb(e,t,n){const i=e[t];return kt(i)?i:new aT(e,t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1d1cd03455f5b38ee89e93b5bc443196",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fT(e,t,n=!1){let i,s;return Ge(e)?i=e:(i=e.get,s=e.set),new uT(i,s,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0cba1b79a46c55d035204b2398361b72",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dT(e,t=!1,n=zo){if(n){let i=fu.get(n);i||fu.set(n,i=[]),i.push(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cea0fb218c5331698e69a62eab7e5f70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hT(e,t,n=vt){const{immediate:i,deep:s,once:l,scheduler:u,augmentJob:f,call:h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aeaf7129a467f83a8589956b8313b1b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xi(e,t=1/0,n){if(t<=0||!_t(e)||e.__v_skip||(n=n||new Set,n.has(e)))return e;if(n.add(e),t--,kt(e))xi(e.value,t,n);else if(Fe(e))for(let i=0;i<e.length;i++)xi(e[i],t,n);else if(Wu(e)||Os(e))e....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc22d7d63f1e67aa1786564dc5ad36d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function za(e,t,n,i){try{return i?e(...i):e()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "de176ffdafee1c712e0c29f3fef40ef5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ir(e,t,n,i){if(Ge(e)){const s=za(e,t,n,i);return s&&eb(s)&&s.catch(l=>{Da(l,t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4403bd1c0445a3fd3e47ebfe7d13446c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Da(e,t,n,i=!0){const s=t?t.vnode:null,{errorHandler:l,throwUnhandledErrorInProduction:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "94a2d1f1f524896b548222c416858ec6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pT(e,t,n,i=!0,s=!1){if(s)throw e;console.error(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97a707d853fac83afab6156d294262a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Et(e){const t=du||Ab;return e?t.then(this?e.bind(this):e):t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f5da4baff0e284f6347e411678bae253",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gT(e){let t=Gr+1,n=In.length;for(;t<n;){const i=t+n>>>1,s=In[i],l=da(s);l<e||l===e&&s.flags&2?t=i+1:n=i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a1bebbc247cd1162943b1f52674e672c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ap(e){if(!(e.flags&1)){const t=da(e),n=In[In.length-1];!n||!(e.flags&2)&&t>=da(n)?In.push(e):In.splice(gT(t),0,e),e.flags|=1,Lb()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e3be486e1900349f1b876f4a3c0f0b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lb(){du||(du=Ab.then(Mb))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fb6753fbf4f4565965a78c4eb5a6b326",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function th(e){Fe(e)?zs.push(...e):Ki&&e.id===-1?Ki.splice(Cs+1,0,e):e.flags&1||(zs.push(e),e.flags|=1),Lb()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "684a447ebb34f3434230fcca842bce4a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nv(e,t,n=Gr+1){for(;n<In.length;n++){const i=In[n];if(i&&i.flags&2){if(e&&i.id!==e.uid)continue;In.splice(n,1),n--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f4cbdb58b971e8b85fdb92c588ce1523",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mb(e){try{for(Gr=0;Gr<In.length;Gr++){const t=In[Gr];t&&!(t.flags&8)&&(t.flags&4&&(t.flags&=-2),za(t,t.i,t.i?15:14),t.flags&4||(t.flags&=-2))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2e03f462ab9ef7be28db080eed2edb69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hu(e){const t=tn;return tn=e,Ku=e&&e.type.__scopeId||null,t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8bf384a5bf3e69c86067ef015d3d0e14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nb(e){Ku=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aaa294d2a506004b11f95a692dc6d0f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ib(){Ku=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "be690e816fdff029c530b5b247bef79f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function it(e,t=tn,n){if(!t||e._n)return e;const i=(...s)=>{i._d&&vu(-1);const l=hu(t);let u;try{u=e(...s)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3c56d88861fd117e570c8c5e4a82ee62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ct(e,t){if(tn===null)return e;const n=rf(tn),i=e.dirs||(e.dirs=[]);for(let s=0;s<t.length;s++){let[l,u,f,h=vt]=t[s];l&&(Ge(l)&&(l={mounted:l,updated:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5a1106923074928cdabb5fc10418f00b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function No(e,t,n,i){const s=e.dirs,l=t&&t.dirs;for(let u=0;u<s.length;u++){const f=s[u];l&&(f.oldValue=l[u].value);let h=f.dir[i];h&&(ki(),Ir(h,n,8,[e.el,f,e,t]),Ti())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1c91a997529e5d4331746821275f790",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vT(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ffb2c553032686ba46682c819b5d01bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Db(e){let t=e[0];if(e.length>1){for(const n of e)if(n.type!==ln){t=n;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97671f3640843fd79563f0fcae9029b5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fb(e,t){const{leavingVNodes:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc4a9a8d1bd729b0fce21aa1426e7bea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nh(e,t,n,i,s){const{appear:l,mode:u,persisted:f=!1,onBeforeEnter:h,onEnter:p,onAfterEnter:g,onEnterCancelled:v,onBeforeLeave:y,onLeave:w,onAfterLeave:L,onLeaveCancelled:$,onBeforeAppear:A,onA...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "380cbac63854190921edc8771a385ca9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yd(e){if(Ju(e))return e=fo(e),e.children=null,e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa9e2c37c56137fcd2e229845f088a8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rv(e){if(!Ju(e))return Ob(e.type)&&e.children?Db(e.children):e;if(e.component)return e.component.subTree;const{shapeFlag:t,children:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "03eb71cf2a912a446d777c6d0fa0da4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ha(e,t){e.shapeFlag&6&&e.component?(e.transition=t,ha(e.component.subTree,t)):e.shapeFlag&128?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.tra...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9deb380329699d3168fc9857fa96703f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hb(e,t=!1,n){let i=[],s=0;for(let l=0;l<e.length;l++){let u=e[l];const f=n==null?u.key:String(n)+String(u.key!=null?u.key:l);u.type===nt?(u.patchFlag&128&&s++,i=i.concat(Hb(u.children,t,f))):...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60ebb89809b75aaad4c119b82ec123a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function at(e,t){return Ge(e)?on({name:e.name}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f1feeca7b701a8e8cd1444ec43270b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bb(e){e.ids=[e.ids[0]+e.ids[2]+++\"-\",0,0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91bf6ebdf00af649a274f2e7ffaeb904",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pu(e,t,n,i,s=!1){if(Fe(e)){e.forEach((L,$)=>pu(L,t&&(Fe(t)?t[$]:t),n,i,s));return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ffdf37dae5f39920b4eb16ddf4774881",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const A=()=>{if(e.f){const E=L?w(h)?v[h]:g[h]:h.value;s?Fe(E)&&Zh(E,l):Fe(E)?E.includes(l)||E.push(l):L?(g[h]=[l],w(h)&&(v[h]=g[h])):(h.value=[l],e.k&&(g[e.k]=h.value))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1665332c563771c9fb6508ae64ed391a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wT(e,t){Wb(e,\"a\",t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d3f43cd5178b9b4627f262e59beffdf8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xT(e,t){Wb(e,\"da\",t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bffdd5d139f0e9074500ecce25ed6bc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wb(e,t,n=an){const i=e.__wdc||(e.__wdc=()=>{let s=n;for(;s;){if(s.isDeactivated)return;s=s.parent}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c29851777bb11f1e14b96c4c83888234",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ST(e,t,n,i){const s=Yu(t,e,i,!0);Zu(()=>{Zh(i[t],s)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7a1dd515bda1cbb11bca424b3f8e86d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yu(e,t,n=an,i=!1){if(n){const s=n[e]||(n[e]=[]),l=t.__weh||(t.__weh=(...u)=>{ki();const f=Ha(n),h=Ir(t,n,e,u);return f(),Ti(),h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e794fb24ec7546c0b21cef2d951c0f33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function LT(e,t=an){Yu(\"ec\",e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a2f20564743cc849c00939e11a4424f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Go(e,t){return up(cp,e,!0,t)||e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "443a55100d553201dddd29862d5906c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rh(e){return Dt(e)?up(cp,e,!1)||e:e||jb}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8dc75b0950fcacf5fcc25329d296bf84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dr(e){return up($T,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f44e20bba467ccfd06b81061e0160fa1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function up(e,t,n=!0,i=!1){const s=tn||an;if(s){const l=s.type;if(e===cp){const f=SC(l,!1);if(f&&(f===t||f===ir(t)||f===qu(ir(t))))return l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ccf52087874dc1d70559913e3c3b3650",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function iv(e,t){return e&&(e[t]||e[ir(t)]||e[qu(ir(t))])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81ae2d10705ed1d8e5c4d1bab2f90d86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hr(e,t,n,i){let s;const l=n,u=Fe(e);if(u||Dt(e)){const f=u&&Rs(e);let h=!1,p=!1;f&&(h=!dr(e),p=uo(e),e=Xu(e)),s=new Array(e.length);for(let g=0,v=e.length;g<v;g++)s[g]=t(h?p?uu(hn(e[g])):hn(e...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b04cc19fd314ef372b3853e48b2524d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function MT(e,t){for(let n=0;n<t.length;n++){const i=t[n];if(Fe(i))for(let s=0;s<i.length;s++)e[i[s].name]=i[s].fn;else i&&(e[i.name]=i.key?(...s)=>{const l=i.fn(...s);return l&&(l.key=i.key),l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1ddde062e7eb918d98f1f564d3a3cd5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xn(e,t,n={},i,s){if(tn.ce||tn.parent&&Ds(tn.parent)&&tn.parent.ce)return t!==\"default\"&&(n.name=t),se(),Ye(nt,null,[Ie(\"slot\",n,i&&i())],64);let l=e[t];l&&l._c&&(l._d=!1),se();const u=l&&qb(l...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ef2be63da1b2f64cd15741a8a770b745",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qb(e){return e.some(t=>Js(t)?!(t.type===ln||t.type===nt&&!qb(t.children)):!0)?e:null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ff70ce381ee4a0a14d81aae67189d789",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NT(e,t){const n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3db86e9a5152c9467589c2784eecd1fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function PT(){return Ub().slots}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c97252055ad1f96a8f836ab74c46ed9e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OT(){return Ub().attrs}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cdec21f706484e756399a773a1e2e6a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ub(){const e=Ko();return e.setupContext||(e.setupContext=vw(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6a5e14cf393bd79ffcf4c1f265d9cd4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gu(e){return Fe(e)?e.reduce((t,n)=>(t[n]=null,t),{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f99ad8310e188e1e31fd2e604a047e1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pa(e,t){return!e||!t?e||t:Fe(e)&&Fe(t)?e.concat(t):on({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b4f7d21c127ef0fa2a4c02ba2d37a452",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function RT(e){const t=Gb(e),n=e.proxy,i=e.ctx;oh=!1,t.beforeCreate&&ov(t.beforeCreate,e,\"bc\");const{data:s,computed:l,methods:u,watch:f,provide:h,inject:p,created:g,beforeMount:v,mounted:y,beforeUpda...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b5d52d174f174b869cfad25d89292428",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R(B,oe){Fe(oe)?oe.forEach(ue=>B(ue.bind(n))):oe&&B(oe.bind(n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f46110f3046a2056b0520f10b3f7e11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zT(e,t,n=Yr){Fe(e)&&(e=sh(e));for(const i in e){const s=e[i];let l;_t(s)?\"default\"in s?l=wn(s.from||i,s.default,!0):l=wn(s.from||i):l=wn(s),kt(l)?Object.defineProperty(t,i,{enumerable:!0,conf...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0f5a35d7ce9b070db4b3537e3888bb07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ov(e,t,n){Ir(Fe(e)?e.map(i=>i.bind(t.proxy)):e.bind(t.proxy),t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "931e52b04e86a6391d78a48ae346eac6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vb(e,t,n,i){let s=i.includes(\".\")?sw(n,i):()=>n[i];if(Dt(e)){const l=t[e];Ge(l)&&St(s,l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a28d0baabe9d29bd673d94de0537ec41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gb(e){const t=e.type,{mixins:n,extends:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f696b41fceddbb5ea409ee66c6ddf654",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mu(e,t,n,i=!1){const{mixins:s,extends:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08ae79267bf9d94fd4b37ea2996c3520",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sv(e,t){return t?e?function(){return on(Ge(e)?e.call(this,this):e,Ge(t)?t.call(this,this):t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d3437beca7833af0d736e747e7ea679f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function FT(e,t){return Gl(sh(e),sh(t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "49951f6a7f807d2541078792940e56bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sh(e){if(Fe(e)){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "02b93d8a1752f1320725cdffedbace31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gl(e,t){return e?on(Object.create(null),e,t):t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bda7f538f12dfc49bc5aca276d91669b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lv(e,t){return e?Fe(e)&&Fe(t)?[...new Set([...e,...t])]:on(Object.create(null),gu(e),gu(t??{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1ead609938b28cc526cb29e0c7cc0ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HT(e,t){if(!e)return t;if(!t)return e;const n=on(Object.create(null),e);for(const i in t)n[i]=$n(e[i],t[i]);return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "25f0bc1151acd7e358fea5c8fea43e94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xb(){return{app:null,config:{isNativeTag:kk,performance:!1,globalProperties:{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "582bce6ef6e5d9457798d704e6fde8a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function WT(e,t){return function(i,s=null){Ge(i)||(i=on({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eba8b3a8dd414baea7a21785ddfb09f5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Er(e,t){if(an){let n=an.provides;const i=an.parent&&an.parent.provides;i===n&&(n=an.provides=Object.create(i)),n[e]=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3324706cee34cfb3b8c3f2a3e11304ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wn(e,t,n=!1){const i=an||tn;if(i||qo){let s=qo?qo._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(s&&e in s)return s[e];if...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "068d18fbe04f9a1cc875edcd0084f887",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kb(){return!!(an||tn||qo)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b2d9044fb358c462daf98ceb920cdc17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jT(e,t,n,i=!1){const s={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "511956773d5adf710e287301867a450f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qT(e,t,n,i){const{props:s,attrs:l,vnode:{patchFlag:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9cd615aa65260332f8bc0ddfeb715c79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qb(e,t,n,i){const[s,l]=e.propsOptions;let u=!1,f;if(t)for(let h in t){if(Yl(h))continue;const p=t[h];let g;s&&wt(s,g=ir(h))?!l||!l.includes(g)?n[g]=p:(f||(f={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c7c231a18013e55fa018c4f1aed9ab8f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lh(e,t,n,i,s,l){const u=e[n];if(u!=null){const f=wt(u,\"default\");if(f&&i===void 0){const h=u.default;if(u.type!==Function&&!u.skipFactory&&Ge(h)){const{propsDefaults:p}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1e7ee5a875c252300fdc2e561ae37ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ew(e,t,n=!1){const i=n?UT:t.propsCache,s=i.get(e);if(s)return s;const l=e.props,u={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1dc740458fea4c02e15eeacae40f70b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function av(e){return e[0]!==\"$\"&&!Yl(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1a723a34378438ed49d3de3db6596b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function KT(e){return JT(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4282386a73cf911f353b66476c5e756f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function JT(e,t){const n=Uu();n.__VUE__=!0;const{insert:i,remove:s,patchProp:l,createElement:u,createText:f,createComment:h,setText:p,setElementText:g,parentNode:v,nextSibling:y,setScopeId:w=Yr,insert...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "24ce1800730da71f3aaf8f60b9a7ba13",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const Ee=()=>{if(F.isMounted){let{next:Me,bu:De,u:Ve,parent:rt,vnode:st}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eac046485743909544a94d585d9a956f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const he=()=>{s(Y),pe&&!pe.persisted&&pe.afterLeave&&pe.afterLeave()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2a1b749a3ab0b062d5529d8fb6647c98",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const J=(F,V,Y)=>{F==null?V._vnode&&qe(V._vnode,null,null,!0):$(V._vnode||null,F,V,null,null,null,Y),V._vnode=F,Q||(Q=!0,nv(),$b(),Q=!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c125cd503aade896e041e9f78594da18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wd({type:e,props:t},n){return n===\"svg\"&&e===\"foreignObject\"||n===\"mathml\"&&e===\"annotation-xml\"&&t&&t.encoding&&t.encoding.includes(\"html\")?void 0:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8db1f2d614923a786570807c5ef9c825",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Io({effect:e,job:t},n){n?(e.flags|=32,t.flags|=4):(e.flags&=-33,t.flags&=-5)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa3fdbbc8ecfc3252d31585ef892c52f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function YT(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d46c683f26d50164f9b7c391b0018c17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function iw(e,t,n=!1){const i=e.children,s=t.children;if(Fe(i)&&Fe(s))for(let l=0;l<i.length;l++){const u=i[l];let f=s[l];f.shapeFlag&1&&!f.dynamicChildren&&((f.patchFlag<=0||f.patchFlag===32)&&(f=s[l...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "85194614f7c20936df3a454056781bf5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ZT(e){const t=e.slice(),n=[0];let i,s,l,u,f;const h=e.length;for(i=0;i<h;i++){const p=e[i];if(p!==0){if(s=n[n.length-1],e[s]<p){t[i]=s,n.push(i);continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a80c1d18bd9ac5fcdcf194a52a2e45de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ow(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:ow(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "070827f9ece47daaf55fbc326a8df98a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cv(e){if(e)for(let t=0;t<e.length;t++)e[t].flags|=8}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d82d71cd69f6b761e6f307f2b3b53ebd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hp(e,t){return Qu(e,null,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4dbf4467109b750f2c01262a56aa0c9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tC(e,t){return Qu(e,null,{flush:\"sync\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc7e60583acff8a05b74f65a8027a7c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function St(e,t,n){return Qu(e,t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a10005bb54fdf2358a4d734e2c903518",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qu(e,t,n=vt){const{immediate:i,deep:s,flush:l,once:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "656d17662897507fb9e7930166a4d3d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const w=()=>{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d08ea47b8ac13db2cf700454b6bf1a5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nC(e,t,n){const i=this.proxy,s=Dt(e)?e.includes(\".\")?sw(i,e):()=>i[e]:e.bind(i,i);let l;Ge(t)?l=t:(l=t.handler,n=t);const u=Ha(this),f=Qu(s,l.bind(i),n);return u(),f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0e4faeec3cc133f52cf3c65469601e33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sw(e,t){const n=t.split(\".\");return()=>{let i=e;for(let s=0;s<n.length&&i;s++)i=i[n[s]];return i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "411a5113b09db110768571e1fb16664c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ef(e,t,n=vt){const i=Ko(),s=ir(t),l=Ai(t),u=lw(e,s),f=Cb((h,p)=>{let g,v=vt,y;return tC(()=>{const w=e[s];Vn(g,w)&&(g=w,p())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "83cb78911dad2a88d1768973f5272ff5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rC(e,t,...n){if(e.isUnmounted)return;const i=e.vnode.props||vt;let s=n;const l=t.startsWith(\"update:\"),u=l&&lw(i,t.slice(7));u&&(u.trim&&(s=n.map(g=>Dt(g)?g.trim():g)),u.number&&(s=n.map(Yd))...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "28a56fce52a06681faaa83d0c216252c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function aw(e,t,n=!1){const i=t.emitsCache,s=i.get(e);if(s!==void 0)return s;const l=e.emits;let u={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f556aacb73d65873566abf7cae0829b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tf(e,t){return!e||!Bu(t)?!1:(t=t.slice(2).replace(/Once$/,\"\"),wt(e,t[0].toLowerCase()+t.slice(1))||wt(e,Ai(t))||wt(e,t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b143afcb04a38fe424ff4c2c4455dfa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uv(e){const{type:t,vnode:n,proxy:i,withProxy:s,propsOptions:[l],slots:u,attrs:f,emit:h,render:p,renderCache:g,props:v,data:y,setupState:w,ctx:L,inheritAttrs:$}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e8e7cf0ff0352d95e67bd935e3dfb0b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function iC(e,t=!0){let n;for(let i=0;i<e.length;i++){const s=e[i];if(Js(s)){if(s.type!==ln||s.children===\"v-if\"){if(n)return;n=s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "79cdcc1656ea0892887f220da55e8df1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lC(e,t,n){const{props:i,children:s,component:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77266ee844b3e5f18856931d4650f6ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fv(e,t,n){const i=Object.keys(t);if(i.length!==Object.keys(e).length)return!0;for(let s=0;s<i.length;s++){const l=i[s];if(t[l]!==e[l]&&!tf(n,l))return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1bd95e98d93224cea6cc4c8e22f64175",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pp({vnode:e,parent:t},n){for(;t;){const i=t.subTree;if(i.suspense&&i.suspense.activeBranch===e&&(i.el=e.el),i===e)(e=t.vnode).el=n,t=t.parent;else break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c0c9824b18ce738dae87abd6415c802a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ga(e,t){const n=e.props&&e.props[t];Ge(n)&&n()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90a15833c891deb58438fd41dd9f4e7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cC(e,t,n,i,s,l,u,f,h){const{p,o:{createElement:g}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3fc50e805433f909ea70608191e123e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uC(e,t,n,i,s,l,u,f,{p:h,um:p,o:{createElement:g}}){const v=t.suspense=e.suspense;v.vnode=t,t.el=e.el;const y=t.ssContent,w=t.ssFallback,{activeBranch:L,pendingBranch:$,isInFallback:A,isHydrat...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dcfdd67b340962441ab4249c8a7419a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uw(e,t,n,i,s,l,u,f,h,p,g=!1){const{p:v,m:y,um:w,n:L,o:{parentNode:$,remove:A}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "636db029a37977d06ce16c16ddd7bc8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fC(e,t,n,i,s,l,u,f,h){const p=t.suspense=uw(t,i,n,e.parentNode,document.createElement(\"div\"),null,s,l,u,f,!0),g=h(e,p.pendingBranch=t.ssContent,n,p,l,u);return p.deps===0&&p.resolve(!1,!0),g}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fceb92e03a90e75030fcce447be2c67b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dC(e){const{shapeFlag:t,children:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "87c4d62f8110e2730e4c8b3af5179395",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dv(e){let t;if(Ge(e)){const n=Ks&&e._c;n&&(e._d=!1,se()),e=e(),n&&(e._d=!0,t=Xn,fw())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0698e4b3069176dda513fbc456c94b65",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hC(e,t){t&&t.pendingBranch?Fe(e)?t.effects.push(...e):t.effects.push(e):th(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "adda2b9fd3c6379b8c2931a597b5e4bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fs(e,t){e.activeBranch=t;const{vnode:n,parentComponent:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0327664ec7315900e2dc7af58dab2731",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pC(e){const t=e.props&&e.props.suspensible;return t!=null&&t!==!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6465d7f7ab601f6272dcd498dd4c3334",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function se(e=!1){ta.push(Xn=e?null:[])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "42a3581c0a13c4d423467fe664ca9dc6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fw(){ta.pop(),Xn=ta[ta.length-1]||null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2e9b9d5920b580ff0166e9465d082bf4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vu(e,t=!1){Ks+=e,e<0&&Xn&&t&&(Xn.hasOnce=!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00032e6b72b39c8756abd9900df31673",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dw(e){return e.dynamicChildren=Ks>0?Xn||Ps:null,fw(),Ks>0&&Xn&&Xn.push(e),e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9da2fc483dc071b99d9973655db9cbaa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ye(e,t,n,i,s,l){return dw(ne(e,t,n,i,s,l,!0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1f516e8d24e003ea7bf7480f49d8068",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ye(e,t,n,i,s){return dw(Ie(e,t,n,i,s,!0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0c377c41d932560232e3185e9d24c7ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Js(e){return e?e.__v_isVNode===!0:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cbef2f16e4e06bf76f8b03c192387fa3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kr(e,t){return e.type===t.type&&e.key===t.key}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae84d6907407f7e566a4cf97a689105f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ne(e,t=null,n=null,i=0,s=null,l=e===nt?0:1,u=!1,f=!1){const h={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&hw(t),ref:t&&Jc(t),scopeId:Ku,slotScopeIds:null,children:n,component:null,suspe...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "39ec0a73bee0fbe6a66524fd6f06c761",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gC(e,t=null,n=null,i=0,s=null,l=!1){if((!e||e===jb)&&(e=ln),Js(e)){const f=fo(e,t,!0);return n&&mp(f,n),Ks>0&&!l&&Xn&&(f.shapeFlag&6?Xn[Xn.indexOf(e)]=f:Xn.push(f)),f.patchFlag=-2,f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dba8098ea6a9bd387dcd97634d09072a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pw(e){return e?sp(e)||Zb(e)?on({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e9867e43597c3940dccb7c007492f298",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fo(e,t,n=!1,i=!1){const{props:s,ref:l,patchFlag:u,children:f,transition:h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5e70502a3d45609fe316705429f7997a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dt(e=\" \",t=0){return Ie(nf,null,e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "159d7f36b5a0010476ff5c8e3491fb6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function je(e=\"\",t=!1){return t?(se(),Ye(ln,null,e)):Ie(ln,null,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ce2bdb7fe1c7e1e32bab10c361b1f991",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ar(e){return e==null||typeof e==\"boolean\"?Ie(ln):Fe(e)?Ie(nt,null,e.slice()):Js(e)?Yi(e):Ie(nf,null,String(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4cd04e56f8698855fea6a3c9dfe8182f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yi(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:fo(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9fdfcd79018c1e5f11a853025ce27dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mp(e,t){let n=0;const{shapeFlag:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abace51b6ccd7bccfe6bcac66e9642f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _i(...e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3d4a379cbe2e8b23485b987710e9527b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vr(e,t,n,i=null){Ir(e,t,7,[n,i])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e23bd7862dbcbcde7e37863aea28cafe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yC(e,t,n){const i=e.type,s=(t?t.appContext:e.appContext)||mC,l={uid:vC++,vnode:e,type:i,parent:t,appContext:s,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new zk(!0...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cf63a003d2a43637328869afb2f35b56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gw(e){return e.vnode.shapeFlag&4}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e62035d00af3fc1a75a4255c1d7ed82d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bC(e,t=!1,n=!1){t&&ch(t);const{props:i,children:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae29ee8f7c10d3d6d9621f3427ff4527",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wC(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=new Proxy(e.ctx,IT);const{setup:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cb2ccf2ef9044c67b53f2a1d0351f953",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uh(e,t,n){Ge(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:_t(t)&&(e.setupState=Tb(t)),mw(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "077e99c562aa35a719a59f95d5209b60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mw(e,t,n){const i=e.type;e.render||(e.render=i.render||Yr);{const s=Ha(e);ki();try{RT(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55b560885a407c70456b38ee1fd8b3e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vw(e){const t=n=>{e.exposed=n||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f39c595b3b39a1e6f7517cc9e877e1d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rf(e){return e.exposed?e.exposeProxy||(e.exposeProxy=new Proxy(Tb(lp(e.exposed)),{get(t,n){if(n in t)return t[n];if(n in ea)return ea[n](e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ee46616082e653729fd089e8ba7f66a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function SC(e,t=!0){return Ge(e)?e.displayName||e.name:e.name||t&&e.__name}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2758e2deac33dba0ac7beb971ba484e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _C(e){return Ge(e)&&\"__vccOpts\"in e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b9cf6047b04b0f7f7de7963928d6712b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ba(e,t,n){const i=arguments.length;return i===2?_t(t)&&!Fe(t)?Js(t)?Ie(e,null,[t]):Ie(e,t):Ie(e,null,t):(i>3?n=Array.prototype.slice.call(arguments,2):i===3&&Js(n)&&(n=[n]),Ie(e,t,n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4cda29c03433914a966b698cb5ad2416",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function MC(e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6a7b966d065c06a970287ff6244f6ab1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NC(e){if(e==null)return null;if(_t(e))return[Sd(e.enter),Sd(e.leave)];{const t=Sd(e);return[t,t]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2acd655c996e859a83a245ff592f9837",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sd(e){return ib(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9091bcafc4a7391b0a379ef6bcd0b71d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pi(e,t){t.split(/\\s+/).forEach(n=>n&&e.classList.add(n)),(e[va]||(e[va]=new Set)).add(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "15efa7bfc4eb04b07586aaecf33aac7e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oo(e,t){t.split(/\\s+/).forEach(i=>i&&e.classList.remove(i));const n=e[va];n&&(n.delete(t),n.size||(e[va]=void 0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b780155576587ad7f9eba6a2d8e5d876",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vv(e){requestAnimationFrame(()=>{requestAnimationFrame(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d6f30843db6e31175fb7acafccbc680d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yv(e,t,n,i){const s=e._endId=++IC,l=()=>{s===e._endId&&i()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8191dd2a9b6dd41d52b45965a45f2c5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const v=()=>{e.removeEventListener(p,y),l()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f1b97230b9b6aa52ee61e88cb70b5601",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function PC(e,t){const n=window.getComputedStyle(e),i=L=>(n[L]||\"\").split(\", \"),s=i(`${qi}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "22e2d12c93c7b48feda2162135c2b98d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bv(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max(...t.map((n,i)=>wv(n)+wv(e[i])))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cebb976b4d3bb395b6b4efcaea66e9ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wv(e){return e===\"auto\"?0:Number(e.slice(0,-1).replace(\",\",\".\"))*1e3}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "68aeb23b299429a47160505bd9d68269",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xv(){return document.body.offsetHeight}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "583ef863d678d778915826cf1d32dfa0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OC(e,t,n){const i=e[va];i&&(t=(t?[t,...i]:[...i]).join(\" \")),t==null?e.removeAttribute(\"class\"):n?e.setAttribute(\"class\",t):e.className=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1575a356757c70cf262bb78b1ae2518a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bl(e,t){e.style.display=t?e[bu]:\"none\",e[ww]=!t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "37b75b5dea9585f0c7c044a6a40658ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function DC(e,t,n){const i=e.style,s=Dt(n);let l=!1;if(n&&!s){if(t)if(Dt(t))for(const u of t.split(\";\")){const f=u.slice(0,u.indexOf(\":\")).trim();n[f]==null&&Yc(i,f,\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee7e73ff0426663a738f7ca34bc330dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yc(e,t,n){if(Fe(n))n.forEach(i=>Yc(e,t,i));else if(n==null&&(n=\"\"),t.startsWith(\"--\"))e.setProperty(t,n);else{const i=FC(e,t);Sv.test(n)?e.setProperty(Ai(i),n.replace(Sv,\"\"),\"important\"):e[i]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cc251af0132a43b95b0a67531c01a74f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function FC(e,t){const n=_d[t];if(n)return n;let i=ir(t);if(i!==\"filter\"&&i in e)return _d[t]=i;i=qu(i);for(let s=0;s<_v.length;s++){const l=_v[s]+i;if(l in e)return _d[t]=l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "44a3ac35a512da95bfe65f51251ca535",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cv(e,t,n,i,s){if(t===\"innerHTML\"||t===\"textContent\"){n!=null&&(e[t]=t===\"innerHTML\"?yw(n):n);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2b35a4dfa8227b4c373212614c3cb9c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ho(e,t,n,i){e.addEventListener(t,n,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f36588b866a1d326350518e58eb27cc7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HC(e,t,n,i){e.removeEventListener(t,n,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b5cbdf6a5859ef1f3a48f91fbe837e39",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function BC(e,t,n,i,s=null){const l=e[Ev]||(e[Ev]={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "be74666ff4fb3ce7fe7460ed93b8effc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function WC(e){let t;if(Av.test(e)){t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0efa57ce299d4ca9515e0314c6c4e069",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function UC(e,t){const n=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=n.attached)return;Ir(VC(i,n.value),t,5,[i])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8e382a86a6c1cac7ff72896294785162",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function VC(e,t){if(Fe(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "513cecdc109f5cf61bed3ba42357610d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function XC(e,t,n,i){if(i)return!!(t===\"innerHTML\"||t===\"textContent\"||t in e&&Lv(t)&&Ge(n));if(t===\"spellcheck\"||t===\"draggable\"||t===\"translate\"||t===\"autocorrect\"||t===\"form\"||t===\"list\"&&e.tagName...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "53fdc2991a9c387305bf5726c88122ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function KC(e){e.target.composing=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "727de07d947d54d878ccbd8c48213c13",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mv(e,{value:t,oldValue:n},i){e._modelValue=t;let s;if(Fe(t))s=sb(t,i.props.value)>-1;else if(Wu(t))s=t.has(i.props.value);else{if(t===n)return;s=Vu(t,Sw(e,!0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c70eb26974c43ab3aa3f2c59f88c0bb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function YC(e){return\"_value\"in e?e._value:e.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9a7b4b2984124cd0f5e324ea86ad19a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sw(e,t){const n=t?\"_trueValue\":\"_falseValue\";return n in e?e[n]:t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2f3d0cca124888d5e0b483aa9db0a55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nE(){return Nv||(Nv=KT(tE))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a5e96536584be62da6066e552aafb425",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const _w=(...e)=>{const t=nE().createApp(...e),{mount:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "085305919e11975135472fc0e2b41310",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rE(e){if(e instanceof SVGElement)return\"svg\";if(typeof MathMLElement==\"function\"&&e instanceof MathMLElement)return\"mathml\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "38743e91e50bcb34523f6a68921c6c4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function iE(e){return Dt(e)?document.querySelector(e):e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cacf905b46a0ddd8c77a2e1617090315",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const ni=(e,t)=>{const n=e.__vccOpts||e;for(const[i,s]of t)n[i]=s;return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6ace86c813b97f0e3be38f0afd9da867",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sE(e,t){const n=Go(\"RouterView\");return se(),Ye(n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a824cfe603fd7a93dac552e2d4ada7bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hh(e,t,n){return Do(e,ya(t,n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3204cf96ef59ed10813663a6c18002fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jo(e,t){return typeof e==\"function\"?e(t):e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e7cef864d3e72cb7a3fcc4c3fe8feb86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ti(e){return e.split(\"-\")[0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1d98328a2abc07221d467f6ea32ce8e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mr(e){return e.split(\"-\")[1]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "70c0a5f32a5177d4cd832bbbafaa9e18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kw(e){return e===\"x\"?\"y\":\"x\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "627964011fdd83f17882105313581fda",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vp(e){return e===\"y\"?\"height\":\"width\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d6f8d3e611b2197f7201ed947d3baeb5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wa(e){return[\"top\",\"bottom\"].includes(ti(e))?\"y\":\"x\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "47ac8dfc8deafd9022099c0648aa376c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yp(e){return kw(Wa(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f6a8944e010b5073e9d5e1ad297553d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tw(e,t,n){n===void 0&&(n=!1);const i=Mr(e),s=yp(e),l=vp(s);let u=s===\"x\"?i===(n?\"end\":\"start\")?\"right\":\"left\":i===\"start\"?\"bottom\":\"top\";return t.reference[l]>t.floating[l]&&(u=Su(u)),[u,Su(u...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ee366c25d4c1ace9c4c46c818f245f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fE(e){const t=Su(e);return[xu(e),t,xu(t)]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3c3e3f67cc413f55a5d9255f1c262d3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xu(e){return e.replace(/start|end/g,t=>uE[t])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b9cf36672744631015a281967fd7a647",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dE(e,t,n){const i=[\"left\",\"right\"],s=[\"right\",\"left\"],l=[\"top\",\"bottom\"],u=[\"bottom\",\"top\"];switch(e){case\"top\":case\"bottom\":return n?t?s:i:t?i:s;case\"left\":case\"right\":return t?l:u;default:r...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96a17507b8790974b43a915143589ff0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hE(e,t,n,i){const s=Mr(e);let l=dE(ti(e),n===\"start\",i);return s&&(l=l.map(u=>u+\"-\"+s),t&&(l=l.concat(l.map(xu)))),l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a90cd396a3aa4a03afb0033c1969cd79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Su(e){return e.replace(/left|right|bottom|top/g,t=>cE[t])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18bcbaa7ecb7670436bb16d3e7a8325e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pE(e){return{top:0,right:0,bottom:0,left:0,...e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1a06a03498306499b129b3e8cbfc3734",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cw(e){return typeof e!=\"number\"?pE(e):{top:e,right:e,bottom:e,left:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "881b3e7bd791e0cff77f2fe6fd59a256",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function na(e){return{...e,top:e.y,left:e.x,right:e.x+e.width,bottom:e.y+e.height}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f3de743fa90844c55acb056d0f9aff9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ov(e,t,n){let{reference:i,floating:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cccb4dcdd639c3fd983f009657384a16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function of(e,t){var n;t===void 0&&(t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7eecc80c9555ce37ee50766e927a8a03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vE(e,t,n){return(e?[...n.filter(s=>Mr(s)===e),...n.filter(s=>Mr(s)!==e)]:n.filter(s=>ti(s)===s)).filter(s=>e?Mr(s)===e||(t?xu(s)!==s:!1):!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dfad969ecf3f89aa9c8330eaa2b684b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const yE=function(e){return e===void 0&&(e={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd091d8d36f499916c9d2f7d86abcbda",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wE(e,t){const{placement:n,platform:i,elements:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8dade27ea243fd76e5993dda67507f31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const xE=function(e){return e===void 0&&(e=0),{name:\"offset\",options:e,async fn(t){var n,i;const{x:s,y:l,placement:u,middlewareData:f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "50beb2150d250b115c656d70b3ab342f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fr(e){var t;return((t=e.ownerDocument)==null?void 0:t.defaultView)||window}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ab78170195a1e872b543caefb5c929cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zr(e){return fr(e).getComputedStyle(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2b24da86d63b69dc7547e9f844b514d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ew(e){const t=Zr(e);let n=parseFloat(t.width),i=parseFloat(t.height);const s=e.offsetWidth,l=e.offsetHeight,u=_u(n)!==s||_u(i)!==l;return u&&(n=s,i=l),{width:n,height:i,fallback:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbd1ee66cf438f376ffffb3cc58e882f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ho(e){return Lw(e)?(e.nodeName||\"\").toLowerCase():\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0a624c8371279722a64b6fb15d3a667c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Aw(){if(Pc)return Pc;const e=navigator.userAgentData;return e&&Array.isArray(e.brands)?(Pc=e.brands.map(t=>t.brand+\"/\"+t.version).join(\" \"),Pc):navigator.userAgent}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "601ef74aec6587b36b813dea85c93cab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qr(e){return e instanceof fr(e).HTMLElement}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "949206d48292602bcc48abf82fd6c7a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function io(e){return e instanceof fr(e).Element}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c2e2840a680e8f8cd73e005c5d4b6ad4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lw(e){return e instanceof fr(e).Node}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f5ed042ef93ad387e8a1906b6a9a14ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zv(e){return typeof ShadowRoot>\"u\"?!1:e instanceof fr(e).ShadowRoot||e instanceof ShadowRoot}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2aecb7711e8c26e944a5b54ab24fc994",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sf(e){const{overflow:t,overflowX:n,overflowY:i,display:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "98ba621191da8982d33ec7c806bb91cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kE(e){return[\"table\",\"td\",\"th\"].includes(ho(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "62ff97fb53db7e00899e12b0874e00a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ph(e){const t=/firefox/i.test(Aw()),n=Zr(e),i=n.backdropFilter||n.WebkitBackdropFilter;return n.transform!==\"none\"||n.perspective!==\"none\"||!!i&&i!==\"none\"||t&&n.willChange===\"filter\"||t&&!!n...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc3655a8a7e5007cdb2d15246a439155",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bp(e){return[\"html\",\"body\",\"#document\"].includes(ho(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7ab71d1a74f2ace9ef128dbe96f757ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mw(e){return io(e)?e:e.contextElement}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "988a4d4e3044dd184b14724309fd6091",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bs(e){const t=Mw(e);if(!Qr(t))return Nw;const n=t.getBoundingClientRect(),{width:i,height:s,fallback:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5300ffa1c36dd67d830d4bbbec554b60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ba(e,t,n,i){var s,l;t===void 0&&(t=!1),n===void 0&&(n=!1);const u=e.getBoundingClientRect(),f=Mw(e);let h=Nw;t&&(i?io(i)&&(h=Bs(i)):h=Bs(e));const p=f?fr(f):window,g=!$w()&&n;let v=(u.left+(g...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "519131accfa30d828d697e528cdf63fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oo(e){return((Lw(e)?e.ownerDocument:e.document)||window.document).documentElement}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e8308da483111c7d7ac49c1cae0e4a0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lf(e){return io(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4291519171ef51a74621ffb432a1c418",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Iw(e){return ba(oo(e)).left+lf(e).scrollLeft}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "208a13820d68028acfddcac0793cb517",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wa(e){if(ho(e)===\"html\")return e;const t=e.assignedSlot||e.parentNode||zv(e)&&e.host||oo(e);return zv(t)?t.host:t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7adcbb383458affc16941c1cc68e72c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pw(e){const t=wa(e);return bp(t)?t.ownerDocument.body:Qr(t)&&sf(t)?t:Pw(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "98b0008911db239c5cd38b77f8de615e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ku(e,t){var n;t===void 0&&(t=[]);const i=Pw(e),s=i===((n=e.ownerDocument)==null?void 0:n.body),l=fr(i);return s?t.concat(l,l.visualViewport||[],sf(i)?i:[]):t.concat(i,ku(i))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0e608307f456bc2543eebebb99f01197",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dv(e,t,n){return t===\"viewport\"?na(function(i,s){const l=fr(i),u=oo(i),f=l.visualViewport;let h=u.clientWidth,p=u.clientHeight,g=0,v=0;if(f){h=f.width,p=f.height;const y=$w();(y||!y&&s===\"fix...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e82dcaf3515b5751107ef2924d6dac99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fv(e){return Qr(e)&&Zr(e).position!==\"fixed\"?e.offsetParent:null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0fd2180af87342db303b7bacb581f0d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hv(e){const t=fr(e);let n=Fv(e);for(;n&&kE(n)&&Zr(n).position===\"static\";)n=Fv(n);return n&&(ho(n)===\"html\"||ho(n)===\"body\"&&Zr(n).position===\"static\"&&!ph(n))?t:n||function(i){let s=wa(i);fo...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe545eba2e7dad61849d3d10d521199a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function TE(e,t,n){const i=Qr(t),s=oo(t),l=ba(e,!0,n===\"fixed\",t);let u={scrollLeft:0,scrollTop:0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a098afe36c3ee6a505b32df99334f2f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xa(e,t){let n=so.themes[e]||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "13e03cafe6dc6e7f6b20087641743120",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function AE(e){const t=[e];let n=so.themes[e]||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4210fd959e6ffdaa31400b5b3808b73a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bv(e){const t=[e];let n=so.themes[e]||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1742c5b6ccad89d8b96213c20591ec67",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qv(e,t){const n=e.indexOf(t);n!==-1&&e.splice(n,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "118a57b3ecef107113f8bea039272d0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Td(){return new Promise(e=>requestAnimationFrame(()=>{requestAnimationFrame(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c723abab4253783681cc613161f53aed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vv(e){let t=Uv[e];return t||(t=Uv[e]=[]),t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c45960900862e35072f3a7e13d2fed3c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ft(e){return function(t){return xa(t.theme,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "42ace174fecaf4766960b08bbed2947e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gv(e,t){for(let n=0;n<tr.length;n++){const i=tr[n];try{i.mouseDownContains=i.popperNode().contains(e.target)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08b5e29858eb218467289db7ee27aa58",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xv(e,t){LE(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bab8867b08ccddc6c09bb3a8b7b06883",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function LE(e,t){const n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "66da5361b7395eb6b11fd79358aa4f8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kv(e,t,n){return n.closeAllPopover||n.closePopover&&t||$E(e,n)&&!t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ff6e13c5e84f9089e9638a9bdcf414e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ME(){for(let e=0;e<tr.length;e++)tr[e].$_computePosition()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3541f60422ba352f43b7f1d8ae151d05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jv(){for(let e=0;e<tr.length;e++)tr[e].hide()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e3345e554e15d76c0af7a5795ff66a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oc(e,t,n,i,s,l,u,f){const h=((u-s)*(t-l)-(f-l)*(e-s))/((f-l)*(n-e)-(u-s)*(i-t)),p=((n-e)*(t-l)-(i-t)*(e-s))/((f-l)*(n-e)-(u-s)*(i-t));return h>=0&&h<=1&&p>=0&&p<=1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5f4a4e991d67437d8d7756b5a97666a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function IE(e,t,n,i,s,l){return se(),ye(\"div\",{ref:\"reference\",class:ot([\"v-popper\",{\"v-popper--shown\":e.slotData.isShown}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bef34fbcf77d6f39aed458a832c67fef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OE(){var e=window.navigator.userAgent,t=e.indexOf(\"MSIE \");if(t>0)return parseInt(e.substring(t+5,e.indexOf(\".\",t)),10);var n=e.indexOf(\"Trident/\");if(n>0){var i=e.indexOf(\"rv:\");return parse...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7603b4f8df1e9adc2aa18cc5d883287",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mh(){mh.init||(mh.init=!0,Qc=OE()!==-1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6ef1239913ebfb8c6b2d55f329ba0b79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function UE(e,t,n,i,s,l){const u=Go(\"ResizeObserver\");return se(),ye(\"div\",{id:e.popperId,ref:\"popover\",class:ot([\"v-popper__popper\",[e.themeClass,e.classes.popperClass,{\"v-popper__popper--shown\":e.sh...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a4542b037b0db4189197cb7e28e7ab89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function GE(e,t,n,i,s,l){const u=Go(\"PopperContent\"),f=Go(\"Popper\");return se(),Ye(f,_i({ref:\"popper\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9bd4d70aab656176d484ade6a83a8b27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ZE(e,t,n,i,s,l){const u=Go(\"PopperContent\"),f=Go(\"Popper\");return se(),Ye(f,_i({ref:\"popper\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ab485c29a687928868bb2a56a3723320",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eA(e,t){let n=e.placement;if(!n&&t)for(const i of Rw)t[i]&&(n=i);return n||(n=xa(e.theme||\"tooltip\",\"placement\")),n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "806985c61a9c4aa226d5e58fa68183f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ww(e,t,n){let i;const s=typeof t;return s===\"string\"?i={content:t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bd0e7b10ddde0bf958b12817e1debe61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nA(){if(Ed)return;_a=Ue([]),Ed=_w({name:\"VTooltipDirectiveApp\",setup(){return{directives:_a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "01bbc2a236f39909994d8540b107ba84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jw(e,t,n){nA();const i=Ue(Ww(e,t,n)),s=Ue(!1),l={id:tA++,options:i,shown:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "72ccade3ef8fad833b2bf67d7de88843",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xp(e){if(e.$_popper){const t=_a.value.indexOf(e.$_popper.item);t!==-1&&_a.value.splice(t,1),delete e.$_popper,delete e.$_popperOldShown,delete e.$_popperMountTarget}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "95ed48594782f6763d6d11bb18a04b81",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yv(e,{value:t,modifiers:n}){const i=Ww(e,t,n);if(!i.content||xa(i.theme||\"tooltip\",\"disabled\"))xp(e);else{let s;e.$_popper?(s=e.$_popper,s.options.value=i):s=jw(e,t,n),typeof t.shown<\"u\"&&t.s...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d0cb5d42a72b7e2248dd69f9971cd5e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sp(e){return String(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bb6fde9db2ccd53dbaf5b05edd5335f1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lA(e=!1){let t=typeof process<\"u\"?process:void 0,n=(t==null?void 0:t.env)||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fecd794a4791b473cea69263f63ed7ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function aA(e=!1){let t=lA(e),n=(u,f,h,p)=>{let g=\"\",v=0;do g+=u.substring(v,p)+h,v=p+f.length,p=u.indexOf(f,v);while(~p);return g+u.substring(v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "71a05ce97d386d39b430cb9fdf833fb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uA(e,t){const n=Zv[cA[t]]||Zv[t]||\"\";return n?`\\x1B[${n[0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "54b738a79b38ba127e56574a2c918239",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fA({showHidden:e=!1,depth:t=2,colors:n=!1,customInspect:i=!0,showProxy:s=!1,maxArrayLength:l=1/0,breakLength:u=1/0,seen:f=[],truncate:h=1/0,stylize:p=String}={},g){const v={showHidden:!!e,dep...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "43ef25f674065a7bdbe16307e645b1c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dA(e){return e>=\"\\uD800\"&&e<=\"\\uDBFF\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9c921dbaf1b6458019be7eea2e451ae0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wo(e,t,n=Ys){e=String(e);const i=n.length,s=e.length;if(i>t&&s>i)return n;if(s>t&&s>i){let l=t-i;return l>0&&dA(e[l-1])&&(l=l-1),`${e.slice(0,l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1965ce960b874a41a55c46648259707b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pr(e,t,n,i=\", \"){n=n||t.inspect;const s=e.length;if(s===0)return\"\";const l=t.truncate;let u=\"\",f=\"\",h=\"\";for(let p=0;p<s;p+=1){const g=p+1===e.length,v=p+2===e.length;h=`${Ys}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2517407ec0382ab308599f3bea66b45",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hA(e){return e.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?e:JSON.stringify(e).replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d7d11e6a5264f1702ded2465d0abccca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ka([e,t],n){return n.truncate-=2,typeof e==\"string\"?e=hA(e):typeof e!=\"number\"&&(e=`[${n.inspect(e,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b513cae143ea96f67d69dbe50c6cfc85",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pA(e,t){const n=Object.keys(e).slice(e.length);if(!e.length&&!n.length)return\"[]\";t.truncate-=4;const i=Pr(e,t);t.truncate-=i.length;let s=\"\";return n.length&&(s=Pr(n.map(l=>[l,e[l]]),t,ka)),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5dec7e3d0415be28393e4cfe886bd08d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gi(e,t){const n=gA(e);t.truncate-=n.length+4;const i=Object.keys(e).slice(e.length);if(!e.length&&!i.length)return`${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee399a538f234bcd36d603930c0bf8cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mA(e,t){const n=e.toJSON();if(n===null)return\"Invalid Date\";const i=n.split(\"T\"),s=i[0];return t.stylize(`${s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3df9c3212bf65fbfc393f33387b13aba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qv(e,t){const n=e[Symbol.toStringTag]||\"Function\",i=e.name;return i?t.stylize(`[${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f05dc34cf10783dd220b9d4ec1b8f3c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vA([e,t],n){return n.truncate-=4,e=n.inspect(e,n),n.truncate-=e.length,t=n.inspect(t,n),`${e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c8390a2627f43e159c8b2f828b6c0c6d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yA(e){const t=[];return e.forEach((n,i)=>{t.push([i,n])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e4218f355aa1edbd6e8563ea86bae3f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bA(e,t){return e.size===0?\"Map{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6151b28b4c231a10d79eecdd422827dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e0(e,t){return wA(e)?t.stylize(\"NaN\",\"number\"):e===1/0?t.stylize(\"Infinity\",\"number\"):e===-1/0?t.stylize(\"-Infinity\",\"number\"):e===0?t.stylize(1/e===1/0?\"+0\":\"-0\",\"number\"):t.stylize(wo(Strin...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4432bc58ec0233532df3b13206ccbd52",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t0(e,t){let n=wo(e.toString(),t.truncate-1);return n!==Ys&&(n+=\"n\"),t.stylize(n,\"bigint\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d562a481a580646e6130ef3e0dd7fd61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xA(e,t){const n=e.toString().split(\"/\")[2],i=t.truncate-(2+n.length),s=e.source;return t.stylize(`/${wo(s,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "251ef6adf221ba0df58d4df3ff12ec7a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function SA(e){const t=[];return e.forEach(n=>{t.push(n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "556a8ed043f499187292d7fa0babcc42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _A(e,t){return e.size===0?\"Set{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5161c6ec3bca9c2673389769dfb3c571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function CA(e){return kA[e]||`\\\\u${`0000${e.charCodeAt(0).toString(TA)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "75b024cd0c36ca292f4cc37374b16dbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function r0(e,t){return n0.test(e)&&(e=e.replace(n0,CA)),t.stylize(`'${wo(e,t.truncate-2)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "762eb6ad01a58aa76b434c1b6199c341",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i0(e){return\"description\"in Symbol.prototype?e.description?`Symbol(${e.description}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dc5263eefc2cc2a756048d0c9ee7841a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eu(e,t){const n=Object.getOwnPropertyNames(e),i=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e):[];if(n.length===0&&i.length===0)return\"{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e5eb5620552cdfb973beb826f29db6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function EA(e,t){let n=\"\";return Ad&&Ad in e&&(n=e[Ad]),n=n||e.constructor.name,(!n||n===\"_class\")&&(n=\"<Anonymous Class>\"),t.truncate-=n.length,`${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55c9ca5dc75f364b6b68b3a308eccff7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function AA(e,t){return e.length===0?\"Arguments[]\":(t.truncate-=13,`Arguments[ ${Pr(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0abf79e0db7d9854a25ec9ec2f685e32",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function MA([e,t],n){return n.truncate-=3,t?`${n.stylize(String(e),\"yellow\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9dfecafd9837593b73072fcc58bed3be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function yh(e,t){return Pr(e,t,NA,`\n`)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9d8b829420e1093f75749480d9633938",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NA(e,t){switch(e.nodeType){case 1:return Gw(e,t);case 3:return t.inspect(e.data,t);default:return t.inspect(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "20721958112df32318f0bba09b27db99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gw(e,t){const n=e.getAttributeNames(),i=e.tagName.toLowerCase(),s=t.stylize(`<${i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "62c6f989d1b395034a00744202405442",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bh(e,t={}){const n=fA(t,bh),{customInspect:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a2744008e6e80b51368982e8b28fb40d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zA(...e){if(typeof e[0]!=\"string\"){const l=[];for(let u=0;u<e.length;u++)l.push(Es(e[u],{depth:0,colors:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e01d398b64ac9a7dd5b19e2a6ff644e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Es(e,t={}){return t.truncate===0&&(t.truncate=Number.POSITIVE_INFINITY),bh(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b12c852c9d99671c2b7bb7801beb3bf3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function DA(e,t={}){typeof t.truncate>\"u\"&&(t.truncate=40);const n=Es(e,t),i=Object.prototype.toString.call(e);if(t.truncate&&n.length>=t.truncate)if(i===\"[object Function]\"){const s=e;return s.name?`...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "02e55d9f232bd8778e45ec25b5f37444",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xw(e){return e!=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f8438777d7a9d72cf461aa3744dc05a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ja(e){return e==null&&(e=[]),Array.isArray(e)?e:[e]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "15390f8daf251f9c65665d5ab90f8326",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kw(e){return e!=null&&typeof e==\"object\"&&!Array.isArray(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6a61c580d90d6beb64cc6d3fc53bb1b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function a0(e,t,n=void 0){const i=t.replace(/\\[(\\d+)\\]/g,\".$1\").split(\".\");let s=e;for(const l of i)if(s=new Object(s)[l],s===void 0)return n;return s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e73af46bf02b80a2b43f29fe50343d3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function c0(){let e=null,t=null;const n=new Promise((i,s)=>{e=i,t=s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abac3664f6aaf3a08c517e4b0561f47c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function FA(e){if(!Number.isNaN(e))return!1;const t=new Float64Array(1);return t[0]=e,new Uint32Array(t.buffer)[1]>>>31===1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "653f15c9018456e5027f999f9a3bc526",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HA(){if(u0)return Md;u0=1;var e,t,n,i,s,l,u,f,h,p,g,v,y,w,L,$,A,E,M;return y=/\\/(?![*\\/])(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\\\]).|\\\\.)*(\\/[$_\\u200C\\u200D\\p{ID_Continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "64068145f8facc484c6cb8749e5801be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yw(){const{setTimeout:e,setInterval:t,clearInterval:n,clearTimeout:i,setImmediate:s,clearImmediate:l,queueMicrotask:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a7ea1a9a85684dbab77cdb50a5420fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wl(e,t){let n=0,i=0,s=0;do{const u=e.next();s=Zw[u],n|=(s&31)<<i,i+=5}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c6486cd77244555ed34cfd858d313b25",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h0(e,t){return e.pos>=t?!1:e.peek()!==BA}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2a35d3060383d3231fd98dca0658ca44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qA(e){const{length:t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0661dd20684956f2b2d6aa0a92ff5cb6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function UA(e){e.sort(VA)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f8f9c4b4aabbf3b448f409f3e4d30bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function VA(e,t){return e[0]-t[0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7bbeec36ab351b1ac2b4dbf679fcd97c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function JA(e){return GA.test(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abd151af06c4c7a47347f5f6eb3a6d7d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function YA(e){return e.startsWith(\"//\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e630e4b212045b96a27757aeadd9d633",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qw(e){return e.startsWith(\"/\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a56610df55cf5e531a23adca0c7578f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ZA(e){return e.startsWith(\"file:\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c00a972f60947e621014ca0486cc100c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p0(e){return/^[.?#]/.test(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "718d6234061b610e82f506ba38d63901",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rc(e){const t=XA.exec(e);return ex(t[1],t[2]||\"\",t[3],t[4]||\"\",t[5]||\"/\",t[6]||\"\",t[7]||\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ed8284df9cd4ba828f8903ae9c062657",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function QA(e){const t=KA.exec(e),n=t[2];return ex(\"file:\",\"\",t[1]||\"\",\"\",Qw(n)?n:\"/\"+n,t[3]||\"\",t[4]||\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2d4885a37696727a64ef37d82ffeaede",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ex(e,t,n,i,s,l,u){return{scheme:e,user:t,host:n,port:i,path:s,query:l,hash:u,type:Ut.Absolute}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6dc339d7532e690937c597fd610c5d8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g0(e){if(YA(e)){const n=Rc(\"http:\"+e);return n.scheme=\"\",n.type=Ut.SchemeRelative,n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "93dd1ae34b58faba033feb7c2f069423",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eL(e){if(e.endsWith(\"/..\"))return e;const t=e.lastIndexOf(\"/\");return e.slice(0,t+1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "30e497a8bc3ef6beaeed16b83edd0810",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tL(e,t){tx(t,t.type),e.path===\"/\"?e.path=t.path:e.path=eL(t.path)+e.path}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8097fa66046ef2cad41ea5e61767bc0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tx(e,t){const n=t<=Ut.RelativePath,i=e.path.split(\"/\");let s=1,l=0,u=!1;for(let h=1;h<i.length;h++){const p=i[h];if(!p){u=!0;continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6ec7990e078c9c787997afad9e6473fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nL(e,t){if(!e&&!t)return\"\";const n=g0(e);let i=n.type;if(t&&i!==Ut.Absolute){const l=g0(t),u=l.type;switch(i){case Ut.Empty:n.hash=l.hash;case Ut.Hash:n.query=l.query;case Ut.Query:case Ut.Re...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5a7555f62281969ee2f8589a45634cab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m0(e,t){return t&&!t.endsWith(\"/\")&&(t+=\"/\"),nL(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17aedb28b3b3a97ad07de1da4007bf64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rL(e){if(!e)return\"\";const t=e.lastIndexOf(\"/\");return e.slice(0,t+1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bafb73220949f2ca7a18a86088012ada",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function aL(e,t){const n=v0(e,0);if(n===e.length)return e;t||(e=e.slice());for(let i=n;i<e.length;i=v0(e,i+1))e[i]=uL(e[i],t);return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "11c137ee767b40b2a1a46401774f6399",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v0(e,t){for(let n=t;n<e.length;n++)if(!cL(e[n]))return n;return e.length}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91e91a9b39e09e9499c5a8836c104077",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cL(e){for(let t=1;t<e.length;t++)if(e[t][po]<e[t-1][po])return!1;return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1fdcbc3c17e9ef0765d0671e7cebbda5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uL(e,t){return t||(e=e.slice()),e.sort(fL)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7f9d164fd0ecee88b1edfc02e997304d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fL(e,t){return e[po]-t[po]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34d849e2ad50bc65c879535338d298de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dL(e,t,n,i){for(;n<=i;){const s=n+(i-n>>1),l=e[s][po]-t;if(l===0)return Tu=!0,s;l<0?n=s+1:i=s-1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3cf22000fe497d9970d89ff161d2925a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hL(e,t,n){for(let i=n+1;i<e.length&&e[i][po]===t;n=i++);return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b58026084222b28d5554ec599af7afa4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pL(e,t,n){for(let i=n-1;i>=0&&e[i][po]===t;n=i--);return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b7f237124463a5e5448e1c3c2880d48f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gL(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9c350f2af302f3a54956aa302b1cc20d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mL(e,t,n,i){const{lastKey:s,lastNeedle:l,lastIndex:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e903fe3136b3ee690de0406be3dd0225",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xL(e){var t;return(t=e)._decoded||(t._decoded=qA(e._encoded))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f87a33189ce74bd5ea18754c7441383",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function SL(e,t){let{line:n,column:i,bias:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "479e1608cc814faa71b3f820b2f0b9c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zc(e,t,n,i){return{source:e,line:t,column:n,name:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58ffe9b58186ab424f498212471db0e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _L(e,t,n,i,s){let l=mL(e,i,t,n);return Tu?l=(s===y0?hL:pL)(e,i,l):s===y0&&l++,l===-1||l===e.length?-1:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dfe37febfa14f47b67609415e52b8f56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function TL(e=\"\"){return e&&e.replace(/\\\\/g,\"/\").replace(kL,t=>t.toUpperCase())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a6ac050c43a05d9c6752547aa34db807",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function EL(){return typeof process<\"u\"&&typeof process.cwd==\"function\"?process.cwd().replace(/\\\\/g,\"/\"):\"/\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0fe89dc7794d866705a54a937825ee4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const AL=function(...e){e=e.map(i=>TL(i));let t=\"\",n=!1;for(let i=e.length-1;i>=-1&&!n;i--){const s=i>=0?e[i]:EL();!s||s.length===0||(t=`${s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1dbea37a6062b5860fba9acfd5bb5f1b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function LL(e,t){let n=\"\",i=0,s=-1,l=0,u=null;for(let f=0;f<=e.length;++f){if(f<e.length)u=e[f];else{if(u===\"/\")break;u=\"/\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "141ff1cd35203451e2bf5eadf2b61ecc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const b0=function(e){return CL.test(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f2828d27787117433dd56cbce36b4b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nx(e){if(!e.includes(\":\"))return[e];const n=/(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(e.replace(/^\\(|\\)$/g,\"\"));if(!n)return[e];let i=n[1];if(i.startsWith(\"async \")&&(i=i.slice(6)),i.startsWith(\"ht...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "69d960edd585c3634d4ad84443618d4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rx(e){let t=e.trim();if($L.test(t)||(t.includes(\" > eval\")&&(t=t.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g,\":$1\")),!t.includes(\"@\")&&!t.includes(\":\")))return null;const n=/((...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77516fc16410da3b038f517a9ac6c09f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ix(e){const t=e.trim();return _p.test(t)?ox(t):rx(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "71025d4429646211dabb3fbebc90498a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ox(e){let t=e.trim();if(!_p.test(t))return null;t.includes(\"(eval \")&&(t=t.replace(/eval code/g,\"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g,\"\"));let n=t.replace(/^\\s+/,\"\").replace(/\\(eval co...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a772bc6a23bf389df994f442d9dce38",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NL(e,t={}){const{ignoreStackEntries:n=ML}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36ba27fc3e3331159a810341b2e6cd7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w0(e,t){return e.some(n=>t.match(n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29775fe2634cbfb7ef0f9940c7815647",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function IL(e){return e.split(`\n`).map(t=>rx(t)).filter(Xw)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "beba5c407d0863596c5308e585e27bdf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function PL(e){return e.split(`\n`).map(t=>ox(t)).filter(Xw)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "263ae25eeb48735c95206822752a6a3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kp(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dae15de68000c3bf2f3426910c90a968",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OL(){if(x0)return Nd;x0=1;var e,t,n,i,s,l,u,f,h,p,g,v,y,w,L,$,A,E,M,O;return w=/\\/(?![*\\/])(?:\\[(?:[^\\]\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*\\]?|[^\\/[\\\\\\n\\r\\u2028\\u2029]+|\\\\.)*(\\/[$_\\u200C\\u200D\\p{ID_Con...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "14d6cbbe80911234da942c371e981ac2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function DL(e,t){const n=\" \",i=\" \";let s=\"\";const l=[];for(const u of zL(e,{jsx:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "62e837541e6d2f47d170afbc4a3567cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function FL(e,t){return HL(e).result}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cee5c24aaeba044af53face100400576",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HL(e,t){return DL(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2100c44e2ba6bb9c6bfeaaf729bb59f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function WL(e=\"\"){return e&&e.replace(/\\\\/g,\"/\").replace(BL,t=>t.toUpperCase())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "76a7846792188338c874024dca9b6fbc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qL(){return typeof process<\"u\"&&typeof process.cwd==\"function\"?process.cwd().replace(/\\\\/g,\"/\"):\"/\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "305415de3b2406941d842c4183d61b57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const _0=function(...e){e=e.map(i=>WL(i));let t=\"\",n=!1;for(let i=e.length-1;i>=-1&&!n;i--){const s=i>=0?e[i]:qL();!s||s.length===0||(t=`${s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1931dfff68070d0d21e91b34ad604f1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function UL(e,t){let n=\"\",i=0,s=-1,l=0,u=null;for(let f=0;f<=e.length;++f){if(f<e.length)u=e[f];else{if(u===\"/\")break;u=\"/\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4ce755efca267a09e09159269099ffdd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const k0=function(e){return jL.test(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "63ac0a99b2d1a7fe7e382ede7513790d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function XL(e,t){GL.set(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "20fa3d56f06d83630b64ee860b313ace",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function KL(e,t){lx.set(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e251e5626484242b2e3678c73c02b5ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function JL(e){return lx.get(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2649d6087ab46ad30c7e03f67d1292e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function YL(e,t){ax.set(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bda7bb9a1a58dfc9d4817cdb2a848fb6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ZL(e){return ax.get(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1c8d604fbeb2088febf82fb83e30e768",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function QL(e,t){const n=t.reduce((l,u)=>(l[u.prop]=u,l),{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cca696263a52486300ba760a171d0dc1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cx(e,t,n){const i=[\"auto\",\"injected\",\"scope\"],s=Object.entries(e).map(([l,u])=>{const f={value:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe3345fc4387db40d39c03e948554237",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(){for(const w of v){if(h.has(w))continue;const L=await t$(e,w,s,p);s[w.prop]=L,h.set(w,L),w.scope===\"test\"&&p.unshift(()=>{h.delete(w)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "15dbbd41be66ab8915f024ea60bfc9fc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function T0(e,t,n){const i=c0();let s=!1;const l=e(t,async u=>{s=!0,i.resolve(u);const f=c0();n.push(async()=>{f.resolve(),await l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "119c767f0bf2115e97e5aa6441dc14b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ux(e,t=new Set,n=[]){return e.forEach(i=>{if(!n.includes(i)){if(!i.isFn||!i.deps){n.push(i);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96216dda2f573c2eb004b1f4f7310b3a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fx(e){let t=FL(e.toString());/__async\\((?:this|null), (?:null|arguments|\\[[_0-9, ]*\\]), function\\*/.test(t)&&(t=t.split(/__async\\((?:this|null),/)[1]);const n=t.match(/[^(]*\\(([^)]*)/);if(!n)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bdde8ae287291ca53a8807e04e94a5a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C0(e){const t=[],n=[];let i=0;for(let l=0;l<e.length;l++)if(e[l]===\"{\"||e[l]===\"[\")n.push(e[l]===\"{\"?\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "47b6d22a2cc879dea112f0ee397f2d24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dx(e,t){function n(s){const l=function(...u){return t.apply(s,u)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cedc76d97e705f496f1cdc723953ab88",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function px(e,t){if(!e)throw new Error(`Vitest failed to find ${t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0726ff91b525ad3765507472edaae8b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wh(){const e=ao.currentSuite||hx;return px(e,\"the current suite\"),e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc39063cf7592486b68c1af6e56a346c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uo(e,t){let n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e5cff4a70702cebc06c5b34b0e0678e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const h=function(A=\"\",E={}){var M;const O=(E==null?void 0:E.timeout)??Xr.config.testTimeout,k={id:\"\",name:A,suite:(M=ao.currentSuite)===null||M===void 0?void 0:M.suite,each:E.each,fails:E.fails,contex...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "09ee4a7c6f878a272343f9f686c390c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(A,...E){ZL(f)[A].push(...E)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0bf4924bf9119edec44c8e0d6b69142c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(A){var E;typeof s==\"number\"&&(s={timeout:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86cde981e8c4af8466482c6a02964014",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(){u.length=0,w()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c0f4b726a1cfa76cf848b807a4d697b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e(t,n,i){var s;const l=this.only?\"only\":this.skip?\"skip\":this.todo?\"todo\":\"run\",u=ao.currentSuite||hx;let{options:f,handler:h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "242e554691e5842e1da79cf9abc68954",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tp(e,t){return c$(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e1edde4357cd90bcbe380330a45740f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lo(e){return typeof e==\"string\"?e:typeof e==\"function\"?e.name||\"<anonymous>\":String(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b47f542131b3742c0dd3c780028a7140",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jr(e,t,n){(e.includes(\"%#\")||e.includes(\"%$\"))&&(e=e.replace(/%%/g,\"__vitest_escaped_%__\").replace(/%#/g,`${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0cd72d208aa81c77a391766f84d03376",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function Cu(e,t){const n=e.join(\"\").trim().replace(/ /g,\"\").split(`\n`).map(s=>s.split(\"|\"))[0],i=[];for(let s=0;s<Math.floor(t.length/n.length);s++){const l={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6ae1839eae7a0c95d0c14a41d5122266",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gx(e,t,n,i){const s=sx(t,e),l={id:d$(s,n),name:s,type:\"suite\",mode:\"queued\",filepath:e,tasks:[],meta:Object.create(null),projectName:n,file:void 0,pool:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2cb43af36a76458c3b0679026f5a53e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mx(e){return Ta(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7ce7348b49cb0e645b8fc3920a985749",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ta(e){return e.type===\"test\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ef6463a5e376baaef4e8bfcb3b73fa86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vx(e){const t=[],n=ja(e);for(const i of n)if(Ta(i))t.push(i);else for(const s of i.tasks)if(Ta(s))t.push(s);else{const l=vx(s);for(const u of l)t.push(u)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e4f54561be418d96dd627e9ec3d6b6c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cp(e=[]){return ja(e).flatMap(t=>Ta(t)?[t]:[t,...Cp(t.tasks)])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "277a7fd9c5ea356dabcde94abadaa6a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xh(e,t,n=!1,i,s){if(t<=0||t===Number.POSITIVE_INFINITY)return e;const{setTimeout:l,clearTimeout:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "770d969209fbf8a8f990a739b92b6696",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(M){if(g._currentTaskStartTime=void 0,g._currentTaskTimeout=void 0,u(L),A0()-p>=t){$();return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "520c3773050603bf3683b09c0339605c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(M){g._currentTaskStartTime=void 0,g._currentTaskTimeout=void 0,u(L),y(M)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2751635503fca0ab1a3e63fc3a2d8416",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const i=function(){throw new Error(\"done() callback is deprecated, use promise instead\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d6365c2d12fa70086ac483cee01c0257",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(u,f,h,p){const g={message:u,type:h||\"notice\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f42d83369ff780f3bbb85dc969db540b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L0(e,t){return t=t.finally(()=>{if(!e.promises)return;const n=e.promises.indexOf(t);n!==-1&&e.promises.splice(n,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d230aa35a85ce3d9f5d15fd5739d57a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bx(e){return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3a4f23540f11fb772689c20db8ab7498",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const O=(...z)=>{n(u({m:M,a:z,t:$0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1af2fc62dad161efb4c83431e50d8647",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(E,...M){var k,z,D;let O;try{O=f(E)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8cb5dba383682ec3d528bc3049fc28eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(g,v){if(h)return h=!h,v;const y=i.call(this,g,v);switch(typeof y){case Eu:if(y===null)return y;case xx:return s.get(y)||I0(s,l,y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00126fdb835f28a07dfc8f1330bf048f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(){L=new Promise((M,O)=>{var z,D;const k=(D=(z=setTimeout(()=>{O(new Error(`Cannot connect to the server in ${u/1e3}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "890909df8860608ab19efe9b029a9917",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(){return L}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "31ddc9db5b9892bc67a1cde88c602d8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ep(e){return cb()?(Dk(e),!0):!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a4755839d5b69629ed0ee12b52c465b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cx(e,t){function n(...i){return new Promise((s,l)=>{Promise.resolve(e(()=>t.apply(this,i),{fn:t,thisArg:this,args:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abe25da37fa3917467f1d3c167544a91",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ax(e,t={}){let n,i,s=Au;const l=h=>{clearTimeout(h),s(),s=Au}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26395cc69a0862547f66c48d43944949",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(){i.value=!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00b88e176317f25e1556e84ee24c00f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(){i.value=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9ecbc13ba34335e12e914a7713b25cd5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const u=(...f)=>{i.value&&e(...f)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d86ae5f6fa0f9a1d750ebc977cfb828c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P0(e,t=!1,n=\"Timeout\"){return new Promise((i,s)=>{setTimeout(t?()=>s(n):i,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b7e35fd56b9d9a4c96160a03e7f4d8d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O0(e){return e.endsWith(\"rem\")?Number.parseFloat(e)*16:Number.parseFloat(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "064647dd7e2dfc8d2787acb9cea75c69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rd(e){return Array.isArray(e)?e:[e]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "57c65fde4b41776a31c6eb288439c79b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lx(...e){if(e.length!==1)return ol(...e);const t=e[0];return typeof t==\"function\"?Ra(Cb(()=>({get:t,set:Au}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "969df4d69438dde25a72ae186d5db9f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fc(e,t=200,n={}){return Cx(Ax(t,n),e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8956034dd40e4080c8cf76a2a114a2e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mx(e,t,n={}){const{eventFilter:i,initialState:s=\"active\",...l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a0dda86fa7bb7bd4d4a7cb1c5ae3979",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ap(e,t=!0,n){q$()?bo(e,n):t?e():Et(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "28c0588759e7be9b72f6c81a679e0157",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kh(e,t=!1){function n(v,{flush:y=\"sync\",deep:w=!1,timeout:L,throwOnTimeout:$}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17fd696f35cdf66255af785c01307db1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(v,y){if(!kt(v))return n(k=>k===v,y);const{flush:w=\"sync\",deep:L=!1,timeout:$,throwOnTimeout:A}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5c6f5ba294f98c2bb4f8fa9cd9aeda20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(v){return n(y=>!!y,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6700af2be48491ddde63a976bfd6e5b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(v){return i(null,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "76246d32093abeb6eeed242999629e5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(v){return i(void 0,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8326f94154b0c454bbcebaf3de515515",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(v){return n(Number.isNaN,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3d4600797376348d5d084e72685fc97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(v,y){return n(w=>{const L=Array.from(w);return L.includes(v)||L.includes(Gt(v))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "095b5b19f74d30898e33ea0c73c28344",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(v){return g(1,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fae3df4d7bb862f71a745187b2c4f1b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(v=1,y){let w=-1;return n(()=>(w+=1,w>=v),y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "df547f943d3b02c22a9cc0f710a9cbf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R0(e){return kh(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d21282be8231f0f514ebffcf1ac4c6fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(f){if(arguments.length)return l.value=f,l.value;{const h=Gt(n);return l.value=l.value===h?Gt(i):h,l.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81c91b90ae71c1e4da7f15b1e372156c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lp(e,t,n={}){const{debounce:i=0,maxWait:s=void 0,...l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8670b15e049af62004cecc8c6f3b4c92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lu(e){var t;const n=Gt(e);return(t=n==null?void 0:n.$el)!=null?t:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad262baea39bf99757aec506a4bbe4a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function go(...e){const t=[],n=()=>{t.forEach(f=>f()),t.length=0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18382b7c95bb1d88f25a344e5bb56592",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nx(e){const t=K$();return _e(()=>(t.value,!!e()))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5b27e74b7f31d4c871ecb5ffeac877a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ix(...e){let t,n,i={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a16e20b100496737803bbf333061866a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(w){if(!u.value||!s)return;h||(h=w);const L=w-h;if(f.value&&L<f.value){p=s.requestAnimationFrame(g);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "84852fd3fbe1883edadeabfbe7e0226d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(){!u.value&&s&&(u.value=!0,h=0,p=s.requestAnimationFrame(g))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "694bee2a0f1e911b71d9dc25e48a188a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(){u.value=!1,p!=null&&s&&(s.cancelAnimationFrame(p),p=null)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f897f18ed28ae0ac288dae6017fa72d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Px(e,t={}){const{window:n=Or,ssrWidth:i=Q$()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b3e1ea32910cd56682f2f3e02878e31b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tM(){return Bc in Hc||(Hc[Bc]=Hc[Bc]||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9771e1d31e48fbb34f1f3f4429469c8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ox(e,t){return eM[e]||t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18be6fc2b4800afee356312c30882fda",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nM(e){return Px(\"(prefers-color-scheme: dark)\",e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1b022ad61e1f433650f37458e027f46",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rM(e){return e==null?\"any\":e instanceof Set?\"set\":e instanceof Map?\"map\":e instanceof Date?\"date\":typeof e==\"boolean\"?\"boolean\":typeof e==\"string\"?\"string\":typeof e==\"object\"?\"object\":Number....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "68ec9f0bacb09e76e581835092f652d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rx(e,t,n,i={}){var s;const{flush:l=\"pre\",deep:u=!0,listenToStorageChanges:f=!0,writeDefaults:h=!0,mergeDefaults:p=!1,shallow:g,window:v=Or,eventFilter:y,onError:w=K=>{console.error(K)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0158f6b454b65863ca10bfab5b07fe0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(K,C){if(v){const P={key:A.value,oldValue:K,newValue:C,storageArea:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9ab7a1fbbe41a099d9149f85384e77b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function te(K){try{const C=n.getItem(A.value);if(K==null)D(C,null),n.removeItem(A.value);else{const P=O.write(K);C!==P&&(n.setItem(A.value,P),D(C,P))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ff569f520a39866f3564227fa3edf920",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(K){const C=K?K.newValue:n.getItem(A.value);if(C==null)return h&&E!=null&&n.setItem(A.value,O.write(E)),E;if(!K&&p){const P=O.read(C);return typeof p==\"function\"?p(P,E):M===\"object\"&&!Array...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6f04f2fd441b9e47ac77995f1ed3cf32",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W(K){if(!(K&&K.storageArea!==n)){if(K&&K.key==null){$.value=E;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c03064d7ef5c6ecc957ddfe6fef816cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(K){W(K.detail)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bc2ce42411d0befb7112af71b10df864",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sM(e={}){const{selector:t=\"html\",attribute:n=\"class\",initialValue:i=\"auto\",window:s=Or,storage:l,storageKey:u=\"vueuse-color-scheme\",listenToStorageChanges:f=!0,storageRef:h,emitAuto:p,disable...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b4bc0263ada341771331d06f80d15d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(k){var z;A(t,n,(z=v[k])!=null?z:k)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "122c9a5b3d716655ce3e130554ffa434",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(k){e.onChanged?e.onChanged(k,E):E(k)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "93d2d9379a256f53bf64c76659c8042b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lM(e={}){const{valueDark:t=\"dark\",valueLight:n=\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cdd4b5bf0392297b4cb0d6663f45ac20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zx(e,t,n={}){const{window:i=Or,...s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "934a076b851f7b30acfc8c118c2510e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uf(e,t,n={}){const{window:i=Or}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f5d6cae68f206055c7e072b27f741c6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function aM(e=\"history\",t={}){const{initialValue:n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e5f3a0e3d79adfacee3922aa9b4a566e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(){if(e===\"history\")return f.location.search||\"\";if(e===\"hash\"){const O=f.location.hash||\"\",k=O.indexOf(\"?\");return k>0?O.slice(k):\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1b3720cba1532dbda75e4bdb9dba1af6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(O){const k=O.toString();if(e===\"history\")return`${k?`?${k}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b180f9c5ea399cdd77e97042204f41e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(){return new URLSearchParams(p())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0ad36fdac09c8d30eed6bb50e2cf207e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(O){const k=new Set(Object.keys(h));for(const z of O.keys()){const D=O.getAll(z);h[z]=D.length>1?D:O.get(z)||\"\",k.delete(z)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e2296a540218dd1643375ee390f7a7cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(){l&&$(v(),!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55002d81c9d81a5842cc9df9e08d6055",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dx(e={}){const{window:t=Or,initialWidth:n=Number.POSITIVE_INFINITY,initialHeight:i=Number.POSITIVE_INFINITY,listenOrientation:s=!0,includeScrollbar:l=!0,type:u=\"inner\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b8c89394a0e6fbf75ad8042a330602a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fx(e){return e.replace(/[&<>\"']/g,t=>cM[t])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "030ee64466bbc7c0d1854f65752bd77b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qa(e){return Object.hasOwnProperty.call(e,\"tasks\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "044074e46ffb0832738c9a52a6da6a24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dM(e,t){return typeof e!=\"string\"||typeof t!=\"string\"?!1:e.toLowerCase().includes(t.toLowerCase())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "251258417690493cacce865456ca6733",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bx(e){if(!e)return\"\";const t=e.split(\"\").reduce((i,s,l)=>i+s.charCodeAt(0)+l,0),n=[\"yellow\",\"cyan\",\"green\",\"magenta\"];return n[t%n.length]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "61dc6dcf6750393950c8506a9171f87a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wx(e){switch(e){case\"blue\":case\"green\":case\"magenta\":case\"black\":case\"red\":return\"white\";case\"yellow\":case\"cyan\":case\"white\":default:return\"black\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "823c500ac7b33f8a05ff9b3347e95971",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hM(e){return e.type===\"test\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2bace736b59c19d3c2bbb248dac4c58",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pM(e){return e.mode===\"run\"&&e.type===\"test\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "356a20ba4d6c190a994e9992add39b05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function On(e){return e.type===\"file\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cb9c98b5339a2906292c9a979caedb78",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ci(e){return e.type===\"file\"||e.type===\"suite\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58d38d5f6541f29631a18931c99ca55e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gM(e=Ae.root.tasks){return e.sort((t,n)=>`${t.filepath}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f02f46c332aed7c308b45db17ec56401",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ea(e,t=!1){var i,s,l,u,f;let n=Ae.nodes.get(e.id);if(n?(n.typecheck=!!e.meta&&\"typecheck\"in e.meta,n.state=(i=e.result)==null?void 0:i.state,n.mode=e.mode,n.duration=(s=e.result)==null?void 0...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6d0aa3f26b604d0024005943fca24e36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jx(e,t){const n=Ae.nodes.get(e);if(!n||!Ci(n))return;const i=ht.state.idMap.get(e);if(!(!i||!qa(i)))return Ua(n.parentId,i,t&&i.tasks.length>0),[n,i]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a2e436fc6bfd877f94696bfa1f154d21",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mM(e){const t=Ae.nodes.get(e);if(!t)return;const n=ht.state.idMap.get(e);!n||!mx(n)||Ua(t.parentId,n,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7c3c22715c6de81494b77ff7f0b5b392",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ua(e,t,n){var u,f,h,p,g;const i=Ae.nodes.get(e);let s;const l=((u=t.result)==null?void 0:u.duration)!=null?Math.round((f=t.result)==null?void 0:f.duration):void 0;if(i&&(s=Ae.nodes.get(t.id),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f885d13b7c82fb1c43b09e2aefbf04c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vM(e){const t=Ae.nodes.get(e);if(!t||!Ci(t))return;const n=new Set(Rr.value);n.delete(t.id);const i=[...bM(t)];Rr.value=Array.from(n),Jn.value=i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "638497185685d24a1973b85319a5ef1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yM(){Eh(Ae.root.tasks);const e=[...Jn.value.filter(On)];Eh(e),Rr.value=[],pn.value.expandAll=!0,Jn.value=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a770567f24ae6ca3d3bfb3a4a18de667",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Eh(e){for(const t of e)Ci(t)&&(t.expanded=!1,Eh(t.tasks))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3e54bed9438020ec505354a61f238810",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wM(e,t,n){return e?Gx(e,t,n):!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b62b7dfde47ca1f9145c691254902a16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xM(e,t,n,i,s){if(i){if(On(t))return s.has(t.id)?t:void 0;if(n.has(t.id)){const l=Ae.nodes.get(t.parentId);return l&&On(l)&&s.add(l.id),t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ce3084c7b6cb8c78a8d2be5f3405dc70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _M(e,t){var n,i;return(t.success||t.failed)&&\"result\"in e&&(t.success&&((n=e.result)==null?void 0:n.state)===\"pass\"||t.failed&&((i=e.result)==null?void 0:i.state)===\"fail\")?!0:t.skipped&&\"mod...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "64f3b3fd9d96e619443df417f8e0aa9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gx(e,t,n){if(t.length===0||dM(e.name,t))if(n.success||n.failed||n.skipped){if(_M(e,n))return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36468f7c74983ab7abeb4e05632f1c77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function F0(e,t,n){const i=ht.state.idMap.get(e.id);return i?Gx(i,t,n):!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cccb4f660eb32e1da2e607654ad5d166",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kM(e,t,n){const i=jx(e,!1);if(!i)return;const[s,l]=i;for(const p of l.tasks)Ua(s.id,p,!1);s.expanded=!0;const u=new Set(Rr.value);u.add(s.id);const f=new Set(Vx(s,t,n)),h=[...EM(s,f)];Rr.valu...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f860b4c18cef345cb516a9ce76045e0e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function TM(e,t){Mp(Ae.root.tasks,!1);const n=[...Ux(e,t)];pn.value.expandAll=!1,Rr.value=[],Jn.value=n,ff.value=n.filter(On).map(i=>gr(i.id))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6c823485be7812f6823f9260f5b4ae0b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function CM(e,t){if(e.size)for(const n of Jn.value)e.has(n.id)&&(n.expanded=!0);else t&&Mp(Jn.value.filter(On),!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "029d342fb39deff09a102378e7b8a43a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mp(e,t){for(const n of e)Ci(n)&&(n.expanded=!0,Mp(n.tasks,!1));t&&(pn.value.expandAll=!1,Rr.value=[])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36acb46e3298c9b1aa902dbd27d7b6b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Np(e){return vx(e).some(t=>{var n,i;return(i=(n=t.result)==null?void 0:n.errors)==null?void 0:i.some(s=>typeof(s==null?void 0:s.message)==\"string\"&&s.message.match(/Snapshot .* mismatched/))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4bd418b016c972725ed43a64c633fc79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function AM(e,t,n,i){e.map(s=>[`${s.filepath}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9abf79f898e0b8f01b88d8be633399a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function LM(e){queueMicrotask(()=>{const t=Ae.pendingTasks,n=ht.state.idMap;for(const i of e)if(i[1]){const l=n.get(i[0]);if(l){let u=t.get(l.file.id);u||(u=new Set,t.set(l.file.id,u)),u.add(l.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4dc22c50259b27fed99d74c05cfceacb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H0(e,t,n,i,s){e&&RM(n);const l=!e;queueMicrotask(()=>{t?IM(l):PM(l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8a7131de2d505b26932e62a65d66cb6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NM(){const e=ht.state.idMap;let t;for(const n of MM())t=e.get(n.parentId),t&&qa(t)&&t.mode===\"todo\"&&(t=e.get(n.id),t&&(t.mode=\"todo\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "05bbfc0df408bd2b33fdbf1fdb059e70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function IM(e){const t=ht.state.getFiles(),n=Ae.nodes,i=t.filter(l=>!n.has(l.id));for(let l=0;l<i.length;l++)Ea(i[l],e),Mu(i[l].tasks);const s=Ae.root.tasks;for(let l=0;l<s.length;l++){const u=s[l],f=...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "276364510eba338daab7363fe5052902",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function PM(e){const t=new Map(Ae.pendingTasks.entries());Ae.pendingTasks.clear();const n=Ae.nodes,i=Array.from(t.keys()).filter(f=>!n.has(f)).map(f=>gr(f)).filter(Boolean);let s;for(let f=0;f<i.lengt...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e64f762a2584ae915812efba3f586b89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OM(e,t,n=!1){const i=pn.value.expandAll,s=i!==!0,l=new Set(Rr.value),u=l.size>0&&i===!1||s;queueMicrotask(()=>{B0(e,t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "25856e9e097de46b321af0b68ffee81d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function B0(e,t,n){$p(e,t),n&&(NM(),df.value=\"idle\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f274db7d569e15e0ce174df6b82ffc6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mu(e){let t;for(let n=0;n<e.length;n++)t=e[n],qa(t)?jx(t.id,!0):mM(t.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e99c00ac30c24d2cddf8c2db8e25137f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function RM(e){e.files=0,e.time=\"\",e.filesFailed=0,e.filesSuccess=0,e.filesIgnore=0,e.filesRunning=0,e.filesSkipped=0,e.filesTodo=0,e.testsFailed=0,e.testsSuccess=0,e.testsIgnore=0,e.testsSkipped=0,e....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4c6f64fe1b4a449eaa46dda107671722",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zM(e){var u,f,h,p,g,v;const t=ht.state.idMap,n=new Map(Ae.root.tasks.filter(y=>t.has(y.id)).map(y=>[y.id,y])),i=Array.from(n.values()).map(y=>[y.id,gr(y.id)]),s={files:n.size,time:\"\",filesFai...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8bd7c4be749b832bc2b6e31c9902d2a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xx(e,t=\"\",n){var s,l;const i={failed:0,success:0,skipped:0,running:0,total:0,ignored:0,todo:0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9899864914648d01a224e0ddad877ea1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function DM(e,t,n,i,s,l){var u,f;if(t)return n.map(h=>Xx(h,s,l)).reduce((h,{failed:p,success:g,ignored:v,running:y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "53a68f9313de39e34534c2791f33784b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HM(){const e=mo.value;if(e&&e.length>0){const t=gr(e);t?(Qs.value=t,qs.value=!1,vo.value=!1):G$(()=>ht.state.getFiles(),()=>{Qs.value=gr(e),qs.value=!1,vo.value=!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0cee49b83f989a56417a71baa2352338",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Iu(e){qs.value=e,vo.value=!1,e&&(Qs.value=void 0,mo.value=\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "27b8f9ac3f71426a558f3e4307941681",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hf({file:e,line:t,view:n,test:i,column:s}){mo.value=e,Jx.value=t,Yx.value=s,jn.value=n,js.value=i,Qs.value=gr(e),Iu(!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34179bd45fbd5f57ae0e0fbcd6f6d412",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function BM(e){hf({file:e.file.id,test:e.type===\"test\"?e.id:null,line:null,view:null,column:null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f59907a29dcd5ae9b1d18669afc48a16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function WM(){vo.value=!0,qs.value=!1,Qs.value=void 0,mo.value=\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "de9cfbfbd99452df1626c9b92c07592d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jM(){At.details.browser=100,At.details.main=0,co.value=[100,0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "66c8ee5f06b3cc101331cc2ef4cf6a23",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zx(){if((Nt==null?void 0:Nt.provider)===\"webdriverio\"){const e=window.outerWidth*(At.details.size/100);return(er.value[0]+20)/e*100}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e4108492392fc85ad9a6a42cca707217",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qM(){At.details.browser=Zx(),At.details.main=100-At.details.browser,co.value=[At.details.browser,At.details.main]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7d1bdb14c9fb5d951c728061be685381",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function UM(){At.navigation=33,At.details.size=67,Us.value=[33,67]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "50ddad84d6656ca71991d29f323cbd0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qx(){At.details.main!==0&&(At.details.browser=Zx(),At.details.main=100-At.details.browser,co.value=[At.details.browser,At.details.main])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5b31df966b51321cde0c3550b084da78",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yfe(){if(j0)return Ts;j0=1;var e=Ts&&Ts.__importDefault||function(s){return s&&s.__esModule?s:{default:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d95b235410572940a92e14d150cbba5b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(s){return s>=55296&&s<=57343||s>1114111?\"�\":(s in t.default&&(s=t.default[s]),n(s))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "19d429993a46304fc73e112f4f0dade4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U0(){if(q0)return Tr;q0=1;var e=Tr&&Tr.__importDefault||function(p){return p&&p.__esModule?p:{default:p}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "701cecd4af2d5d50cab7fe2a9f79fe18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(p){var g=h(p);return function(v){return String(v).replace(l,g)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "442dae470f3e408b01edc837b6452f6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(p){return function(v){if(v.charAt(1)===\"#\"){var y=v.charAt(2);return y===\"X\"||y===\"x\"?s.default(parseInt(v.substr(3),16)):s.default(parseInt(v.substr(2),10))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "49dfca8a70c20630f4297e7ba3328e89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function G0(){if(V0)return Ln;V0=1;var e=Ln&&Ln.__importDefault||function(E){return E&&E.__esModule?E:{default:E}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "35c58bfc73cf755a67af5172a368824d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(E){return Object.keys(E).sort().reduce(function(M,O){return M[E[O]]=\"&\"+O+\";\",M}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5c3236b81f3eb91fe64879daaba68a33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(E){for(var M=[],O=[],k=0,z=Object.keys(E);k<z.length;k++){var D=z[k];D.length===1?M.push(\"\\\\\"+D):O.push(D)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "678e7e2123aec8dfbb8a45575f0466d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(E){return\"&#x\"+(E.length>1?g(E):E.charCodeAt(0)).toString(16).toUpperCase()+\";\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad684c77bcd3655d75d56165fec7df73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(E,M){return function(O){return O.replace(M,function(k){return E[k]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "077905355bff203f859e9b6df520f59a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(E){return E.replace(w,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "700ffcf6ebbbac1098d582e9e440f01b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(E){return function(M){return M.replace(w,function(O){return E[O]||v(O)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3e5f4d0911506add05d8fa2b2c2a80d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bfe(){return X0||(X0=1,function(e){Object.defineProperty(e,\"__esModule\",{value:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c57f873072ba49b45d1db75108b94cf7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(h,p){return(!p||p<=0?t.decodeXML:t.decodeHTML)(h)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bc43c2a58a894877bcf6a7205317a690",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(h,p){return(!p||p<=0?t.decodeXML:t.decodeHTMLStrict)(h)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a7d80edeb3f9d31386023b7feb75a36d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(h,p){return(!p||p<=0?n.encodeXML:n.encodeHTML)(h)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "503ae62027a8f4cb310de92ef27e88ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wfe(){if(K0)return Dd;K0=1;function e(C,P){if(!(C instanceof P))throw new TypeError(\"Cannot call a class as a function\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8eac58cfabcbcf8ba72d504c6914dd3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t(C,P){for(var I=0;I<P.length;I++){var S=P[I];S.enumerable=S.enumerable||!1,S.configurable=!0,\"value\"in S&&(S.writable=!0),Object.defineProperty(C,S.key,S)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe00365c932199c259822bd05518b4e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(C,P,I){return P&&t(C.prototype,P),C}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eaedf082f34f2a3c08aa8e5a5cdbd583",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(C,P){var I=typeof Symbol<\"u\"&&C[Symbol.iterator]||C[\"@@iterator\"];if(!I){if(Array.isArray(C)||(I=s(C))||P){I&&(C=I);var S=0,R=function(){}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "87373e7f78e7e18e0394f2450c7a73b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(C,P){if(C){if(typeof C==\"string\")return l(C,P);var I=Object.prototype.toString.call(C).slice(8,-1);if(I===\"Object\"&&C.constructor&&(I=C.constructor.name),I===\"Map\"||I===\"Set\")return Array.f...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eac96a2f5f3265af5aa13fa7fe194827",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(C,P){(P==null||P>C.length)&&(P=C.length);for(var I=0,S=new Array(P);I<P;I++)S[I]=C[I];return S}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d6295a0183ae29911c1bcab503995246",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(){var C={0:\"#000\",1:\"#A00\",2:\"#0A0\",3:\"#A50\",4:\"#00A\",5:\"#A0A\",6:\"#0AA\",7:\"#AAA\",8:\"#555\",9:\"#F55\",10:\"#5F5\",11:\"#FF5\",12:\"#55F\",13:\"#F5F\",14:\"#5FF\",15:\"#FFF\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "296c819557510601737544d8572ec284",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(C,P,I,S){var R=16+C*36+P*6+I,B=C>0?C*40+55:0,oe=P>0?P*40+55:0,ue=I>0?I*40+55:0;S[R]=v([B,oe,ue])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c779b0646f50d6318d1b768547dc19c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(C){for(var P=C.toString(16);P.length<2;)P=\"0\"+P;return P}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bdc5c9c77f88d19296810676c7d64bec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(C){var P=[],I=i(C),S;try{for(I.s();!(S=I.n()).done;){var R=S.value;P.push(g(R))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b3826705da91a70da7f33f99a60cfecb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(C,P,I,S){var R;return P===\"text\"?R=O(I,S):P===\"display\"?R=L(C,I,S):P===\"xterm256Foreground\"?R=D(C,S.colors[I]):P===\"xterm256Background\"?R=te(C,S.colors[I]):P===\"rgb\"&&(R=w(C,I)),R}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a206d6bb1d23e169777aff2f8d01f14f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(C,P){P=P.substring(2).slice(0,-1);var I=+P.substr(0,2),S=P.substring(5).split(\";\"),R=S.map(function(B){return(\"0\"+Number(B).toString(16)).substr(-2)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a5bc99f1c76d859c1bd490c3d8516324",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(C,P,I){P=parseInt(P,10);var S={\"-1\":function(){return\"<br/>\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0ec46ac968a6d73bb426f9c5f9e24598",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(C,P){for(var I=[],S=C;S<=P;S++)I.push(S);return I}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e1efb90e68749fce1268db9eb0bc4d72",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(C){return function(P){return(C===null||P.category!==C)&&C!==\"all\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3dfce11c720db09c0422e61e666d3f24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(C){C=parseInt(C,10);var P=null;return C===0?P=\"all\":C===1?P=\"bold\":2<C&&C<5?P=\"underline\":4<C&&C<7?P=\"blink\":C===8?P=\"hide\":C===9?P=\"strike\":29<C&&C<38||C===39||89<C&&C<98?P=\"foreground-col...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8a7c06c9a24b19cfac681e5a2334b621",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(C,P){return P.escapeXML?u.encodeXML(C):C}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a2f8e3cf34b2f05ab390afbe0afc95ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(C,P,I){return I||(I=\"\"),C.push(P),\"<\".concat(P).concat(I?' style=\"'.concat(I,'\"'):\"\",\">\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "912e6e7bdcf4ec511b2e69683dc8fffa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(C,P){return k(C,\"span\",P)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "53c93e8730b40179694152ca41fb629c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(C,P){return k(C,\"span\",\"color:\"+P)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90e4f929f95891b4ca8d8f81a6472996",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function te(C,P){return k(C,\"span\",\"background-color:\"+P)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b2a0fb4436529c18caa287833247357",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(C,P){var I;if(C.slice(-1)[0]===P&&(I=C.pop()),I)return\"</\"+P+\">\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "89787d1f21e02e6e4ebad9102530e4bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W(C,P,I){var S=!1,R=3;function B(){return\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b0dae7954d87edf41881940e3a09c6bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oe(V,Y){return I(\"xterm256Foreground\",Y),\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d343aec359c93066a29cd054343e21ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ue(V,Y){return I(\"xterm256Background\",Y),\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aa789733449e0d04e8c6d262125ba5d1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function we(V){return P.newline?I(\"display\",-1):I(\"text\",V),\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3cb8c586aa014ae16f4d3bf3814e54a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pe(V,Y){S=!0,Y.trim().length===0&&(Y=\"0\"),Y=Y.trimRight(\";\").split(\";\");var fe=i(Y),pe;try{for(fe.s();!(pe=fe.n()).done;){var he=pe.value;I(\"display\",he)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "edbbee68bae888e07326d97725c22278",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qe(V){return I(\"text\",V),\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "523dc1af29bc3c89e4f76ccf74f3f0d6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ze(V){return I(\"rgb\",V),\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5fecb564ccd417330e3666c98b53a6db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Je(V,Y){Y>R&&S||(S=!1,C=C.replace(V.pattern,V.sub))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c6636ee7c69fdd8a704e0ae2f678ee37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(C,P,I){return P!==\"text\"&&(C=C.filter(E(M(I))),C.push({token:P,data:I,category:M(I)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "76de9ed3df666688dd60c80ddd32cd5e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C(P){e(this,C),P=P||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a5bce97d8f1ca2a2d20845d3c683552a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sa(e){return e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b7937a7af55bbab9d87de5353a33dd0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _fe(e,t){return t&&e.endsWith(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "828acdc1feb4d8b1d11fcbddee12beab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ip(e,t,n){const i=encodeURI(`${e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "30bbc70180d9757a5caf34a57c296c77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pp(e){return new Sfe({fg:e?\"#FFF\":\"#000\",bg:e?\"#000\":\"#FFF\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7a712852d0b6d174e529388db32d3124",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kfe(e){return e===null||typeof e!=\"function\"&&typeof e!=\"object\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e078361d1471963ae5a888cf88cd2ef0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n1(e){let t=e;if(kfe(e)&&(t={message:String(t).split(/\\n/g)[0],stack:String(t),name:\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86b62a8079634976bd0eeaf879e94478",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tfe(e,t){var s,l;let n=\"\";return(s=t.message)!=null&&s.includes(\"\\x1B\")&&(n=`<b>${t.name}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c325c0d7649d7339048701951c0f5f30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function r1(e,t){const n=Pp(e);return t.map(i=>{var u;const s=i.result;if(!s||s.htmlError)return i;const l=(u=s.errors)==null?void 0:u.map(f=>Tfe(n,f)).filter(f=>f!=null).join(\"<br><br>\");return l!=nu...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "47f07160854e03c37532f1dcb9e21b18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ffe(e,t){return Op(e,{i:2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8f903ee79745bec5213ce1ba76a3005",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hfe(e,t){var n=Rfe(e);return n+8>e.length&&qn(6,\"invalid gzip data\"),Op(e.subarray(n,-8),{i:2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8acf921ca267369b9d9a398046df673e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bfe(e,t){return Op(e.subarray(Dfe(e),-4),{i:2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "99fbe233fdb1669b01f747b51d0c83e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wfe(e,t){return e[0]==31&&e[1]==139&&e[2]==8?Hfe(e,t):(e[0]&15)!=8||e[0]>>4>7||(e[0]<<8|e[1])%31?Ffe(e,t):Bfe(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d4facd25f9b4bb8d02cfbe58cb8fa874",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ufe(e,t){var n;if(Mh)return Mh.decode(e);var i=qfe(e),s=i.s,n=i.r;return n.length&&qn(8),s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a53749dd8fb94266c2a2048a58d6abe0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const Bd=()=>{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3d9c5d0df6b9ee320c8f4e4bcfba085f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vfe(){const e=rr({state:new Tx,waitForConnection:u,reconnect:s,ws:new EventTarget}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "861ed113eb66a9f00ee82098a77ca294",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(){l()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6393d258b9ca149b34d1808ee41ef282",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(){var g;const f=await fetch(window.METADATA_PATH),h=((g=f.headers.get(\"content-type\"))==null?void 0:g.toLowerCase())||\"\";if(h.includes(\"application/gzip\")||h.includes(\"application/x-gzip\"))...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2316f0c493b834d883ae1785af202f1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(){return i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "af05967ed74d61b6ed5b54b842d165ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const ht=function(){return pr?Vfe():D$(KM,{reactive:(t,n)=>n===\"state\"?rr(t):rn(t),handlers:{onTestAnnotate(t,n){Ae.annotateTest(t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3506a7d87fe3b419098fdc577891b3ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gr(e){const t=ht.state.idMap.get(e);return t||void 0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bd112b89af805225917837d7216708e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xfe(){return Rp(ht.state.getFiles())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eee14264421f885727713f37213ffd11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function d1(e){delete e.result;const t=Ae.nodes.get(e.id);if(t&&(t.state=void 0,t.duration=void 0,qa(e)))for(const n of e.tasks)d1(n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f496df10357b7aa69679647866d7de5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kfe(e){const t=Ae.nodes;e.forEach(n=>{delete n.result,Cp(n).forEach(s=>{if(delete s.result,t.has(s.id)){const l=t.get(s.id);l&&(l.state=void 0,l.duration=void 0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5275998f25ed9f2720377ae68a443f5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rp(e){return Kfe(e),Ae.startRun(),ht.rpc.rerun(e.map(t=>t.filepath),!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ebed8052d7cf4ba7992be4ff150a2535",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jfe(e){return d1(e),Ae.startRun(),ht.rpc.rerunTask(e.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e1fecf1e1c5dcd3ee04e739fc35b1e02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(p){const g=t[p];return er.value[0]===g[0]&&er.value[1]===g[1]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b3b3043706100f43728d0e203787f533",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(p){er.value=t[p],(Nt==null?void 0:Nt.provider)===\"webdriverio\"&&Qx()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "416f369128934c9dbebf3118d2fd9e2f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pu(e){if(pr)return`/data/${e.path}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "79d232ae91e28b04791d1d6180e5b2c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g1(e,t){const n=t?wde.getExtension(t):null;return e.replace(/[\\x00-\\x2C\\x2E\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7F]+/g,\"-\")+(n?`.${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "54a87b1ac984c03a671a55b00717c906",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xde(e){const t=e.path||e.body;return typeof t==\"string\"&&(t.startsWith(\"http://\")||t.startsWith(\"https://\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7d48d632e14fa29c97b8ca2b2ada42c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sl(){return Y0||(Y0=1,function(e,t){(function(n,i){e.exports=i()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "94ddd0f07f0d216bf422de6ac6dc0fa3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K(r){return new RegExp(\"(^|\\\\s)\"+r+\"(?:$|\\\\s)\\\\s*\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "252fb6e62652150269aa9a7e52f763ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P(r){for(var o=r.childNodes.length;o>0;--o)r.removeChild(r.firstChild);return r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2b51eb927fa0ca5f5ec868fe57983c5b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function I(r,o){return P(r).appendChild(o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2c42562d5a92367cf14b93a2b0ffa660",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S(r,o,c,a){var d=document.createElement(r);if(c&&(d.className=c),a&&(d.style.cssText=a),typeof o==\"string\")d.appendChild(document.createTextNode(o));else if(o)for(var m=0;m<o.length;++m)d.app...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8385a41ceb7101bb68008fec1de3920c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R(r,o,c,a){var d=S(r,o,c,a);return d.setAttribute(\"role\",\"presentation\"),d}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "181419ea91c923cf17ba8bf3d867f3d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oe(r,o){if(o.nodeType==3&&(o=o.parentNode),r.contains)return r.contains(o);do if(o.nodeType==11&&(o=o.host),o==r)return!0;while(o=o.parentNode)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "01054890e99f7cda6f8aabda789523ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ue(r){var o=r.ownerDocument||r,c;try{c=r.activeElement}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0c37d64366f29415a2cd57014ddbf43b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function we(r,o){var c=r.className;K(o).test(c)||(r.className+=(c?\" \":\"\")+o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a404bf08ac59b7866bf665c8380b5b63",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pe(r,o){for(var c=r.split(\" \"),a=0;a<c.length;a++)c[a]&&!K(c[a]).test(o)&&(o+=\" \"+c[a]);return o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a408fda11bc6536a0392e3d7c95cd887",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ze(r){return r.display.wrapper.ownerDocument}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3be55d39e5a67664c800c42d976e4bf3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ke(r){return Je(r.display.wrapper)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "27fba280dd3b31616a280a5a7817f428",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Je(r){return r.getRootNode?r.getRootNode():r.ownerDocument}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bf8d01cb5f3edec4c86b6a72ee767e51",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ie(r){return Ze(r).defaultView}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "027a8691049fe4175e0c8c46374d006c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U(r){var o=Array.prototype.slice.call(arguments,1);return function(){return r.apply(null,o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8842202d95a511b4d0c53315c10c1e12",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Q(r,o,c){o||(o={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a6215965faf101a3d85109a828190cc1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function J(r,o,c,a,d){o==null&&(o=r.search(/[^\\s\\u00a0]/),o==-1&&(o=r.length));for(var m=a||0,b=d||0;;){var x=r.indexOf(\"\t\",m);if(x<0||x>=o)return b+(o-m);b+=x-m,b+=c-b%c,m=x+1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ab4a4a0b6a9bc9f5219ab5d34aa79767",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ge(r,o){for(var c=0;c<r.length;++c)if(r[c]==o)return c;return-1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34fdf5307a6de8c9799a2d1cd5598e35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function he(r,o,c){for(var a=0,d=0;;){var m=r.indexOf(\"\t\",a);m==-1&&(m=r.length);var b=m-a;if(m==r.length||d+b>=o)return a+Math.min(b,o-d);if(d+=m-a,d+=c-d%c,a=m+1,d>=o)return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ebdfe76647923e44e518a21828a3383",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ee(r){for(;Ce.length<=r;)Ce.push(ve(Ce)+\" \");return Ce[r]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d719bea64fc077945c603932688541ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ve(r){return r[r.length-1]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a3d8114be01adbc53b77983669fb44fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function be(r,o){for(var c=[],a=0;a<r.length;a++)c[a]=o(r[a],a);return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8cbddc5a765d7bfe269ee9e9a2e8119a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function We(r,o,c){for(var a=0,d=c(o);a<r.length&&c(r[a])<=d;)a++;r.splice(a,0,o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b183db3a23470284afdcc8167f5842b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Me(){}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ec2f9893db1988f98402cdb798a79888",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function De(r,o){var c;return Object.create?c=Object.create(r):(Me.prototype=r,c=new Me),o&&Q(o,c),c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "51bb140980254f8832e5a7cedfffba7b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rt(r){return/\\w/.test(r)||r>\"\"&&(r.toUpperCase()!=r.toLowerCase()||Ve.test(r))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2cb792653cb8f153cbb5f62544590eb2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function st(r,o){return o?o.source.indexOf(\"\\\\w\")>-1&&rt(r)?!0:o.test(r):rt(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "025e9942bfbb6ccd36e2408506ea9d4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ut(r){for(var o in r)if(r.hasOwnProperty(o)&&r[o])return!1;return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "297fbf848af49431d7e71a1d6f25d85b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lt(r){return r.charCodeAt(0)>=768&&It.test(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9307488a3780f128cd7b67384790dcee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xt(r,o,c){for(;(c<0?o>0:o<r.length)&&lt(r.charAt(o));)o+=c;return o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "48dfa6e86aa93bd1988b2811041715a4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bt(r,o,c){for(var a=o>c?-1:1;;){if(o==c)return o;var d=(o+c)/2,m=a<0?Math.ceil(d):Math.floor(d);if(m==o)return r(m)?o:c;r(m)?c=m:o=m+a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bcb1becf17714c12f9f6d587cabae68b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dn(r,o,c,a){if(!r)return a(o,c,\"ltr\",0);for(var d=!1,m=0;m<r.length;++m){var b=r[m];(b.from<c&&b.to>o||o==c&&b.to==o)&&(a(Math.max(b.from,o),Math.min(b.to,c),b.level==1?\"rtl\":\"ltr\",m),d=!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "95aed74bff869c811875d0a9a8658e26",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ft(r,o,c){var a;Hr=null;for(var d=0;d<r.length;++d){var m=r[d];if(m.from<o&&m.to>o)return d;m.to==o&&(m.from!=m.to&&c==\"before\"?a=d:Hr=d),m.from==o&&(m.from!=m.to&&c!=\"before\"?a=d:Hr=d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60711f6f697c2725f2cbe1cfe66b7c0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function c(T){return T<=247?r.charAt(T):1424<=T&&T<=1524?\"R\":1536<=T&&T<=1785?o.charAt(T-1536):1774<=T&&T<=2220?\"r\":8192<=T&&T<=8203?\"w\":T==8204?\"b\":\"L\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "49e2e536f64d5db56f198cdb1ed16608",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _(T,H,X){this.level=T,this.from=H,this.to=X}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "82c4fa594cba9d5b37f29f1330c26ca0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tt(r,o){var c=r.order;return c==null&&(c=r.order=Fn(r.text,o)),c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abe8a91bed302989e03d0a4d947f4014",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oi(r,o){return r._handlers&&r._handlers[o]||Ya}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f59d0e3ec02b1d142f4861ff95b3ca38",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cn(r,o,c){if(r.removeEventListener)r.removeEventListener(o,c,!1);else if(r.detachEvent)r.detachEvent(\"on\"+o,c);else{var a=r._handlers,d=a&&a[o];if(d){var m=ge(d,c);m>-1&&(a[o]=d.slice(0,m).co...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0f533df6d87185a8307214d9c4816183",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pt(r,o){var c=oi(r,o);if(c.length)for(var a=Array.prototype.slice.call(arguments,2),d=0;d<c.length;++d)c[d].apply(null,a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3a7c3adbb64e5959c341db2f3bc7b8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ot(r,o,c){return typeof o==\"string\"&&(o={type:o,preventDefault:function(){this.defaultPrevented=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9dd293589f4d604c8c7aff50e3e3e633",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sr(r){var o=r._handlers&&r._handlers.cursorActivity;if(o)for(var c=r.curOp.cursorActivityHandlers||(r.curOp.cursorActivityHandlers=[]),a=0;a<o.length;++a)ge(c,o[a])==-1&&c.push(o[a])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77e65daad2055b5e348f6c97724e4878",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hn(r,o){return oi(r,o).length>0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee3ceab71d6d3698d76d2afc018d87ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mr(r){r.prototype.on=function(o,c){He(this,o,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ea1ecc042c65209e6395ba5307176932",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function un(r){r.preventDefault?r.preventDefault():r.returnValue=!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c007f8846ee611d6000adc99119a4bac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yo(r){r.stopPropagation?r.stopPropagation():r.cancelBubble=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e1f25627a1d4de222cd0719b8853bf0c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sn(r){return r.defaultPrevented!=null?r.defaultPrevented:r.returnValue==!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5258d5bade82ef050bc0601cfd9c207d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function al(r){return r.target||r.srcElement}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86c8c24f9cc99f9ff8d45f261a956791",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vr(r){var o=r.which;return o==null&&(r.button&1?o=1:r.button&2?o=3:r.button&4&&(o=2)),z&&r.ctrlKey&&o==1&&(o=3),o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0e2348d6dd89bec89ac638d68d772be8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Za(r){if(Zo==null){var o=S(\"span\",\"​\");I(r,S(\"span\",[o,document.createTextNode(\"x\")])),r.firstChild.offsetHeight!=0&&(Zo=o.offsetWidth<=1&&o.offsetHeight>2&&!(h&&p<8))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3c147c231c63718811f892182de25a5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mi(r){if(cl!=null)return cl;var o=I(r,document.createTextNode(\"AخA\")),c=B(o,0,1).getBoundingClientRect(),a=B(o,1,2).getBoundingClientRect();return P(r),!c||c.left==c.right?!1:cl=a.right-c.rig...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "24df8b2023ad40afd92b722c2a896d64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wf(r){if(yr!=null)return yr;var o=I(r,S(\"span\",\"x\")),c=o.getBoundingClientRect(),a=B(o,0,1).getBoundingClientRect();return yr=Math.abs(c.left-a.left)>1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e1dedeeee18313957028d53e7e8cf6a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wr(r,o){arguments.length>2&&(o.dependencies=Array.prototype.slice.call(arguments,2)),Qo[r]=o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1828951e898b140638bc855ab54cfcb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xo(r,o){br[r]=o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "53e591f4e72dd29202db68008a5dd342",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function es(r){if(typeof r==\"string\"&&br.hasOwnProperty(r))r=br[r];else if(r&&typeof r.name==\"string\"&&br.hasOwnProperty(r.name)){var o=br[r.name];typeof o==\"string\"&&(o={name:o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b9164ac1f4bac8f8a49d15a9d74657be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ts(r,o){o=es(o);var c=Qo[o.name];if(!c)return ts(r,\"text/plain\");var a=c(r,o);if(Ii.hasOwnProperty(o.name)){var d=Ii[o.name];for(var m in d)d.hasOwnProperty(m)&&(a.hasOwnProperty(m)&&(a[\"_\"+m...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d85e5db0f0100d68a17dbea05dc92dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ns(r,o){var c=Ii.hasOwnProperty(r)?Ii[r]:Ii[r]={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "976db09179b7f09aacb766138d3be4a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Br(r,o){if(o===!0)return o;if(r.copyState)return r.copyState(o);var c={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "79aa038a63acb232a4af483c8579eb57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ul(r,o){for(var c;r.innerMode&&(c=r.innerMode(o),!(!c||c.mode==r));)o=c.state,r=c.mode;return c||{mode:r,state:o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cc164fd7f69024d3aa0e82390d7b0bc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rs(r,o,c){return r.startState?r.startState(o,c):!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c77445bf5cf5e4a854c7fbe63cce8fc7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oe(r,o){if(o-=r.first,o<0||o>=r.size)throw new Error(\"There is no line \"+(o+r.first)+\" in the document.\");for(var c=r;!c.lines;)for(var a=0;;++a){var d=c.children[a],m=d.chunkSize();if(o<m){c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c360e85e7aadfa5e4518ffcbb05265f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function si(r,o,c){var a=[],d=o.line;return r.iter(o.line,c.line+1,function(m){var b=m.text;d==c.line&&(b=b.slice(0,c.ch)),d==o.line&&(b=b.slice(o.ch)),a.push(b),++d}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "873d352a2d119986dcf4da9ecd79ed9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fl(r,o,c){var a=[];return r.iter(o,c,function(d){a.push(d.text)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bd958f12a4c42262101f4a0f286ad552",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yn(r,o){var c=o-r.height;if(c)for(var a=r;a;a=a.parent)a.height+=c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b2f0c47195887ed208156e67ff09300b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function N(r){if(r.parent==null)return null;for(var o=r.parent,c=ge(o.lines,r),a=o.parent;a;o=a,a=a.parent)for(var d=0;a.children[d]!=o;++d)c+=a.children[d].chunkSize();return c+o.first}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3f8ef680d0fbbb514761ea5838be662",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function G(r,o){var c=r.first;e:do{for(var a=0;a<r.children.length;++a){var d=r.children[a],m=d.height;if(o<m){r=d;continue e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b20163ba9294f2dc56347a2ab89a9a40",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function de(r,o){return o>=r.first&&o<r.first+r.size}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b2ad733d6ca45c0d5a6010f4b584297a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xe(r,o){return String(r.lineNumberFormatter(o+r.firstLineNumber))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d4da9b717cb9e8873b25c2f253426022",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function le(r,o,c){if(c===void 0&&(c=null),!(this instanceof le))return new le(r,o,c);this.line=r,this.ch=o,this.sticky=c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "32d688f3696532ad09ea9ac2a1dcf5ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Le(r,o){return r.line-o.line||r.ch-o.ch}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b70c037da9ea9d305ae7c0ea533fc11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pt(r,o){return r.sticky==o.sticky&&Le(r,o)==0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "99a6db7e2019c5552d2dc31bb6ac02a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kt(r){return le(r.line,r.ch)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "50325ef58c1153e5aaef4ebaf40cb265",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _n(r,o){return Le(r,o)<0?o:r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a5b4a8af688a3a74e423bb7ed4de331f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function is(r,o){return Le(r,o)<0?r:o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b48224ba43612406012bf8be4beca5d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qp(r,o){return Math.max(r.first,Math.min(o,r.first+r.size-1))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0105a12bd6c3f0239cb443be2c1eec3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xe(r,o){if(o.line<r.first)return le(r.first,0);var c=r.first+r.size-1;return o.line>c?le(c,Oe(r,c).text.length):_S(o,Oe(r,o.line).text.length)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c2fc707fc8489073a8d2a3a6547cf39e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _S(r,o){var c=r.ch;return c==null||c>o?le(r.line,o):c<0?le(r.line,0):r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "44ea77923d7bb39f25593e341cbf588f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eg(r,o){for(var c=[],a=0;a<o.length;a++)c[a]=Xe(r,o[a]);return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e4786c6b67f5d4db6b9fb4443e11c44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tg(r,o,c,a){var d=[r.state.modeGen],m={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8df041a98eaca9d6b6943b6d4e97cb23",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ng(r,o,c){if(!o.styles||o.styles[0]!=r.state.modeGen){var a=dl(r,N(o)),d=o.text.length>r.options.maxHighlightLength&&Br(r.doc.mode,a.state),m=tg(r,o,a);d&&(a.state=d),o.stateAfter=a.save(!d),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9af728677990ebbf6005d37c020ebab9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dl(r,o,c){var a=r.doc,d=r.display;if(!a.mode.startState)return new Wr(a,!0,o);var m=kS(r,o,c),b=m>a.first&&Oe(a,m-1).stateAfter,x=b?Wr.fromSaved(a,b,m):new Wr(a,rs(a.mode),m);return a.iter(m,...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "555c58f5cf1ead8d97ee473b7b883532",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xf(r,o,c,a){var d=r.doc.mode,m=new Rt(o,r.options.tabSize,c);for(m.start=m.pos=a||0,o==\"\"&&rg(d,c.state);!m.eol();)Sf(d,m,c.state),m.start=m.pos}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c452aa58605f0aeabcc0633fdc8d1cbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rg(r,o){if(r.blankLine)return r.blankLine(o);if(r.innerMode){var c=ul(r,o);if(c.mode.blankLine)return c.mode.blankLine(c.state)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3547c8c8edd671b3c6bc5937c6e36029",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sf(r,o,c,a){for(var d=0;d<10;d++){a&&(a[0]=ul(r,c).mode);var m=r.token(o,c);if(o.pos>o.start)return m}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae5f0a529a63c53dcb7b0845b58dc865",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function og(r,o,c,a){var d=r.doc,m=d.mode,b;o=Xe(d,o);var x=Oe(d,o.line),_=dl(r,o.line,c),T=new Rt(x.text,r.options.tabSize,_),H;for(a&&(H=[]);(a||T.pos<o.ch)&&!T.eol();)T.start=T.pos,b=Sf(m,T,_.state...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "378be54bc5ed1bfa4e131ba5fbac20f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sg(r,o){if(r)for(;;){var c=r.match(/(?:^|\\s+)line-(background-)?(\\S+)/);if(!c)break;r=r.slice(0,c.index)+r.slice(c.index+c[0].length);var a=c[1]?\"bgClass\":\"textClass\";o[a]==null?o[a]=c[2]:new...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ba837cca98313fc75d35732ab3385781",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lg(r,o,c,a,d,m,b){var x=c.flattenSpans;x==null&&(x=r.options.flattenSpans);var _=0,T=null,H=new Rt(o,r.options.tabSize,a),X,re=r.options.addModeClass&&[null];for(o==\"\"&&sg(rg(c,a.state),m);!H...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e079945215285e83ef416bb5e719b3c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kS(r,o,c){for(var a,d,m=r.doc,b=c?-1:o-(r.doc.mode.innerMode?1e3:100),x=o;x>b;--x){if(x<=m.first)return m.first;var _=Oe(m,x-1),T=_.stateAfter;if(T&&(!c||x+(T instanceof ec?T.lookAhead:0)<=m....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4d3257f648f896135bdac714cce5eb39",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function TS(r,o){if(r.modeFrontier=Math.min(r.modeFrontier,o),!(r.highlightFrontier<o-10)){for(var c=r.first,a=o-1;a>c;a--){var d=Oe(r,a).stateAfter;if(d&&(!(d instanceof ec)||a+d.lookAhead<o)){c=a+1;...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e721a4884ace69fe0645d35429a574d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function CS(){ag=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "610a084dec7d77d96a888e7709f54e53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ES(){li=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2e5c6bdd92c68e96c1ca9101b0ea6b22",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tc(r,o,c){this.marker=r,this.from=o,this.to=c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b6f9b53c25f7587c99a625a85b61962b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hl(r,o){if(r)for(var c=0;c<r.length;++c){var a=r[c];if(a.marker==o)return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1abb95a0b96afbf949a66079682e47ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function AS(r,o){for(var c,a=0;a<r.length;++a)r[a]!=o&&(c||(c=[])).push(r[a]);return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e421e7443f29de9379dd81b5b5463b48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function LS(r,o,c){var a=c&&window.WeakSet&&(c.markedSpans||(c.markedSpans=new WeakSet));a&&r.markedSpans&&a.has(r.markedSpans)?r.markedSpans.push(o):(r.markedSpans=r.markedSpans?r.markedSpans.concat(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a35db2f9eb202bc3d200c26b22a66ccf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function MS(r,o,c){var a;if(r)for(var d=0;d<r.length;++d){var m=r[d],b=m.marker,x=m.to==null||(b.inclusiveRight?m.to>=o:m.to>o);if(x||m.from==o&&b.type==\"bookmark\"&&(!c||m.marker.insertLeft)){var _=m....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "02a48d738aac86e5f7efdd15c72e970e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _f(r,o){if(o.full)return null;var c=de(r,o.from.line)&&Oe(r,o.from.line).markedSpans,a=de(r,o.to.line)&&Oe(r,o.to.line).markedSpans;if(!c&&!a)return null;var d=o.from.ch,m=o.to.ch,b=Le(o.from...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd01c46d0906d6f1667a26ae274025e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cg(r){for(var o=0;o<r.length;++o){var c=r[o];c.from!=null&&c.from==c.to&&c.marker.clearWhenEmpty!==!1&&r.splice(o--,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9d51d8ff36f8be428b6f1346f2b0e92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function NS(r,o,c){var a=null;if(r.iter(o.line,c.line+1,function(Z){if(Z.markedSpans)for(var ce=0;ce<Z.markedSpans.length;++ce){var me=Z.markedSpans[ce].marker;me.readOnly&&(!a||ge(a,me)==-1)&&(a||(a=...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8ea38ce9d74996b11a860f6f8f0a9e67",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ug(r){var o=r.markedSpans;if(o){for(var c=0;c<o.length;++c)o[c].marker.detachLine(r);r.markedSpans=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "417acc27004f014d45b4ae9bd25be9e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fg(r,o){if(o){for(var c=0;c<o.length;++c)o[c].marker.attachLine(r);r.markedSpans=o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e961e532ae2a708ac70e764d75d15f73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nc(r){return r.inclusiveLeft?-1:0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17f92efd145571fe54aaf999d4e4f91e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rc(r){return r.inclusiveRight?1:0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "72d804f4f11c21fde25601b07ae05486",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kf(r,o){var c=r.lines.length-o.lines.length;if(c!=0)return c;var a=r.find(),d=o.find(),m=Le(a.from,d.from)||nc(r)-nc(o);if(m)return-m;var b=Le(a.to,d.to)||rc(r)-rc(o);return b||o.id-r.id}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e62113f74ae55827187d42996aaa1b7a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dg(r,o){var c=li&&r.markedSpans,a;if(c)for(var d=void 0,m=0;m<c.length;++m)d=c[m],d.marker.collapsed&&(o?d.from:d.to)==null&&(!a||kf(a,d.marker)<0)&&(a=d.marker);return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c88df5ddb9af406ec0f351c8a6e4d13c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hg(r){return dg(r,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a730ea26ff30fff231c83a10b2bf357",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ic(r){return dg(r,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1d0fd6f1a33d12ae0995cdfdef973f4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function IS(r,o){var c=li&&r.markedSpans,a;if(c)for(var d=0;d<c.length;++d){var m=c[d];m.marker.collapsed&&(m.from==null||m.from<o)&&(m.to==null||m.to>o)&&(!a||kf(a,m.marker)<0)&&(a=m.marker)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ffea22637b187178e46d2906558c236f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pg(r,o,c,a,d){var m=Oe(r,o),b=li&&m.markedSpans;if(b)for(var x=0;x<b.length;++x){var _=b[x];if(_.marker.collapsed){var T=_.marker.find(0),H=Le(T.from,c)||nc(_.marker)-nc(d),X=Le(T.to,a)||rc(_...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91bfe2e427e386b60f423bdd8adc0f54",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xr(r){for(var o;o=hg(r);)r=o.find(-1,!0).line;return r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "73c814ae945052822e5b4954c9b73ff9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function PS(r){for(var o;o=ic(r);)r=o.find(1,!0).line;return r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7759193b11fc68d39b2087757540ef0e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function OS(r){for(var o,c;o=ic(r);)r=o.find(1,!0).line,(c||(c=[])).push(r);return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0adc82da44f73989394ff6aee792507b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tf(r,o){var c=Oe(r,o),a=xr(c);return c==a?o:N(a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97c246db035eae04882ded2fe116a0d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gg(r,o){if(o>r.lastLine())return o;var c=Oe(r,o),a;if(!Pi(r,c))return o;for(;a=ic(c);)c=a.find(1,!0).line;return N(c)+1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3440de3f2fd907e21e1571ff1c8efb45",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pi(r,o){var c=li&&o.markedSpans;if(c){for(var a=void 0,d=0;d<c.length;++d)if(a=c[d],!!a.marker.collapsed){if(a.from==null)return!0;if(!a.marker.widgetNode&&a.from==0&&a.marker.inclusiveLeft&&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17252e773c81a8d1b01cf2e74cfa2610",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cf(r,o,c){if(c.to==null){var a=c.marker.find(1,!0);return Cf(r,a.line,hl(a.line.markedSpans,c.marker))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e5857cd71565af9614b93f66d7a452bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ai(r){r=xr(r);for(var o=0,c=r.parent,a=0;a<c.lines.length;++a){var d=c.lines[a];if(d==r)break;o+=d.height}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "94472da657e4775c5e2bef85722f80d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oc(r){if(r.height==0)return 0;for(var o=r.text.length,c,a=r;c=hg(a);){var d=c.find(0,!0);a=d.from.line,o+=d.from.ch-d.to.ch}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aa7f84a2e7e28d3b67f9e4fabee04f43",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ef(r){var o=r.display,c=r.doc;o.maxLine=Oe(c,c.first),o.maxLineLength=oc(o.maxLine),o.maxLineChanged=!0,c.iter(function(a){var d=oc(a);d>o.maxLineLength&&(o.maxLineLength=d,o.maxLine=a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1180c014620b6c450ac8a6d93274f7b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function RS(r,o,c,a){r.text=o,r.stateAfter&&(r.stateAfter=null),r.styles&&(r.styles=null),r.order!=null&&(r.order=null),ug(r),fg(r,c);var d=a?a(r):1;d!=r.height&&Yn(r,d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2d89abc9f624a63b30041e1e84fe0cfe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zS(r){r.parent=null,ug(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ed1dd7178daee307e909c5c70ba09d97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mg(r,o){if(!r||/^\\s*$/.test(r))return null;var c=o.addModeClass?FS:DS;return c[r]||(c[r]=r.replace(/\\S+/g,\"cm-$&\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "afe3b02207bcea92801cc2b30c36aa07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vg(r,o){var c=R(\"span\",null,null,g?\"padding-right: .1px\":null),a={pre:R(\"pre\",[c],\"CodeMirror-line\"),content:c,col:0,pos:0,cm:r,trailingSpace:!1,splitSpaces:r.getOption(\"lineWrapping\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3ef8f53191aef0b9c6ad6fd40c941491",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function HS(r){var o=S(\"span\",\"•\",\"cm-invalidchar\");return o.title=\"\\\\u\"+r.charCodeAt(0).toString(16),o.setAttribute(\"aria-label\",o.title),o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5aaeba6c9bc4faf508d44511ea863ca4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function BS(r,o,c,a,d,m,b){if(o){var x=r.splitSpaces?WS(o,r.trailingSpace):o,_=r.cm.state.specialChars,T=!1,H;if(!_.test(o))r.col+=o.length,H=document.createTextNode(x),r.map.push(r.pos,r.pos+o.length...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c622ce6679fab4f09dc8ff451a5529c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function WS(r,o){if(r.length>1&&!/  /.test(r))return r;for(var c=o,a=\"\",d=0;d<r.length;d++){var m=r.charAt(d);m==\" \"&&c&&(d==r.length-1||r.charCodeAt(d+1)==32)&&(m=\" \"),a+=m,c=m==\" \"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0ae08730922e23b5918caec4f1e208cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jS(r,o){return function(c,a,d,m,b,x,_){d=d?d+\" cm-force-border\":\"cm-force-border\";for(var T=c.pos,H=T+a.length;;){for(var X=void 0,re=0;re<o.length&&(X=o[re],!(X.to>T&&X.from<=T));re++);if(X....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74d97b073794b1ec709e73ea0f73be6b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yg(r,o,c,a){var d=!a&&c.widgetNode;d&&r.map.push(r.pos,r.pos+o,d),!a&&r.cm.display.input.needsContentAttribute&&(d||(d=r.content.appendChild(document.createElement(\"span\"))),d.setAttribute(\"c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0024e75e5ec68283bb36801827379f89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qS(r,o,c){var a=r.markedSpans,d=r.text,m=0;if(!a){for(var b=1;b<c.length;b+=2)o.addToken(o,d.slice(m,m=c[b]),mg(c[b+1],o.cm.options));return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9684e2f068ea3ea4b53daaee8926e3bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bg(r,o,c){this.line=o,this.rest=OS(o),this.size=this.rest?N(ve(this.rest))-c+1:1,this.node=this.text=null,this.hidden=Pi(r,o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f03a2e1775f48a24154e24671ad971f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sc(r,o,c){for(var a=[],d,m=o;m<c;m=d){var b=new bg(r.doc,Oe(r.doc,m),m);d=m+b.size,a.push(b)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0c9206f124db3cfbb9901e8a7069864e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function US(r){ss?ss.ops.push(r):r.ownsGroup=ss={ops:[r],delayedCallbacks:[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ac96e722558e5250edaf61d0c50a2d2d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function VS(r){var o=r.delayedCallbacks,c=0;do{for(;c<o.length;c++)o[c].call(null);for(var a=0;a<r.ops.length;a++){var d=r.ops[a];if(d.cursorActivityHandlers)for(;d.cursorActivityCalled<d.cursorActivi...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5be0be9baa5fae0b12871b396892e197",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function GS(r,o){var c=r.ownsGroup;if(c)try{VS(c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "752a732a3768ddaed229242fa13edc96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jt(r,o){var c=oi(r,o);if(c.length){var a=Array.prototype.slice.call(arguments,2),d;ss?d=ss.delayedCallbacks:pl?d=pl:(d=pl=[],setTimeout(XS,0));for(var m=function(x){d.push(function(){return c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa647832d2c99c624a29158bbe9ce100",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function XS(){var r=pl;pl=null;for(var o=0;o<r.length;++o)r[o]()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4d5157b6870853bd8ba3f971564ecdd5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wg(r,o,c,a){for(var d=0;d<o.changes.length;d++){var m=o.changes[d];m==\"text\"?JS(r,o):m==\"gutter\"?Sg(r,o,c,a):m==\"class\"?Af(r,o):m==\"widget\"&&YS(r,o,a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "006babebad8ce9dad5ba25fe18b5ed45",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gl(r){return r.node==r.text&&(r.node=S(\"div\",null,null,\"position: relative\"),r.text.parentNode&&r.text.parentNode.replaceChild(r.node,r.text),r.node.appendChild(r.text),h&&p<8&&(r.node.style....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5d422d38739919e6b1441dbe2c1bc362",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function KS(r,o){var c=o.bgClass?o.bgClass+\" \"+(o.line.bgClass||\"\"):o.line.bgClass;if(c&&(c+=\" CodeMirror-linebackground\"),o.background)c?o.background.className=c:(o.background.parentNode.removeChild(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c726abb8510385811b05fa0331988b08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xg(r,o){var c=r.display.externalMeasured;return c&&c.line==o.line?(r.display.externalMeasured=null,o.measure=c.measure,c.built):vg(r,o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad34ef734a6e2d4e6c0bff26c6c0c6fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function JS(r,o){var c=o.text.className,a=xg(r,o);o.text==o.node&&(o.node=a.pre),o.text.parentNode.replaceChild(a.pre,o.text),o.text=a.pre,a.bgClass!=o.bgClass||a.textClass!=o.textClass?(o.bgClass=a.b...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "af3d86af2f4c6f765f340cb8f3a9bfb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Af(r,o){KS(r,o),o.line.wrapClass?gl(o).className=o.line.wrapClass:o.node!=o.text&&(o.node.className=\"\");var c=o.textClass?o.textClass+\" \"+(o.line.textClass||\"\"):o.line.textClass;o.text.classN...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9c9d742c679f69d83172f19afa54d72c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sg(r,o,c,a){if(o.gutter&&(o.node.removeChild(o.gutter),o.gutter=null),o.gutterBackground&&(o.node.removeChild(o.gutterBackground),o.gutterBackground=null),o.line.gutterClass){var d=gl(o);o.gu...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "22c0d0ce83b420428040899ccac666af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function YS(r,o,c){o.alignable&&(o.alignable=null);for(var a=K(\"CodeMirror-linewidget\"),d=o.node.firstChild,m=void 0;d;d=m)m=d.nextSibling,a.test(d.className)&&o.node.removeChild(d);_g(r,o,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7f8d3af4a06252ff92b80cbc4fb53078",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ZS(r,o,c,a){var d=xg(r,o);return o.text=o.node=d.pre,d.bgClass&&(o.bgClass=d.bgClass),d.textClass&&(o.textClass=d.textClass),Af(r,o),Sg(r,o,c,a),_g(r,o,a),o.node}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "10d09b988059db93600e11c4d6a5caa5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _g(r,o,c){if(kg(r,o.line,o,c,!0),o.rest)for(var a=0;a<o.rest.length;a++)kg(r,o.rest[a],o,c,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "53cddd5a6c634de36dc86ceb8001124a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kg(r,o,c,a,d){if(o.widgets)for(var m=gl(c),b=0,x=o.widgets;b<x.length;++b){var _=x[b],T=S(\"div\",[_.node],\"CodeMirror-linewidget\"+(_.className?\" \"+_.className:\"\"));_.handleMouseEvents||T.setAt...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29590209a58db09bbb9f7978b58af2f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function QS(r,o,c,a){if(r.noHScroll){(c.alignable||(c.alignable=[])).push(o);var d=a.wrapperWidth;o.style.left=a.fixedPos+\"px\",r.coverGutter||(d-=a.gutterTotalWidth,o.style.paddingLeft=a.gutterTotalWi...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6028a16af473485918a98c6da1624b97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ml(r){if(r.height!=null)return r.height;var o=r.doc.cm;if(!o)return 0;if(!oe(document.body,r.node)){var c=\"position: relative;\";r.coverGutter&&(c+=\"margin-left: -\"+o.display.gutters.offsetWid...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34fe6ac84f1302af563d7c41e7051214",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ci(r,o){for(var c=al(o);c!=r.wrapper;c=c.parentNode)if(!c||c.nodeType==1&&c.getAttribute(\"cm-ignore-events\")==\"true\"||c.parentNode==r.sizer&&c!=r.mover)return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ce692a1b60cd6a8b3fc80a747fcec7e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lc(r){return r.lineSpace.offsetTop}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a3a3abc6525224fa8683041e6a47174a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lf(r){return r.mover.offsetHeight-r.lineSpace.offsetHeight}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74b9dc9f867e435dde2b81efc9f67216",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tg(r){if(r.cachedPaddingH)return r.cachedPaddingH;var o=I(r.measure,S(\"pre\",\"x\",\"CodeMirror-line-like\")),c=window.getComputedStyle?window.getComputedStyle(o):o.currentStyle,a={left:parseInt(c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08246a8814f093a2278bb0bb0d1f8627",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jr(r){return F-r.display.nativeBarWidth}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4e9ef268d1c1fa40c92a7133d5457a8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function So(r){return r.display.scroller.clientWidth-jr(r)-r.display.barWidth}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "87975ffc5824867418c3c5169d2d7aa9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e_(r,o,c){var a=r.options.lineWrapping,d=a&&So(r);if(!o.measure.heights||a&&o.measure.width!=d){var m=o.measure.heights=[];if(a){o.measure.width=d;for(var b=o.text.firstChild.getClientRects()...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90f952b9c5c0c434f2f696cbdfa32339",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cg(r,o,c){if(r.line==o)return{map:r.measure.map,cache:r.measure.cache}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c106da5b2269d3c7f3096139c9ee7baa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t_(r,o){o=xr(o);var c=N(o),a=r.display.externalMeasured=new bg(r.doc,o,c);a.lineN=c;var d=a.built=vg(r,a);return a.text=d.pre,I(r.display.lineMeasure,d.pre),a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0de6e9029379a5638307f879b32b7e4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Eg(r,o,c,a){return qr(r,ls(r,o),c,a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "27b808d8613c969822ce978bce644479",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mf(r,o){if(o>=r.display.viewFrom&&o<r.display.viewTo)return r.display.view[To(r,o)];var c=r.display.externalMeasured;if(c&&o>=c.lineN&&o<c.lineN+c.size)return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e9895ced0f8d4fbc881482a1cbc5ee0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ls(r,o){var c=N(o),a=Mf(r,c);a&&!a.text?a=null:a&&a.changes&&(wg(r,a,c,Rf(r)),r.curOp.forceUpdate=!0),a||(a=t_(r,o));var d=Cg(a,o,c);return{line:o,view:a,rect:null,map:d.map,cache:d.cache,bef...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d5dd349abb448396bb7e23ce18caf162",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qr(r,o,c,a,d){o.before&&(c=-1);var m=c+(a||\"\"),b;return o.cache.hasOwnProperty(m)?b=o.cache[m]:(o.rect||(o.rect=o.view.text.getBoundingClientRect()),o.hasHeights||(e_(r,o.view,o.rect),o.hasHe...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d70747816e9af8374d2ff4da2aa89259",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lg(r,o,c){for(var a,d,m,b,x,_,T=0;T<r.length;T+=3)if(x=r[T],_=r[T+1],o<x?(d=0,m=1,b=\"left\"):o<_?(d=o-x,m=d+1):(T==r.length-3||o==_&&r[T+3]>o)&&(m=_-x,d=m-1,o>=_&&(b=\"right\")),d!=null){if(a=r[...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "65dc6811942d483a234ba2247f745719",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n_(r,o){var c=Ag;if(o==\"left\")for(var a=0;a<r.length&&(c=r[a]).left==c.right;a++);else for(var d=r.length-1;d>=0&&(c=r[d]).left==c.right;d--);return c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "af008e90d151a7dfaa3aa3c9f183d81c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function r_(r,o,c,a){var d=Lg(o.map,c,a),m=d.node,b=d.start,x=d.end,_=d.collapse,T;if(m.nodeType==3){for(var H=0;H<4;H++){for(;b&&lt(o.line.text.charAt(d.coverStart+b));)--b;for(;d.coverStart+x<d.cove...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0e6c8b76cae920f7bd64a81a64da5abd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i_(r,o){if(!window.screen||screen.logicalXDPI==null||screen.logicalXDPI==screen.deviceXDPI||!wf(r))return o;var c=screen.logicalXDPI/screen.deviceXDPI,a=screen.logicalYDPI/screen.deviceYDPI;r...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "034e6e0bcf309fd104e2384a3e7f7ec5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mg(r){r.display.externalMeasure=null,P(r.display.lineMeasure);for(var o=0;o<r.display.view.length;o++)$g(r.display.view[o])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee52d84c52b48d76b65739d794e76fa5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vl(r){Mg(r),r.display.cachedCharWidth=r.display.cachedTextHeight=r.display.cachedPaddingH=null,r.options.lineWrapping||(r.display.maxLineChanged=!0),r.display.lineNumChars=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d9f99e6848ef535097b1c3534b2aa86a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ng(r){return y&&O?-(r.body.getBoundingClientRect().left-parseInt(getComputedStyle(r.body).marginLeft)):r.defaultView.pageXOffset||(r.documentElement||r.body).scrollLeft}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55cdf2771958aa56333168b50f3b6ab0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ig(r){return y&&O?-(r.body.getBoundingClientRect().top-parseInt(getComputedStyle(r.body).marginTop)):r.defaultView.pageYOffset||(r.documentElement||r.body).scrollTop}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6bcddf1006fcde1a255c16db8d6a6213",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nf(r){var o=xr(r),c=o.widgets,a=0;if(c)for(var d=0;d<c.length;++d)c[d].above&&(a+=ml(c[d]));return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd888dab2468317b741e9a94b585b9e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ac(r,o,c,a,d){if(!d){var m=Nf(o);c.top+=m,c.bottom+=m}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "add2c736ba36439bb4774e6281d98b01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pg(r,o,c){if(c==\"div\")return o;var a=o.left,d=o.top;if(c==\"page\")a-=Ng(Ze(r)),d-=Ig(Ze(r));else if(c==\"local\"||!c){var m=r.display.sizer.getBoundingClientRect();a+=m.left,d+=m.top}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "149ed44a58882f158c5ebd9f2f70db93",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cc(r,o,c,a,d){return a||(a=Oe(r.doc,o.line)),ac(r,a,Eg(r,a,o.ch,d),c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "edf12b0b6872a1f4beda14ad50b6101d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sr(r,o,c,a,d,m){a=a||Oe(r.doc,o.line),d||(d=ls(r,a));function b(ce,me){var Se=qr(r,d,ce,me?\"right\":\"left\",m);return me?Se.left=Se.right:Se.right=Se.left,ac(r,a,Se,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3df2d32bea3015eaa3aed3e8dac421cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H(ce,me,Se){var ke=x[me],$e=ke.level==1;return b(Se?ce-1:ce,$e!=Se)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e7fc928d7516585ab520f1976eebea9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Og(r,o){var c=0;o=Xe(r.doc,o),r.options.lineWrapping||(c=cs(r.display)*o.ch);var a=Oe(r.doc,o.line),d=ai(a)+lc(r.display);return{left:c,right:c,top:d,bottom:d+a.height}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c52282d1c5a3bf09fd3275880a424b9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function If(r,o,c,a,d){var m=le(r,o,c);return m.xRel=d,a&&(m.outside=a),m}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbad579ab40f85fa0131b3c464838cb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pf(r,o,c){var a=r.doc;if(c+=r.display.viewOffset,c<0)return If(a.first,0,null,-1,-1);var d=G(a,c),m=a.first+a.size-1;if(d>m)return If(a.first+a.size-1,Oe(a,m).text.length,null,1,1);o<0&&(o=0)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1bc7b5087b2790cf73495bc85edc90e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rg(r,o,c,a){a-=Nf(o);var d=o.text.length,m=Bt(function(b){return qr(r,c,b-1).bottom<=a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1cc3d9231e9e41b7be84fa6a54d19935",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zg(r,o,c,a){c||(c=ls(r,o));var d=ac(r,o,qr(r,c,a),\"line\").top;return Rg(r,o,c,d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0eddff75f667f6b72768adec11b8dd98",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Of(r,o,c,a){return r.bottom<=c?!1:r.top>c?!0:(a?r.left:r.right)>o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "41eeab71eae788719953e944a0164613",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function o_(r,o,c,a,d){d-=ai(o);var m=ls(r,o),b=Nf(o),x=0,_=o.text.length,T=!0,H=tt(o,r.doc.direction);if(H){var X=(r.options.lineWrapping?l_:s_)(r,o,c,m,H,a,d);T=X.level!=1,x=T?X.from:X.to-1,_=T?X.to...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77e6738cf6652ccdd18d8b378e2a556a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s_(r,o,c,a,d,m,b){var x=Bt(function(X){var re=d[X],Z=re.level!=1;return Of(Sr(r,le(c,Z?re.to:re.from,Z?\"before\":\"after\"),\"line\",o,a),m,b,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "002b24d1d447256812ada9f88918b767",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l_(r,o,c,a,d,m,b){var x=Rg(r,o,a,b),_=x.begin,T=x.end;/\\s/.test(o.text.charAt(T-1))&&T--;for(var H=null,X=null,re=0;re<d.length;re++){var Z=d[re];if(!(Z.from>=T||Z.to<=_)){var ce=Z.level!=1,m...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60d224321a22cb72fe04da5f00c522cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function as(r){if(r.cachedTextHeight!=null)return r.cachedTextHeight;if(_o==null){_o=S(\"pre\",null,\"CodeMirror-line-like\");for(var o=0;o<49;++o)_o.appendChild(document.createTextNode(\"x\")),_o.appendChi...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d697e52f4cfc4a2a584b49d0ee35cd60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cs(r){if(r.cachedCharWidth!=null)return r.cachedCharWidth;var o=S(\"span\",\"xxxxxxxxxx\"),c=S(\"pre\",[o],\"CodeMirror-line-like\");I(r.measure,c);var a=o.getBoundingClientRect(),d=(a.right-a.left)/...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "577c53f63afae29d9ebd3121d0e3fc34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rf(r){for(var o=r.display,c={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d804c35891cc00e12e0f2a48b2d0e204",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zf(r){return r.scroller.getBoundingClientRect().left-r.sizer.getBoundingClientRect().left}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cc402a120f410331a88d1719d08f0c33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dg(r){var o=as(r.display),c=r.options.lineWrapping,a=c&&Math.max(5,r.display.scroller.clientWidth/cs(r.display)-3);return function(d){if(Pi(r.doc,d))return 0;var m=0;if(d.widgets)for(var b=0;...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee6df3d1560463def199f60cd71fb278",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Df(r){var o=r.doc,c=Dg(r);o.iter(function(a){var d=c(a);d!=a.height&&Yn(a,d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5d5a866093c2b9fa92f5c06c0b11f317",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ko(r,o,c,a){var d=r.display;if(!c&&al(o).getAttribute(\"cm-not-content\")==\"true\")return null;var m,b,x=d.lineSpace.getBoundingClientRect();try{m=o.clientX-x.left,b=o.clientY-x.top}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f2782c685bb9d7243bfeae2c0be53061",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function To(r,o){if(o>=r.display.viewTo||(o-=r.display.viewFrom,o<0))return null;for(var c=r.display.view,a=0;a<c.length;a++)if(o-=c[a].size,o<0)return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae1a91509d15602a196d93497bd979e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kn(r,o,c,a){o==null&&(o=r.doc.first),c==null&&(c=r.doc.first+r.doc.size),a||(a=0);var d=r.display;if(a&&c<d.viewTo&&(d.updateLineNumbers==null||d.updateLineNumbers>o)&&(d.updateLineNumbers=o)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2bb2a7eaefc7208662ecf30b660e5621",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oi(r,o,c){r.curOp.viewChanged=!0;var a=r.display,d=r.display.externalMeasured;if(d&&o>=d.lineN&&o<d.lineN+d.size&&(a.externalMeasured=null),!(o<a.viewFrom||o>=a.viewTo)){var m=a.view[To(r,o)]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8342d8411958c0cff8687750060281f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ri(r){r.display.viewFrom=r.display.viewTo=r.doc.first,r.display.view=[],r.display.viewOffset=0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "693e83bb7d6c5cc440709c546d0f20fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uc(r,o,c,a){var d=To(r,o),m,b=r.display.view;if(!li||c==r.doc.first+r.doc.size)return{index:d,lineN:c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "151ae5d0750cf8de25114b4cc2051406",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function a_(r,o,c){var a=r.display,d=a.view;d.length==0||o>=a.viewTo||c<=a.viewFrom?(a.view=sc(r,o,c),a.viewFrom=o):(a.viewFrom>o?a.view=sc(r,o,a.viewFrom).concat(a.view):a.viewFrom<o&&(a.view=a.view....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5024b4a6404b3c3cbe225c577c4a000a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fg(r){for(var o=r.display.view,c=0,a=0;a<o.length;a++){var d=o[a];!d.hidden&&(!d.node||d.changes)&&++c}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e10ce08cb6e3aa7e8c63ce35d9626694",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yl(r){r.display.input.showSelection(r.display.input.prepareSelection())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dc2f3ea0db35709de29fa8dc8aa460f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hg(r,o){o===void 0&&(o=!0);var c=r.doc,a={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "701f714de3cf04f3778a96deb81aa7ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ff(r,o,c){var a=Sr(r,o,\"div\",null,null,!r.options.singleCursorHeightPerLine),d=c.appendChild(S(\"div\",\" \",\"CodeMirror-cursor\"));if(d.style.left=a.left+\"px\",d.style.top=a.top+\"px\",d.style.heigh...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "10fa031b3c7a75fb42224be0d4dbfd49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fc(r,o){return r.top-o.top||r.left-o.left}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "35ff1847db39c49814cc74c9c3c09949",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 3,
        "sample": "function c_(r,o,c){var a=r.display,d=r.doc,m=document.createDocumentFragment(),b=Tg(r.display),x=b.left,_=Math.max(a.sizerWidth,So(r)-a.sizer.offsetLeft)-b.right,T=d.direction==\"ltr\";function H(Te,Ne,...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c6910d94d07d1a27c1b9b37d1c376a18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function X(Te,Ne,Be){var ze=Oe(d,Te),Qe=ze.text.length,xt,Qt;function $t(Wt,En){return cc(r,le(Te,Wt),\"div\",ze,En)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5e0ec5ae6c047d56ec4c84b49ba25178",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wn(Wt,En,sn){var Vt=zg(r,ze,null,Wt),jt=En==\"ltr\"==(sn==\"after\")?\"left\":\"right\",zt=sn==\"after\"?Vt.begin:Vt.end-(/\\s/.test(ze.text.charAt(Vt.end-1))?2:1);return $t(zt,jt)[jt]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f13b71c82ec8cef0d219abcff6618751",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hf(r){if(r.state.focused){var o=r.display;clearInterval(o.blinker);var c=!0;o.cursorDiv.style.visibility=\"\",r.options.cursorBlinkRate>0?o.blinker=setInterval(function(){r.hasFocus()||us(r),o....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fb4f93ec59d4b8b7741745ea5b38336d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bg(r){r.hasFocus()||(r.display.input.focus(),r.state.focused||Wf(r))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b038213b089f1ddd2e2c6ea6b5c26c56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bf(r){r.state.delayingBlurEvent=!0,setTimeout(function(){r.state.delayingBlurEvent&&(r.state.delayingBlurEvent=!1,r.state.focused&&us(r))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3908e2178556e166c08e9b6565670f4e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wf(r,o){r.state.delayingBlurEvent&&!r.state.draggingText&&(r.state.delayingBlurEvent=!1),r.options.readOnly!=\"nocursor\"&&(r.state.focused||(Pt(r,\"focus\",r,o),r.state.focused=!0,we(r.display.w...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cbda9b3ad98db0c0bff571a328bf7f4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function us(r,o){r.state.delayingBlurEvent||(r.state.focused&&(Pt(r,\"blur\",r,o),r.state.focused=!1,C(r.display.wrapper,\"CodeMirror-focused\")),clearInterval(r.display.blinker),setTimeout(function(){r.s...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fb92ce94d89951e154e49d9737d0fe1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dc(r){for(var o=r.display,c=o.lineDiv.offsetTop,a=Math.max(0,o.scroller.getBoundingClientRect().top),d=o.lineDiv.getBoundingClientRect().top,m=0,b=0;b<o.view.length;b++){var x=o.view[b],_=r.o...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4ddd516b8b38df0b07487db44e406dc1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wg(r){if(r.widgets)for(var o=0;o<r.widgets.length;++o){var c=r.widgets[o],a=c.node.parentNode;a&&(c.height=a.offsetHeight)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a4c59c20d54d38cee11bfa3d0f2eb757",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hc(r,o,c){var a=c&&c.top!=null?Math.max(0,c.top):r.scroller.scrollTop;a=Math.floor(a-lc(r));var d=c&&c.bottom!=null?c.bottom:a+r.wrapper.clientHeight,m=G(o,a),b=G(o,d);if(c&&c.ensure){var x=c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8a2acc1e79907b691583cb5c7031b95e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 4,
        "sample": "function u_(r,o){if(!Ot(r,\"scrollCursorIntoView\")){var c=r.display,a=c.sizer.getBoundingClientRect(),d=null,m=c.wrapper.ownerDocument;if(o.top+a.top<0?d=!0:o.bottom+a.top>(m.defaultView.innerHeight||m...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1da3dac9fb5d451094bcea798fbe6e7f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f_(r,o,c,a){a==null&&(a=0);var d;!r.options.lineWrapping&&o==c&&(c=o.sticky==\"before\"?le(o.line,o.ch+1,\"before\"):o,o=o.ch?le(o.line,o.sticky==\"before\"?o.ch-1:o.ch,\"after\"):o);for(var m=0;m<5;...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "931b226ad2a7eb261460a97d43451c90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function d_(r,o){var c=jf(r,o);c.scrollTop!=null&&wl(r,c.scrollTop),c.scrollLeft!=null&&Co(r,c.scrollLeft)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a0e7e9461a734822a304b17c18a4bf72",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jf(r,o){var c=r.display,a=as(r.display);o.top<0&&(o.top=0);var d=r.curOp&&r.curOp.scrollTop!=null?r.curOp.scrollTop:c.scroller.scrollTop,m=$f(r),b={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b22c7bdd1f3f36224f7a19d146d7d45d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qf(r,o){o!=null&&(pc(r),r.curOp.scrollTop=(r.curOp.scrollTop==null?r.doc.scrollTop:r.curOp.scrollTop)+o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cfc580fb0c77e1aea5afb6c8814930d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fs(r){pc(r);var o=r.getCursor();r.curOp.scrollToPos={from:o,to:o,margin:r.options.cursorScrollMargin}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "697015c2d54b4d04c07f5f52d0756a57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bl(r,o,c){(o!=null||c!=null)&&pc(r),o!=null&&(r.curOp.scrollLeft=o),c!=null&&(r.curOp.scrollTop=c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a89c7e325415bb0c9edd47aa77cfa7dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h_(r,o){pc(r),r.curOp.scrollToPos=o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fb877077a6ef3addb19447781f9e274e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pc(r){var o=r.curOp.scrollToPos;if(o){r.curOp.scrollToPos=null;var c=Og(r,o.from),a=Og(r,o.to);jg(r,c,a,o.margin)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "76b7c928edeec2cd7659ff0b04021851",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jg(r,o,c,a){var d=jf(r,{left:Math.min(o.left,c.left),top:Math.min(o.top,c.top)-a,right:Math.max(o.right,c.right),bottom:Math.max(o.bottom,c.bottom)+a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34cdb3256075a945848d06490ebb89fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wl(r,o){Math.abs(r.doc.scrollTop-o)<2||(s||Vf(r,{top:o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "befcffb53d9b37cd5385e67e724c701d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qg(r,o,c){o=Math.max(0,Math.min(r.display.scroller.scrollHeight-r.display.scroller.clientHeight,o)),!(r.display.scroller.scrollTop==o&&!c)&&(r.doc.scrollTop=o,r.display.scrollbars.setScrollTo...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0382046f2e19152358c8c2737209dd7b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Co(r,o,c,a){o=Math.max(0,Math.min(o,r.display.scroller.scrollWidth-r.display.scroller.clientWidth)),!((c?o==r.doc.scrollLeft:Math.abs(r.doc.scrollLeft-o)<2)&&!a)&&(r.doc.scrollLeft=o,Kg(r),r....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4d1bce2ce1a84b58699e3ffe56c5158f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xl(r){var o=r.display,c=o.gutters.offsetWidth,a=Math.round(r.doc.height+Lf(r.display));return{clientHeight:o.scroller.clientHeight,viewHeight:o.wrapper.clientHeight,scrollWidth:o.scroller.scr...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "994edc28ad28c580fd135ab8e57dbb4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function a(){var d=r.getBoundingClientRect(),m=c==\"vert\"?document.elementFromPoint(d.right-1,(d.top+d.bottom)/2):document.elementFromPoint((d.right+d.left)/2,d.bottom-1);m!=r?r.style.visibility=\"hidde...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f796edfafc182ae93c93e75caa6d89da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ds(r,o){o||(o=xl(r));var c=r.display.barWidth,a=r.display.barHeight;Ug(r,o);for(var d=0;d<4&&c!=r.display.barWidth||a!=r.display.barHeight;d++)c!=r.display.barWidth&&r.options.lineWrapping&&d...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "254b3537f1b1db0ebd720f2e159ac333",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ug(r,o){var c=r.display,a=c.scrollbars.update(o);c.sizer.style.paddingRight=(c.barWidth=a.right)+\"px\",c.sizer.style.paddingBottom=(c.barHeight=a.bottom)+\"px\",c.heightForcer.style.borderBottom...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e5068ca8ad44408e8dfd082d61a4bffc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gg(r){r.display.scrollbars&&(r.display.scrollbars.clear(),r.display.scrollbars.addClass&&C(r.display.wrapper,r.display.scrollbars.addClass)),r.display.scrollbars=new Vg[r.options.scrollbarSty...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97079fa51747eb42e656fc3fb0a1e6e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ao(r){r.curOp={cm:r,viewChanged:!1,startHeight:r.doc.height,forceUpdate:!1,updateInput:0,typing:!1,changeObjs:null,cursorActivityHandlers:null,cursorActivityCalled:0,selectionChanged:!1,updat...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fac47d0162c2df68939f793ea61b5422",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lo(r){var o=r.curOp;o&&GS(o,function(c){for(var a=0;a<c.ops.length;a++)c.ops[a].cm.curOp=null;g_(c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d14fb287192e27e166710331ec65cdd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g_(r){for(var o=r.ops,c=0;c<o.length;c++)m_(o[c]);for(var a=0;a<o.length;a++)v_(o[a]);for(var d=0;d<o.length;d++)y_(o[d]);for(var m=0;m<o.length;m++)b_(o[m]);for(var b=0;b<o.length;b++)w_(o[b...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6c8ea700357162f6dfbee370266d3aec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m_(r){var o=r.cm,c=o.display;S_(o),r.updateMaxLine&&Ef(o),r.mustUpdate=r.viewChanged||r.forceUpdate||r.scrollTop!=null||r.scrollToPos&&(r.scrollToPos.from.line<c.viewFrom||r.scrollToPos.to.li...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1ab3243b2f5a6147d10f48552d968b73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v_(r){r.updatedDisplay=r.mustUpdate&&Uf(r.cm,r.update)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "03ac701fc48cda44ce4f0fcf4e48c4e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y_(r){var o=r.cm,c=o.display;r.updatedDisplay&&dc(o),r.barMeasure=xl(o),c.maxLineChanged&&!o.options.lineWrapping&&(r.adjustWidthTo=Eg(o,c.maxLine,c.maxLine.text.length).left+3,o.display.size...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aaf5d1fb4f5d8fb1f6258d99830653ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b_(r){var o=r.cm;r.adjustWidthTo!=null&&(o.display.sizer.style.minWidth=r.adjustWidthTo+\"px\",r.maxScrollLeft<o.doc.scrollLeft&&Co(o,Math.min(o.display.scroller.scrollLeft,r.maxScrollLeft),!0)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9cb5aa13fdd1e59dd26b2bd5065bcf8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w_(r){var o=r.cm,c=o.display,a=o.doc;if(r.updatedDisplay&&Xg(o,r.update),c.wheelStartX!=null&&(r.scrollTop!=null||r.scrollLeft!=null||r.scrollToPos)&&(c.wheelStartX=c.wheelStartY=null),r.scro...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5542ecec1595fe6dda39efcedc52a5b5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bn(r,o){if(r.curOp)return o();Ao(r);try{return o()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b1fb9a10f487c13159964fb7387dced",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yt(r,o){return function(){if(r.curOp)return o.apply(r,arguments);Ao(r);try{return o.apply(r,arguments)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74575c89b66d237f80813a6263978dbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gn(r){return function(){if(this.curOp)return r.apply(this,arguments);Ao(this);try{return r.apply(this,arguments)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "feb73e793394118aa060860ce99c1ba9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zt(r){return function(){var o=this.cm;if(!o||o.curOp)return r.apply(this,arguments);Ao(o);try{return r.apply(this,arguments)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29da844a1a7f14546d1c3396fdf20fe9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _l(r,o){r.doc.highlightFrontier<r.display.viewTo&&r.state.highlight.set(o,U(x_,r))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1fea036a39f4a351d33a24ef6b5ca245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function x_(r){var o=r.doc;if(!(o.highlightFrontier>=r.display.viewTo)){var c=+new Date+r.options.workTime,a=dl(r,o.highlightFrontier),d=[];o.iter(a.line,Math.min(o.first+o.size,r.display.viewTo+500),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9a929c3f439934dbd0112255daebe4c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S_(r){var o=r.display;!o.scrollbarsClipped&&o.scroller.offsetWidth&&(o.nativeBarWidth=o.scroller.offsetWidth-o.scroller.clientWidth,o.heightForcer.style.height=jr(r)+\"px\",o.sizer.style.margin...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3e25d2fed43807e639c78028fe8e3145",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function __(r){if(r.hasFocus())return null;var o=ue(Ke(r));if(!o||!oe(r.display.lineDiv,o))return null;var c={activeElt:o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "16ddd79d2349b2b74569be1d381f21d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k_(r){if(!(!r||!r.activeElt||r.activeElt==ue(Je(r.activeElt)))&&(r.activeElt.focus(),!/^(INPUT|TEXTAREA)$/.test(r.activeElt.nodeName)&&r.anchorNode&&oe(document.body,r.anchorNode)&&oe(documen...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c81625194b55f147855e44c10b8c6069",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uf(r,o){var c=r.display,a=r.doc;if(o.editorIsHidden)return Ri(r),!1;if(!o.force&&o.visible.from>=c.viewFrom&&o.visible.to<=c.viewTo&&(c.updateLineNumbers==null||c.updateLineNumbers>=c.viewTo)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4343bad5af86cfc480ae7839b88b163c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xg(r,o){for(var c=o.viewport,a=!0;;a=!1){if(!a||!r.options.lineWrapping||o.oldDisplayWidth==So(r)){if(c&&c.top!=null&&(c={top:Math.min(r.doc.height+Lf(r.display)-$f(r),c.top)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "21e0a81d457f8a87730af1845f8cf132",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vf(r,o){var c=new gc(r,o);if(Uf(r,c)){dc(r),Xg(r,c);var a=xl(r);yl(r),ds(r,a),Xf(r,a),c.finish()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77f9fe0107c5555a0e63323a7e1a2f69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function T_(r,o,c){var a=r.display,d=r.options.lineNumbers,m=a.lineDiv,b=m.firstChild;function x(ce){var me=ce.nextSibling;return g&&z&&r.display.currentWheelTarget==ce?ce.style.display=\"none\":ce.pare...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eeef55991f6e44759d1f5c9bafe0965f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gf(r){var o=r.gutters.offsetWidth;r.sizer.style.marginLeft=o+\"px\",Jt(r,\"gutterChanged\",r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c13d072b8b74e666eb40cac8913c4573",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xf(r,o){r.display.sizer.style.minHeight=o.docHeight+\"px\",r.display.heightForcer.style.top=o.docHeight+\"px\",r.display.gutters.style.height=o.docHeight+r.display.barHeight+jr(r)+\"px\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7e9d80da1556f2b915d4721714aad1d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kg(r){var o=r.display,c=o.view;if(!(!o.alignWidgets&&(!o.gutters.firstChild||!r.options.fixedGutter))){for(var a=zf(o)-o.scroller.scrollLeft+r.doc.scrollLeft,d=o.gutters.offsetWidth,m=a+\"px\",...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe09aca388ee01595226d9f3e34fbab0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jg(r){if(!r.options.lineNumbers)return!1;var o=r.doc,c=xe(r.options,o.first+o.size-1),a=r.display;if(c.length!=a.lineNumChars){var d=a.measure.appendChild(S(\"div\",[S(\"div\",c)],\"CodeMirror-lin...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8262ca355f541852ae0543016f8f317",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kf(r,o){for(var c=[],a=!1,d=0;d<r.length;d++){var m=r[d],b=null;if(typeof m!=\"string\"&&(b=m.style,m=m.className),m==\"CodeMirror-linenumbers\")if(o)a=!0;else continue;c.push({className:m,style:...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c110aa5ee077ed9a7d5dfe087a0d3c0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yg(r){var o=r.gutters,c=r.gutterSpecs;P(o),r.lineGutter=null;for(var a=0;a<c.length;++a){var d=c[a],m=d.className,b=d.style,x=o.appendChild(S(\"div\",null,\"CodeMirror-gutter \"+m));b&&(x.style.c...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26c8862e14d710e24d62feef408424ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kl(r){Yg(r.display),kn(r),Kg(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96011db26e34e6454a38f385d695d0cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C_(r,o,c,a){var d=this;this.input=c,d.scrollbarFiller=S(\"div\",null,\"CodeMirror-scrollbar-filler\"),d.scrollbarFiller.setAttribute(\"cm-not-content\",\"true\"),d.gutterFiller=S(\"div\",null,\"CodeMirr...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a413b8f57ba221bcf7c4a21c291e1f6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zg(r){var o=r.wheelDeltaX,c=r.wheelDeltaY;return o==null&&r.detail&&r.axis==r.HORIZONTAL_AXIS&&(o=r.detail),c==null&&r.detail&&r.axis==r.VERTICAL_AXIS?c=r.detail:c==null&&(c=r.wheelDelta),{x:...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b17fa3aa048ec4b7b188c229e9f543d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E_(r){var o=Zg(r);return o.x*=ui,o.y*=ui,o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "da54da4aef5dd699e95c649d63bab0c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qg(r,o){y&&w==102&&(r.display.chromeScrollHack==null?r.display.sizer.style.pointerEvents=\"none\":clearTimeout(r.display.chromeScrollHack),r.display.chromeScrollHack=setTimeout(function(){r.dis...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "126370cae890c1c227a929ce8db10cd7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _r(r,o,c){var a=r&&r.options.selectionsMayTouch,d=o[c];o.sort(function(re,Z){return Le(re.from(),Z.from())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bb1f43a9de13124b9d89832f6fb89a36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zi(r,o){return new Zn([new gt(r,o||r)],0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "41347ec6381b1225f4e1f32524e85e3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Di(r){return r.text?le(r.from.line+r.text.length-1,ve(r.text).length+(r.text.length==1?r.from.ch:0)):r.to}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0902ff43891a150524c46e86cc189dd1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function em(r,o){if(Le(r,o.from)<0)return r;if(Le(r,o.to)<=0)return Di(o);var c=r.line+o.text.length-(o.to.line-o.from.line)-1,a=r.ch;return r.line==o.to.line&&(a+=Di(o).ch-o.to.ch),le(c,a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd084176bdb6be952ffca626098ecf00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jf(r,o){for(var c=[],a=0;a<r.sel.ranges.length;a++){var d=r.sel.ranges[a];c.push(new gt(em(d.anchor,o),em(d.head,o)))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "30886e3135cddd0123d8732201f57a1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tm(r,o,c){return r.line==o.line?le(c.line,r.ch-o.ch+c.ch):le(c.line+(r.line-o.line),r.ch)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a76c50a471bd7feba7deaf2883a9ffeb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A_(r,o,c){for(var a=[],d=le(r.first,0),m=d,b=0;b<o.length;b++){var x=o[b],_=tm(x.from,d,m),T=tm(Di(x),d,m);if(d=x.to,m=T,c==\"around\"){var H=r.sel.ranges[b],X=Le(H.head,H.anchor)<0;a[b]=new gt...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "50ac3b7ef7dd378c8332217adeee4d34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yf(r){r.doc.mode=ts(r.options,r.doc.modeOption),Tl(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59b3bb5e9e7d5f265fca18f1229318bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tl(r){r.doc.iter(function(o){o.stateAfter&&(o.stateAfter=null),o.styles&&(o.styles=null)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1d4ef253c8739c761676517ff5269867",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nm(r,o){return o.from.ch==0&&o.to.ch==0&&ve(o.text)==\"\"&&(!r.cm||r.cm.options.wholeLineUpdateBefore)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8052704b357a642bd3954a9d1194f222",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zf(r,o,c,a){function d($e){return c?c[$e]:null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b18e4dd58b783b8638e9d6062dbb253",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m($e,Te,Ne){RS($e,Te,Ne,a),Jt($e,\"change\",$e,o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b8d2c4af2c0b4dca179d801972a5074",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b($e,Te){for(var Ne=[],Be=$e;Be<Te;++Be)Ne.push(new os(T[Be],d(Be),a));return Ne}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "467816e9af9f39eebd8506b5f08910f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fi(r,o,c){function a(d,m,b){if(d.linked)for(var x=0;x<d.linked.length;++x){var _=d.linked[x];if(_.doc!=m){var T=b&&_.sharedHist;c&&!T||(o(_.doc,T),a(_.doc,d,T))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f2e7f04ef4bae078047dd85e7b4d533",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rm(r,o){if(o.cm)throw new Error(\"This document is already in use.\");r.doc=o,o.cm=r,Df(r),Yf(r),im(r),r.options.direction=o.direction,r.options.lineWrapping||Ef(r),r.options.mode=o.modeOption,...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "186d48aedba3aee0a774428bc7a4f452",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function im(r){(r.doc.direction==\"rtl\"?we:C)(r.display.lineDiv,\"CodeMirror-rtl\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "de9ad90564b4b3c5bbc730a5e72919e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L_(r){Bn(r,function(){im(r),kn(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "80de39c076f5bc41c8f3d82cf8d5b8ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vc(r){this.done=[],this.undone=[],this.undoDepth=r?r.undoDepth:1/0,this.lastModTime=this.lastSelTime=0,this.lastOp=this.lastSelOp=null,this.lastOrigin=this.lastSelOrigin=null,this.generation=...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e96c9036c09d75abe56ffed7375a6c09",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qf(r,o){var c={from:Kt(o.from),to:Di(o),text:si(r,o.from,o.to)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1af79dfb3be8c26f25b0309a406989bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function om(r){for(;r.length;){var o=ve(r);if(o.ranges)r.pop();else break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "281d03e62edcbda22ed4c768abe063a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sm(r,o,c,a){var d=r.history;d.undone.length=0;var m=+new Date,b,x;if((d.lastOp==a||d.lastOrigin==o.origin&&o.origin&&(o.origin.charAt(0)==\"+\"&&d.lastModTime>m-(r.cm?r.cm.options.historyEventD...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0e2898c8450bcfcf1ad412c0af4f6703",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M_(r,o,c,a){var d=o.charAt(0);return d==\"*\"||d==\"+\"&&c.ranges.length==a.ranges.length&&c.somethingSelected()==a.somethingSelected()&&new Date-r.history.lastSelTime<=(r.cm?r.cm.options.history...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f478a740434bca0b48cf6e785c74fafd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function N_(r,o,c,a){var d=r.history,m=a&&a.origin;c==d.lastSelOp||m&&d.lastSelOrigin==m&&(d.lastModTime==d.lastSelTime&&d.lastOrigin==m||M_(r,m,ve(d.done),o))?d.done[d.done.length-1]=o:yc(o,d.done),d...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ffc3d813a16d025960fe71b306d54731",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yc(r,o){var c=ve(o);c&&c.ranges&&c.equals(r)||o.push(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96fbf1e0570cf9020d10d072974435ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lm(r,o,c,a){var d=o[\"spans_\"+r.id],m=0;r.iter(Math.max(r.first,c),Math.min(r.first+r.size,a),function(b){b.markedSpans&&((d||(d=o[\"spans_\"+r.id]={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9871f14988dbf140b6f2a35c26d868df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function I_(r){if(!r)return null;for(var o,c=0;c<r.length;++c)r[c].marker.explicitlyCleared?o||(o=r.slice(0,c)):o&&o.push(r[c]);return o?o.length?o:null:r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4d724f3202dcfd73e1b1f1685c2fc690",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P_(r,o){var c=o[\"spans_\"+r.id];if(!c)return null;for(var a=[],d=0;d<o.text.length;++d)a.push(I_(c[d]));return a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7607ec9341c50ac78428e7734df1e72e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function am(r,o){var c=P_(r,o),a=_f(r,o);if(!c)return a;if(!a)return c;for(var d=0;d<c.length;++d){var m=c[d],b=a[d];if(m&&b)e:for(var x=0;x<b.length;++x){for(var _=b[x],T=0;T<m.length;++T)if(m[T].mar...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f5241231b7d1516dec6b86329eb898e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hs(r,o,c){for(var a=[],d=0;d<r.length;++d){var m=r[d];if(m.ranges){a.push(c?Zn.prototype.deepCopy.call(m):m);continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a0a87df94b5c83507632820031ffb0dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ed(r,o,c,a){if(a){var d=r.anchor;if(c){var m=Le(o,d)<0;m!=Le(c,d)<0?(d=o,o=c):m!=Le(o,c)<0&&(o=c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8aace50b77aa4ffed0b311d1c1d14f16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bc(r,o,c,a,d){d==null&&(d=r.cm&&(r.cm.display.shift||r.extend)),fn(r,new Zn([ed(r.sel.primary(),o,c,d)],0),a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2425858cbc7e0f28dfd5489f51f0488b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cm(r,o,c){for(var a=[],d=r.cm&&(r.cm.display.shift||r.extend),m=0;m<r.sel.ranges.length;m++)a[m]=ed(r.sel.ranges[m],o[m],null,d);var b=_r(r.cm,a,r.sel.primIndex);fn(r,b,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "afa1cd259956bef7a4e4e42abe3dfcd4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function td(r,o,c,a){var d=r.sel.ranges.slice(0);d[o]=c,fn(r,_r(r.cm,d,r.sel.primIndex),a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e7f98471afbaaaafbab41ebd778034fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function um(r,o,c,a){fn(r,zi(o,c),a)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2c317a649c5f2f624d64f138fa7b3c49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O_(r,o,c){var a={ranges:o.ranges,update:function(d){this.ranges=[];for(var m=0;m<d.length;m++)this.ranges[m]=new gt(Xe(r,d[m].anchor),Xe(r,d[m].head))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "89abd7b98a51a727f43adb58e24e89ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fm(r,o,c){var a=r.history.done,d=ve(a);d&&d.ranges?(a[a.length-1]=o,wc(r,o,c)):fn(r,o,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b2c9ea8343990ae1e0a4d43c41452fbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fn(r,o,c){wc(r,o,c),N_(r,r.sel,r.cm?r.cm.curOp.id:NaN,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "439778005c52dc5f146a5c04f8f5163a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wc(r,o,c){(Hn(r,\"beforeSelectionChange\")||r.cm&&Hn(r.cm,\"beforeSelectionChange\"))&&(o=O_(r,o,c));var a=c&&c.bias||(Le(o.primary().head,r.sel.primary().head)<0?-1:1);dm(r,pm(r,o,a,!0)),!(c&&c....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9ed5d63f756222957e563efb6cf1c865",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dm(r,o){o.equals(r.sel)||(r.sel=o,r.cm&&(r.cm.curOp.updateInput=1,r.cm.curOp.selectionChanged=!0,sr(r.cm)),Jt(r,\"cursorActivity\",r))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7594d4cd4775de8d5ffd7f9bf794cdc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hm(r){dm(r,pm(r,r.sel,null,!1))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "65c8f65dc0ee80c849d426b11dcd2f4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pm(r,o,c,a){for(var d,m=0;m<o.ranges.length;m++){var b=o.ranges[m],x=o.ranges.length==r.sel.ranges.length&&r.sel.ranges[m],_=xc(r,b.anchor,x&&x.anchor,c,a),T=b.head==b.anchor?_:xc(r,b.head,x&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b0e3f8444a61b00d7f946631e4cb862f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ps(r,o,c,a,d){var m=Oe(r,o.line);if(m.markedSpans)for(var b=0;b<m.markedSpans.length;++b){var x=m.markedSpans[b],_=x.marker,T=\"selectLeft\"in _?!_.selectLeft:_.inclusiveLeft,H=\"selectRight\"in ...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8e60390d68b5f2920cab4e23950958af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xc(r,o,c,a,d){var m=a||1,b=ps(r,o,c,m,d)||!d&&ps(r,o,c,m,!0)||ps(r,o,c,-m,d)||!d&&ps(r,o,c,-m,!0);return b||(r.cantEdit=!0,le(r.first,0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "393d22a53970049cf28164c8fe01ffd7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gm(r,o,c,a){return c<0&&o.ch==0?o.line>r.first?Xe(r,le(o.line-1)):null:c>0&&o.ch==(a||Oe(r,o.line)).text.length?o.line<r.first+r.size-1?le(o.line+1,0):null:new le(o.line,o.ch+c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b03c38e98bd409c19018e3ee83202a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mm(r){r.setSelection(le(r.firstLine(),0),le(r.lastLine()),Y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "386327b7f06591d6cfe60fb3118618b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vm(r,o,c){var a={canceled:!1,from:o.from,to:o.to,text:o.text,origin:o.origin,cancel:function(){return a.canceled=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12a6a56395fb5401620d1bfa27f8f847",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gs(r,o,c){if(r.cm){if(!r.cm.curOp)return Yt(r.cm,gs)(r,o,c);if(r.cm.state.suppressEdits)return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3a955be8396723d17e7e0b7184ab571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ym(r,o){if(!(o.text.length==1&&o.text[0]==\"\"&&Le(o.from,o.to)==0)){var c=Jf(r,o);sm(r,o,c,r.cm?r.cm.curOp.id:NaN),Cl(r,o,c,_f(r,o));var a=[];Fi(r,function(d,m){!m&&ge(a,d.history)==-1&&(Sm(d....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0cbb29a16b55832e9d538e151f1ad2ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sc(r,o,c){var a=r.cm&&r.cm.state.suppressEdits;if(!(a&&!c)){for(var d=r.history,m,b=r.sel,x=o==\"undo\"?d.done:d.undone,_=o==\"undo\"?d.undone:d.done,T=0;T<x.length&&(m=x[T],!(c?m.ranges&&!m.equa...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ead777637cca114ce6ca11931b2863d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bm(r,o){if(o!=0&&(r.first+=o,r.sel=new Zn(be(r.sel.ranges,function(d){return new gt(le(d.anchor.line+o,d.anchor.ch),le(d.head.line+o,d.head.ch))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad771faf8332ceddbb577e83e87086c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cl(r,o,c,a){if(r.cm&&!r.cm.curOp)return Yt(r.cm,Cl)(r,o,c,a);if(o.to.line<r.first){bm(r,o.text.length-1-(o.to.line-o.from.line));return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "63fa7d614f6d3c422d9d294436b60077",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R_(r,o,c){var a=r.doc,d=r.display,m=o.from,b=o.to,x=!1,_=m.line;r.options.lineWrapping||(_=N(xr(Oe(a,m.line))),a.iter(_,b.line+1,function(Z){if(Z==d.maxLine)return x=!0,!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a9855f9d1e090130940cfc2f14dc5f1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ms(r,o,c,a,d){var m;a||(a=c),Le(a,c)<0&&(m=[a,c],c=m[0],a=m[1]),typeof o==\"string\"&&(o=r.splitLines(o)),gs(r,{from:c,to:a,text:o,origin:d}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00796ff78814a5fabc806984427e218b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wm(r,o,c,a){c<r.line?r.line+=a:o<r.line&&(r.line=o,r.ch=0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d0719a0db480ac05cfdc6720f51f7209",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xm(r,o,c,a){for(var d=0;d<r.length;++d){var m=r[d],b=!0;if(m.ranges){m.copied||(m=r[d]=m.deepCopy(),m.copied=!0);for(var x=0;x<m.ranges.length;x++)wm(m.ranges[x].anchor,o,c,a),wm(m.ranges[x]....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c8f0271e6c29ac6e23078796ab5bb8c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sm(r,o){var c=o.from.line,a=o.to.line,d=o.text.length-(a-c)-1;xm(r.done,c,a,d),xm(r.undone,c,a,d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d0b8bf7fb17e7f4cc8c457ab2509f9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function El(r,o,c,a){var d=o,m=o;return typeof o==\"number\"?m=Oe(r,Qp(r,o)):d=N(o),d==null?null:(a(m,d)&&r.cm&&Oi(r.cm,d,c),m)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "27cf35924a324f26a1f5063c125db974",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Al(r){this.lines=r,this.parent=null;for(var o=0,c=0;c<r.length;++c)r[c].parent=this,o+=r[c].height;this.height=o}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e0e9694dcea2ba46a8585128732325f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ll(r){this.children=r;for(var o=0,c=0,a=0;a<r.length;++a){var d=r[a];o+=d.chunkSize(),c+=d.height,d.parent=this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "564d7c32ce8c1b99835e614bca301185",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _m(r,o,c){ai(o)<(r.curOp&&r.curOp.scrollTop||r.doc.scrollTop)&&qf(r,c)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "10d3b37d128bfbb83e5b6ab48379d393",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z_(r,o,c,a){var d=new $l(r,c,a),m=r.cm;return m&&d.noHScroll&&(m.display.alignWidgets=!0),El(r,o,\"widget\",function(b){var x=b.widgets||(b.widgets=[]);if(d.insertAt==null?x.push(d):x.splice(Ma...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "447eb73086f087c365eebddb9f1c0f97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vs(r,o,c,a,d){if(a&&a.shared)return D_(r,o,c,a,d);if(r.cm&&!r.cm.curOp)return Yt(r.cm,vs)(r,o,c,a,d);var m=new Hi(r,d),b=Le(o,c);if(a&&Q(a,m,!1),b>0||b==0&&m.clearWhenEmpty!==!1)return m;if(m...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "564a552cddb61d150bc2957d4b2910d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D_(r,o,c,a,d){a=Q(a),a.shared=!1;var m=[vs(r,o,c,a,d)],b=m[0],x=a.widgetNode;return Fi(r,function(_){x&&(a.widgetNode=x.cloneNode(!0)),m.push(vs(_,Xe(_,o),Xe(_,c),a,d));for(var T=0;T<_.linked...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f532beba1c5d29a27a379e8c09bee1cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tm(r){return r.findMarks(le(r.first,0),r.clipPos(le(r.lastLine())),function(o){return o.parent}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4fa474bac10ebe9f9b4b67f0afd11472",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function F_(r,o){for(var c=0;c<o.length;c++){var a=o[c],d=a.find(),m=r.clipPos(d.from),b=r.clipPos(d.to);if(Le(m,b)){var x=vs(r,m,b,a.primary,a.primary.type);a.markers.push(x),x.parent=a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59ede0d33b03cf3c6aae29d518743755",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H_(r){for(var o=function(a){var d=r[a],m=[d.primary.doc];Fi(d.primary.doc,function(_){return m.push(_)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3eb6c126c874d28ecf033804e5aa952",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W_(r){var o=this;if(Em(o),!(Ot(o,r)||ci(o.display,r))){un(r),h&&(Cm=+new Date);var c=ko(o,r,!0),a=r.dataTransfer.files;if(!(!c||o.isReadOnly()))if(a&&a.length&&window.FileReader&&window.File)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b344ed90eaadef5ca0d39ab4605c40fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function j_(r,o){if(h&&(!r.state.draggingText||+new Date-Cm<100)){$i(o);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b0d384ca190f1faadb4a1e6d4a9ec48b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q_(r,o){var c=ko(r,o);if(c){var a=document.createDocumentFragment();Ff(r,c,a),r.display.dragCursor||(r.display.dragCursor=S(\"div\",null,\"CodeMirror-cursors CodeMirror-dragcursors\"),r.display.l...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d3685b9ecf628dee66606aa761343ab7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Em(r){r.display.dragCursor&&(r.display.lineSpace.removeChild(r.display.dragCursor),r.display.dragCursor=null)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "82abc47f02572108350196f534db0a6f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Am(r){if(document.getElementsByClassName){for(var o=document.getElementsByClassName(\"CodeMirror\"),c=[],a=0;a<o.length;a++){var d=o[a].CodeMirror;d&&c.push(d)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08ca291075f6d6672c07522e68c0b298",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U_(){Lm||(V_(),Lm=!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0193a9e809814b6f11f1dbd9613fe6e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function V_(){var r;He(window,\"resize\",function(){r==null&&(r=setTimeout(function(){r=null,Am(G_)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26ee29060105f8e3dc0b31d7eda1d9ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function G_(r){var o=r.display;o.cachedCharWidth=o.cachedTextHeight=o.cachedPaddingH=null,o.scrollbarsClipped=!1,r.setSize()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "841962e061e91bb92ad4b9dd1ca13d48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function X_(r){var o=r.split(/-(?!$)/);r=o[o.length-1];for(var c,a,d,m,b=0;b<o.length-1;b++){var x=o[b];if(/^(cmd|meta|m)$/i.test(x))m=!0;else if(/^a(lt)?$/i.test(x))c=!0;else if(/^(c|ctrl|control)$/i...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86543ce9b6dab026d8fae76ec2c36d02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K_(r){var o={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "61f6346dd7d8343cecec4b3abd82bad2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ys(r,o,c,a){o=kc(o);var d=o.call?o.call(r,a):o[r];if(d===!1)return\"nothing\";if(d===\"...\")return\"multi\";if(d!=null&&c(d))return\"handled\";if(o.fallthrough){if(Object.prototype.toString.call(o.f...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9defbe4f0994424b0aaee20c24e2351",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mm(r,o,c){var a=r;return o.altKey&&a!=\"Alt\"&&(r=\"Alt-\"+r),(W?o.metaKey:o.ctrlKey)&&a!=\"Ctrl\"&&(r=\"Ctrl-\"+r),(W?o.ctrlKey:o.metaKey)&&a!=\"Mod\"&&(r=\"Cmd-\"+r),!c&&o.shiftKey&&a!=\"Shift\"&&(r=\"Shi...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "07f2aee76f3d0983064021c8bbd02da8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nm(r,o){if(L&&r.keyCode==34&&r.char)return!1;var c=Bi[r.keyCode];return c==null||r.altGraphKey?!1:(r.keyCode==3&&r.code&&(c=r.code),Mm(c,r,o))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0580ef988e24d2f81ce93803e665d8e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kc(r){return typeof r==\"string\"?fi[r]:r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "25c55d3b5b7889cffcd76c7538647563",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bs(r,o){for(var c=r.doc.sel.ranges,a=[],d=0;d<c.length;d++){for(var m=o(c[d]);a.length&&Le(m.from,ve(a).to)<=0;){var b=a.pop();if(Le(b.from,m.from)<0){m.from=b.from;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8d34baea91b7b1f5274c44c42a9106c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nd(r,o,c){var a=Xt(r.text,o+c,c);return a<0||a>r.text.length?null:a}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c0c2cee350b4b06213a442c526500684",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rd(r,o,c){var a=nd(r,o.ch,c);return a==null?null:new le(o.line,a,c<0?\"after\":\"before\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b526805a1e165a91002ff76ecf60ccf0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function id(r,o,c,a,d){if(r){o.doc.direction==\"rtl\"&&(d=-d);var m=tt(c,o.doc.direction);if(m){var b=d<0?ve(m):m[0],x=d<0==(b.level==1),_=x?\"after\":\"before\",T;if(b.level>0||o.doc.direction==\"rtl\"){var ...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3668a7fc8098e640242fcecfd5752282",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function J_(r,o,c,a){var d=tt(o,r.doc.direction);if(!d)return rd(o,c,a);c.ch>=o.text.length?(c.ch=o.text.length,c.sticky=\"before\"):c.ch<=0&&(c.ch=0,c.sticky=\"after\");var m=Ft(d,c.ch,c.sticky),b=d[m];i...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "33208947319b09cb0b82583daa40bd9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Im(r,o){var c=Oe(r.doc,o),a=xr(c);return a!=c&&(o=N(a)),id(!0,r,a,o,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6cf4645bf59958af7dd975c7c9501b5e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Y_(r,o){var c=Oe(r.doc,o),a=PS(c);return a!=c&&(o=N(a)),id(!0,r,c,o,-1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "82fe0c2aa1a9585333e58aee8aab87cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pm(r,o){var c=Im(r,o.line),a=Oe(r.doc,c.line),d=tt(a,r.doc.direction);if(!d||d[0].level==0){var m=Math.max(c.ch,a.text.search(/\\S/)),b=o.line==c.line&&o.ch<=m&&o.ch;return le(c.line,b?0:m,c.s...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4dec1ef2f2379ac3d3359394cf98d87e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tc(r,o,c){if(typeof o==\"string\"&&(o=Pl[o],!o))return!1;r.display.input.ensurePolled();var a=r.display.shift,d=!1;try{r.isReadOnly()&&(r.state.suppressEdits=!0),c&&(r.display.shift=!1),d=o(r)!...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d5bd3e44da431fc4dfc392b11e612866",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Z_(r,o,c){for(var a=0;a<r.state.keyMaps.length;a++){var d=ys(o,r.state.keyMaps[a],c,r);if(d)return d}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29e30ffa1e93eb8180233872902af455",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ol(r,o,c,a){var d=r.state.keySeq;if(d){if($m(o))return\"handled\";if(/\\'$/.test(o)?r.state.keySeq=null:Q_.set(50,function(){r.state.keySeq==d&&(r.state.keySeq=null,r.display.input.reset())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f880eacdf2c6894db940d78dd3a7004f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Om(r,o,c,a){var d=Z_(r,o,a);return d==\"multi\"&&(r.state.keySeq=o),d==\"handled\"&&Jt(r,\"keyHandled\",r,o,c),(d==\"handled\"||d==\"multi\")&&(un(c),Hf(r)),!!d}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1e5ec7972ce6285ac9d2c778a7d010c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rm(r,o){var c=Nm(o,!0);return c?o.shiftKey&&!r.state.keySeq?Ol(r,\"Shift-\"+c,o,function(a){return Tc(r,a,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5aac3e8e085984c4aba9a37111186fb5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ek(r,o,c){return Ol(r,\"'\"+c+\"'\",o,function(a){return Tc(r,a,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8a2d41ec842e936bbc3b6a20232f10a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zm(r){var o=this;if(!(r.target&&r.target!=o.display.input.getField())&&(o.curOp.focus=ue(Ke(o)),!Ot(o,r))){h&&p<11&&r.keyCode==27&&(r.returnValue=!1);var c=r.keyCode;o.display.shift=c==16||r....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ec7ba04be06add853eab5f7f9feff1c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tk(r){var o=r.display.lineDiv;we(o,\"CodeMirror-crosshair\");function c(a){(a.keyCode==18||!a.altKey)&&(C(o,\"CodeMirror-crosshair\"),cn(document,\"keyup\",c),cn(document,\"mouseover\",c))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "14793172a90e2b20ddc1707732b55bc2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dm(r){r.keyCode==16&&(this.doc.sel.shift=!1),Ot(this,r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7f2b46839b94657be30e54d61849a96e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fm(r){var o=this;if(!(r.target&&r.target!=o.display.input.getField())&&!(ci(o.display,r)||Ot(o,r)||r.ctrlKey&&!r.altKey||z&&r.metaKey)){var c=r.keyCode,a=r.charCode;if(L&&c==od){od=null,un(r)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bc2b936a83fe500bcef5e8f599c3b567",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rk(r,o){var c=+new Date;return zl&&zl.compare(c,r,o)?(Rl=zl=null,\"triple\"):Rl&&Rl.compare(c,r,o)?(zl=new sd(c,r,o),Rl=null,\"double\"):(Rl=new sd(c,r,o),zl=null,\"single\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1b904d19f5f107c104e8e8a7dc97d4e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hm(r){var o=this,c=o.display;if(!(Ot(o,r)||c.activeTouch&&c.input.supportsTouch())){if(c.input.ensurePolled(),c.shift=r.shiftKey,ci(c,r)){g||(c.scroller.draggable=!1,setTimeout(function(){ret...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ed51d588bc1e44fd53ad7bbd8ec4dbe6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ik(r,o,c,a,d){var m=\"Click\";return a==\"double\"?m=\"Double\"+m:a==\"triple\"&&(m=\"Triple\"+m),m=(o==1?\"Left\":o==2?\"Middle\":\"Right\")+m,Ol(r,Mm(m,d),d,function(b){if(typeof b==\"string\"&&(b=Pl[b]),!b)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "262ef5faccdbbbb7996b28bd542c1f84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ok(r,o,c){var a=r.getOption(\"configureMouse\"),d=a?a(r,o,c):{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "681ae2732de4520c9f6b447bb0ede686",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sk(r,o,c,a){h?setTimeout(U(Bg,r),0):r.curOp.focus=ue(Ke(r));var d=ok(r,c,a),m=r.doc.sel,b;r.options.dragDrop&&bf&&!r.isReadOnly()&&c==\"single\"&&(b=m.contains(o))>-1&&(Le((b=m.ranges[b]).from(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a38d92838600344b88dd8dddb4334528",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lk(r,o,c,a){var d=r.display,m=!1,b=Yt(r,function(T){g&&(d.scroller.draggable=!1),r.state.draggingText=!1,r.state.delayingBlurEvent&&(r.hasFocus()?r.state.delayingBlurEvent=!1:Bf(r)),cn(d.wrap...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8cd97c9ac609c6ef74a4b7ac86eaa1fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bm(r,o,c){if(c==\"char\")return new gt(o,o);if(c==\"word\")return r.findWordAt(o);if(c==\"line\")return new gt(le(o.line,0),Xe(r.doc,le(o.line+1,0)));var a=c(r,o);return new gt(a.from,a.to)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f3779b8e23cc3f3bcf5ded62d248af8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ak(r,o,c,a){h&&Bf(r);var d=r.display,m=r.doc;un(o);var b,x,_=m.sel,T=_.ranges;if(a.addNew&&!a.extend?(x=m.sel.contains(c),x>-1?b=T[x]:b=new gt(c,c)):(b=m.sel.primary(),x=m.sel.primIndex),a.un...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "56cebb3dfcb8329f02058c3bffe7ac8a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function re(Te){if(Le(X,Te)!=0)if(X=Te,a.unit==\"rectangle\"){for(var Ne=[],Be=r.options.tabSize,ze=J(Oe(m,c.line).text,c.ch,Be),Qe=J(Oe(m,Te.line).text,Te.ch,Be),xt=Math.min(ze,Qe),Qt=Math.max(ze,Qe),$...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd13083b4707053051c91b789c10f05f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function me(Te){var Ne=++ce,Be=ko(r,Te,!0,a.unit==\"rectangle\");if(Be)if(Le(Be,X)!=0){r.curOp.focus=ue(Ke(r)),re(Be);var ze=hc(d,m);(Be.line>=ze.to||Be.line<ze.from)&&setTimeout(Yt(r,function(){ce==Ne&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1ac7d32cfc4e0693755a19acb31a50bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Se(Te){r.state.selectingText=!1,ce=1/0,Te&&(un(Te),d.input.focus()),cn(d.wrapper.ownerDocument,\"mousemove\",ke),cn(d.wrapper.ownerDocument,\"mouseup\",$e),m.history.lastSelOrigin=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f90b260fc42c621c8a59a255f8ce6ddb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ck(r,o){var c=o.anchor,a=o.head,d=Oe(r.doc,c.line);if(Le(c,a)==0&&c.sticky==a.sticky)return o;var m=tt(d);if(!m)return o;var b=Ft(m,c.ch,c.sticky),x=m[b];if(x.from!=c.ch&&x.to!=c.ch)return o;...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eed83d8094bdc8696d216bffcbfb81e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wm(r,o,c,a){var d,m;if(o.touches)d=o.touches[0].clientX,m=o.touches[0].clientY;else try{d=o.clientX,m=o.clientY}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a59f50cea1257fce49a33d6a3ef994ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ld(r,o){return Wm(r,o,\"gutterClick\",!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b6e304951cff79fb642d002a1b8c4bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jm(r,o){ci(r.display,o)||uk(r,o)||Ot(r,o,\"contextmenu\")||q||r.display.input.onContextMenu(o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b25cf22faf185ad59724c93585109752",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uk(r,o){return Hn(r,\"gutterContextMenu\")?Wm(r,o,\"gutterContextMenu\",!1):!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "78818778b408abc69d6c3300baa3bb68",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qm(r){r.display.wrapper.className=r.display.wrapper.className.replace(/\\s*cm-s-\\S+/g,\"\")+r.options.theme.replace(/(^|\\s)\\s*/g,\" cm-s-\"),vl(r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbccb0b603aba90b7897907860d737b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fk(r){var o=r.optionHandlers;function c(a,d,m,b){r.defaults[a]=d,m&&(o[a]=b?function(x,_,T){T!=ws&&m(x,_,T)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3029702ddd7163f8ef7dba203b61f23e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dk(r,o,c){var a=c&&c!=ws;if(!o!=!a){var d=r.display.dragFunctions,m=o?He:cn;m(r.display.scroller,\"dragstart\",d.start),m(r.display.scroller,\"dragenter\",d.enter),m(r.display.scroller,\"dragover\"...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "83786932aecbe93285a345a48cf744a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hk(r){r.options.lineWrapping?(we(r.display.wrapper,\"CodeMirror-wrap\"),r.display.sizer.style.minWidth=\"\",r.display.sizerWidth=null):(C(r.display.wrapper,\"CodeMirror-wrap\"),Ef(r)),Df(r),kn(r),v...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "495d43b33dff50526c478d5d4f5fbfed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ct(r,o){var c=this;if(!(this instanceof Ct))return new Ct(r,o);this.options=o=o?Q(o):{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "381e0f2052d7482d4a1e342762241571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pk(r){var o=r.display;He(o.scroller,\"mousedown\",Yt(r,Hm)),h&&p<11?He(o.scroller,\"dblclick\",Yt(r,function(_){if(!Ot(r,_)){var T=ko(r,_);if(!(!T||ld(r,_)||ci(r.display,_))){un(_);var H=r.findWo...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1b608cdfd26174bddc53183c5218a675",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function d(){o.activeTouch&&(c=setTimeout(function(){return o.activeTouch=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cc3d31ba244b7f5eea196f0f380996f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m(_){if(_.touches.length!=1)return!1;var T=_.touches[0];return T.radiusX<=1&&T.radiusY<=1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "845d36ebc8e569e14fdc4c1960bca172",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b(_,T){if(T.left==null)return!0;var H=T.left-_.left,X=T.top-_.top;return H*H+X*X>20*20}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08a418179efbcb7c29a22eb10e769eaf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dl(r,o,c,a){var d=r.doc,m;c==null&&(c=\"add\"),c==\"smart\"&&(d.mode.indent?m=dl(r,o).state:c=\"prev\");var b=r.options.tabSize,x=Oe(d,o),_=J(x.text,null,b);x.stateAfter&&(x.stateAfter=null);var T=...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0bb06c2c0a1f95618964d9a5686825a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ec(r){kr=r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8c86abc6a356128096a29ec7c7ef501c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function cd(r,o,c,a,d){var m=r.doc;r.display.shift=!1,a||(a=m.sel);var b=+new Date-200,x=d==\"paste\"||r.state.pasteIncoming>b,_=lr(o),T=null;if(x&&a.ranges.length>1)if(kr&&kr.text.join(`\n`)==o){if(a.ra...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2cc95a5626f329faa8120b3764efb89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vm(r,o){var c=r.clipboardData&&r.clipboardData.getData(\"Text\");if(c)return r.preventDefault(),!o.isReadOnly()&&!o.options.disableInput&&o.hasFocus()&&Bn(o,function(){return cd(o,c,0,null,\"pas...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5fafc4117187705abfab57f59fd69a5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gm(r,o){if(!(!r.options.electricChars||!r.options.smartIndent))for(var c=r.doc.sel,a=c.ranges.length-1;a>=0;a--){var d=c.ranges[a];if(!(d.head.ch>100||a&&c.ranges[a-1].head.line==d.head.line)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "125ba77c7d01383fffc30bc4baf5a3ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xm(r){for(var o=[],c=[],a=0;a<r.doc.sel.ranges.length;a++){var d=r.doc.sel.ranges[a].head.line,m={anchor:le(d,0),head:le(d+1,0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e98ed19aa693987c3e92818cbeca1016",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ud(r,o,c,a){r.setAttribute(\"autocorrect\",c?\"on\":\"off\"),r.setAttribute(\"autocapitalize\",a?\"on\":\"off\"),r.setAttribute(\"spellcheck\",!!o)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3c0855631cac45432067a1944389860",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Km(){var r=S(\"textarea\",null,null,\"position: absolute; bottom: -1em; padding: 0; width: 1px; height: 1em; min-height: 1em; outline: none\"),o=S(\"div\",[r],null,\"overflow: hidden; position: rela...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "01783a27efcfa16322b1a70f2e83413d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gk(r){var o=r.optionHandlers,c=r.helpers={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "276792d4832448e6080b3be534270210",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fd(r,o,c,a,d){var m=o,b=c,x=Oe(r,o.line),_=d&&r.direction==\"rtl\"?-c:c;function T(){var $e=o.line+_;return $e<r.first||$e>=r.first+r.size?!1:(o=new le($e,o.ch,o.sticky),x=Oe(r,$e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7eab07d97100e72b3cf480ff6f31e451",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H($e){var Te;if(a==\"codepoint\"){var Ne=x.text.charCodeAt(o.ch+(c>0?0:-1));if(isNaN(Ne))Te=null;else{var Be=c>0?Ne>=55296&&Ne<56320:Ne>=56320&&Ne<57343;Te=new le(o.line,Math.max(0,Math.min(x.t...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "990d0710d29a6a5f79b397d7ebdbfcf0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jm(r,o,c,a){var d=r.doc,m=o.left,b;if(a==\"page\"){var x=Math.min(r.display.wrapper.clientHeight,ie(r).innerHeight||d(r).documentElement.clientHeight),_=Math.max(x-.5*as(r.display),3);b=(c>0?o....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2151945e557fc4087258cecaf20638ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m(x){for(var _=x.target;_;_=_.parentNode){if(_==d)return!0;if(/\\bCodeMirror-(?:line)?widget\\b/.test(_.className))break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f352bdd7914e56af2f61f6c9e2808a71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b(x){if(!(!m(x)||Ot(a,x))){if(a.somethingSelected())Ec({lineWise:!1,text:a.getSelections()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3f5c4602156066262dd0ea5c17a4ee94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function c(){o.cm.state.focused&&(o.pollSelection(),o.polling.set(o.cm.options.pollInterval,c))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1b564295f3183dc04b5019cd46cf2885",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ym(r,o){var c=Mf(r,o.line);if(!c||c.hidden)return null;var a=Oe(r.doc,o.line),d=Cg(c,a,o.line),m=tt(a,r.doc.direction),b=\"left\";if(m){var x=Ft(m,o.ch);b=x%2?\"right\":\"left\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f55ac9944a8c4737f9df7a8db488908",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mk(r){for(var o=r;o;o=o.parentNode)if(/CodeMirror-gutter-wrapper/.test(o.className))return!0;return!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d56cb89be74ec0c8bd224ce1938afa6f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xs(r,o){return o&&(r.bad=!0),r}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "16894890ef0dcb44767969df5a038b13",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vk(r,o,c,a,d){var m=\"\",b=!1,x=r.doc.lineSeparator(),_=!1;function T(Z){return function(ce){return ce.id==Z}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "872b32db86d56dfc3ccea647020f94cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H(){b&&(m+=x,_&&(m+=x),b=_=!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7e639ea8dfb88f51b6fb8883e0bf249a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function X(Z){Z&&(H(),m+=Z)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "abe4ecbeedcc8ab5cb7e26cfcd560e73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function re(Z){if(Z.nodeType==1){var ce=Z.getAttribute(\"cm-text\");if(ce){X(ce);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "88e3a82f756ca366e7edfbbc2b9901ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ac(r,o,c){var a;if(o==r.display.lineDiv){if(a=r.display.lineDiv.childNodes[c],!a)return xs(r.clipPos(le(r.display.viewTo-1)),!0);o=null,c=0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "274bc16ce80f18304c9e7fefccf2c31e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yk(r,o,c){var a=r.text.firstChild,d=!1;if(!o||!oe(a,o))return xs(le(N(r.line),0),!0);if(o==a&&(d=!0,o=a.childNodes[c],c=0,!o)){var m=r.rest?ve(r.rest):r.line;return xs(le(N(m),m.text.length),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12b67f7f13c0f77670f20c691c4e66d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H(Se,ke,$e){for(var Te=-1;Te<(T?T.length:0);Te++)for(var Ne=Te<0?_.map:T[Te],Be=0;Be<Ne.length;Be+=3){var ze=Ne[Be+2];if(ze==Se||ze==ke){var Qe=N(Te<0?r.line:r.rest[Te]),xt=Ne[Be]+$e;return($...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f67119fd854c61a18ac55337f481d6c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m(b){if(!Ot(a,b)){if(a.somethingSelected())Ec({lineWise:!1,text:a.getSelections()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cfe22ba4b10811d0c03595f46f251dbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function c(){var a=o.poll();!a&&!r?(r=!0,o.polling.set(60,c)):(o.pollingFast=!1,o.slowPoll())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3ba78125178c7253ab8eaae8f74722c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function re(){if(d.selectionStart!=null){var me=c.somethingSelected(),Se=\"​\"+(me?d.value:\"\");d.value=\"⇚\",d.value=Se,o.prevInput=me?\"\":\"​\",d.selectionStart=1,d.selectionEnd=Se.length,a.selForContextMen...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e5d4c858633261e565149bbf602f8cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Z(){if(o.contextMenuPending==Z&&(o.contextMenuPending=!1,o.wrapper.style.cssText=T,d.style.cssText=_,h&&p<9&&a.scrollbars.setScrollTop(a.scroller.scrollTop=b),d.selectionStart!=null)){(!h||h&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c43f833df2b45f338df20f414f796b04",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bk(r,o){if(o=o?Q(o):{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ea3e4a9b719179efc16b775128743b3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function a(){r.value=x.getValue()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c62853f6e46b3b0c93acc3880280e600",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wk(r){r.off=cn,r.on=He,r.wheelEventPixels=E_,r.Doc=Tn,r.splitLines=lr,r.countColumn=J,r.findColumn=he,r.isWordChar=rt,r.Pass=V,r.signal=Pt,r.Line=os,r.changeEnd=Di,r.scrollbarModel=Vg,r.Pos=l...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8344c96b58f7b004682f15d6b7ad4560",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m1(){return Q0||(Q0=1,function(e,t){(function(n){n(sl())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f96cb020951f20072c3663ff1f6b88a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function N(Kt){return{type:Kt,style:\"keyword\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eb627be3f48f965f228b154596b5280c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(N,G,de){return A=N,E=de,G}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6907e360ad2d274934074ff3fcf54cc9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(N,G){var de=N.next();if(de=='\"'||de==\"'\")return G.tokenize=k(de),G.tokenize(N,G);if(de==\".\"&&N.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/))return M(\"number\",\"number\");if(de==\".\"&&N.match(\"..\"))...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5228137da58bb43c1973fa399f867310",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(N){return function(G,de){var xe=!1,le;if(f&&G.peek()==\"@\"&&G.match(L))return de.tokenize=O,M(\"jsonld-keyword\",\"meta\");for(;(le=G.next())!=null&&!(le==N&&!xe);)xe=!xe&&le==\"\\\\\";return xe||(d...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "84fdfd725c79437de4cb0d83cee06b29",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(N,G){for(var de=!1,xe;xe=N.next();){if(xe==\"/\"&&de){G.tokenize=O;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3683d16f3a92309ac54bf0d0347ccd4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(N,G){for(var de=!1,xe;(xe=N.next())!=null;){if(!de&&(xe==\"`\"||xe==\"$\"&&N.eat(\"{\"))){G.tokenize=O;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ab7f19bbf3271743f5b4eefb8e3a81b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(N,G){G.fatArrowAt&&(G.fatArrowAt=null);var de=N.string.indexOf(\"=>\",N.start);if(!(de<0)){if(g){var xe=/:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4071eb3fc804d1c5421a405d0719cead",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(N,G,de,xe,le,Le){this.indented=N,this.column=G,this.type=de,this.prev=le,this.info=Le,xe!=null&&(this.align=xe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59392a4052d296e4a1607abb73b8d0b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K(N,G){if(!p)return!1;for(var de=N.localVars;de;de=de.next)if(de.name==G)return!0;for(var xe=N.context;xe;xe=xe.prev)for(var de=xe.vars;de;de=de.next)if(de.name==G)return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c54ec2933f859b2dae0a2b830c6013ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C(N,G,de,xe,le){var Le=N.cc;for(P.state=N,P.stream=le,P.marked=null,P.cc=Le,P.style=G,N.lexical.hasOwnProperty(\"align\")||(N.lexical.align=!0);;){var pt=Le.length?Le.pop():h?ge:J;if(pt(de,xe))...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f5da3cd0dd516856a496a04e3f3fd05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function I(){for(var N=arguments.length-1;N>=0;N--)P.cc.push(arguments[N])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1ed046f90ae8996d29780b68c32514d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S(){return I.apply(null,arguments),!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59e51cb65ba0de6d12b47ba6e0b2b5a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R(N,G){for(var de=G;de;de=de.next)if(de.name==N)return!0;return!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29b9b6c212302caea84ec63c3e3e8e0b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function B(N){var G=P.state;if(P.marked=\"def\",!!p){if(G.context){if(G.lexical.info==\"var\"&&G.context&&G.context.block){var de=oe(N,G.context);if(de!=null){G.context=de;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08e9c2100e490ab9dd3097eea88fdda7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oe(N,G){if(G)if(G.block){var de=oe(N,G.prev);return de?de==G.prev?G:new we(de,G.vars,!0):null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "66c1c2515c78c3cd8811092bf923199b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ue(N){return N==\"public\"||N==\"private\"||N==\"protected\"||N==\"abstract\"||N==\"readonly\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "62894a74de3826170bf8d946713d3bf0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function we(N,G,de){this.prev=N,this.vars=G,this.block=de}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2d9bb8cf86dccc56b5833b514cafaaf7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pe(N,G){this.name=N,this.next=G}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4fe82ac377a61c649c9dcd0df707e4c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ze(){P.state.context=new we(P.state.context,P.state.localVars,!1),P.state.localVars=qe}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "df43c3750e00915ac8ea709816e12f88",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ke(){P.state.context=new we(P.state.context,P.state.localVars,!0),P.state.localVars=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08ace1ea29f6d8f459a61d2a5e69773f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Je(){P.state.localVars=P.state.context.vars,P.state.context=P.state.context.prev}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "46f0a1b657b099478ec9874dfdf4aca4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ie(N,G){var de=function(){var xe=P.state,le=xe.indented;if(xe.lexical.type==\"stat\")le=xe.lexical.indented;else for(var Le=xe.lexical;Le&&Le.type==\")\"&&Le.align;Le=Le.prev)le=Le.indented;xe.le...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3d71cc5b13753fc3a0a28815f141982b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U(){var N=P.state;N.lexical.prev&&(N.lexical.type==\")\"&&(N.indented=N.lexical.indented),N.lexical=N.lexical.prev)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2b015aae4713ff7f0ddcd511f81c2039",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Q(N){function G(de){return de==N?S():N==\";\"||de==\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d96f089fa2314c2e8f3884259dbebc1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function J(N,G){return N==\"var\"?S(ie(\"vardef\",G),Yo,Q(\";\"),U):N==\"keyword a\"?S(ie(\"form\"),V,J,U):N==\"keyword b\"?S(ie(\"form\"),J,U):N==\"keyword d\"?P.stream.match(/^\\s*$/,!1)?S():S(ie(\"stat\"),fe,Q(\";\"),U...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e3135aedee946e44148d8862739a97f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ae(N){if(N==\"(\")return S(yr,Q(\")\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fada1b9f2b6aaadb145c98d7244881bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ge(N,G){return Y(N,G,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9d666e3c3befa5a1e34402d696452bad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function F(N,G){return Y(N,G,!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d8d43e1a44de89ca80808d3c207b227a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function V(N){return N!=\"(\"?I():S(ie(\")\"),fe,Q(\")\"),U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2be85490da015f8e93c2839a88fdaefe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Y(N,G,de){if(P.state.fatArrowAt==P.stream.start){var xe=de?be:ve;if(N==\"(\")return S(Ze,ie(\")\"),lt(yr,\")\"),U,Q(\"=>\"),xe,Je);if(N==\"variable\")return I(Ze,Sn,Q(\"=>\"),xe,Je)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c932013f61a89b47cc00a1af3833306c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fe(N){return N.match(/[;\\}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad07a4f76b770fd5a223e9fc23b07ec6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pe(N,G){return N==\",\"?S(fe):he(N,G,!1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a7394362068a18b7cbd961d8bcb9e070",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function he(N,G,de){var xe=de==!1?pe:he,le=de==!1?ge:F;if(N==\"=>\")return S(Ze,de?be:ve,Je);if(N==\"operator\")return/\\+\\+|--/.test(G)||g&&G==\"!\"?S(xe):g&&G==\"<\"&&P.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3bf9c1cb34fa82aac35ad839bfa9707f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ce(N,G){return N!=\"quasi\"?I():G.slice(G.length-2)!=\"${\"?S(Ce):S(fe,Ee)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d649b4da49b9029fbcb1d35ef0dce463",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ee(N){if(N==\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "045924f807d99081ee7727f1201b263d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ve(N){return ee(P.stream,P.state),I(N==\"{\"?J:ge)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "98f392e1cec4d5def60e170fb5f2969a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function be(N){return ee(P.stream,P.state),I(N==\"{\"?J:F)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5ec5eef1bbd291ea2e7663448e497236",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function We(N){return function(G){return G==\".\"?S(N?De:Me):G==\"variable\"&&g?S(Hn,N?he:pe):I(N?F:ge)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "15cf928be1d3f09e2baec5972ddfdc02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Me(N,G){if(G==\"target\")return P.marked=\"keyword\",S(pe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "801c73472b191bd0e3c9cfd3257a7f19",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function De(N,G){if(G==\"target\")return P.marked=\"keyword\",S(he)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d0b22cc45b9fff25ea9a48a073d3c8d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ve(N){return N==\":\"?S(U,J):I(pe,Q(\";\"),U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bfee415763894462d58fd80ad924c3cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rt(N){if(N==\"variable\")return P.marked=\"property\",S()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "def7f6a6557aae5eb30e019784863701",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function st(N,G){if(N==\"async\")return P.marked=\"property\",S(st);if(N==\"variable\"||P.style==\"keyword\"){if(P.marked=\"property\",G==\"get\"||G==\"set\")return S(ut);var de;return g&&P.state.fatArrowAt==P.stre...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12a30c8ea4f5344bcd22f7bad433af9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ut(N){return N!=\"variable\"?I(It):(P.marked=\"property\",S(lr))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cb8828275f2fe5c8f176cd7f0f3478e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function It(N){if(N==\":\")return S(F);if(N==\"(\")return I(lr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9f1055f60ebf2d2a8d68b831b1b2a48f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lt(N,G,de){function xe(le,Le){if(de?de.indexOf(le)>-1:le==\",\"){var pt=P.state.lexical;return pt.info==\"call\"&&(pt.pos=(pt.pos||0)+1),S(function(Kt,_n){return Kt==G||_n==G?I():I(N)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "baca95c680e4bc47653e5fc06484f75e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xt(N,G,de){for(var xe=3;xe<arguments.length;xe++)P.cc.push(arguments[xe]);return S(ie(G,de),lt(N,G),U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cdf88f5930f706913e62564a29532510",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bt(N){return N==\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a018a601ab89d9f24d2274c07faa545c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dn(N,G){if(g){if(N==\":\")return S(tt);if(G==\"?\")return S(Dn)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ef124198d280fead1b2f731ef215153e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hr(N,G){if(g&&(N==\":\"||G==\"in\"))return S(tt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "75ca79e51472db929802c2e6a18f7338",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ft(N){if(g&&N==\":\")return P.stream.match(/^\\s*\\w+\\s+is\\b/,!1)?S(ge,Fn,tt):S(tt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0f80d8bf2a5c3b8e3793e2aa8d1a9cf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fn(N,G){if(G==\"is\")return P.marked=\"keyword\",S()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "575553177e5b923540cfbbdf368177ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tt(N,G){if(G==\"keyof\"||G==\"typeof\"||G==\"infer\"||G==\"readonly\")return P.marked=\"keyword\",S(G==\"typeof\"?F:tt);if(N==\"variable\"||G==\"void\")return P.marked=\"type\",S(sr);if(G==\"|\"||G==\"&\")return S...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2aded8ac6872855d1cea99af79da5cb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ya(N){if(N==\"=>\")return S(tt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bc277bf6632126b0f1b66278dc198a5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function He(N){return N.match(/[\\}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "484a604f1361736f6f961ce21be977e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oi(N,G){if(N==\"variable\"||P.style==\"keyword\")return P.marked=\"property\",S(oi);if(G==\"?\"||N==\"number\"||N==\"string\")return S(oi);if(N==\":\")return S(tt);if(N==\"[\")return S(Q(\"variable\"),Hr,Q(\"]\"...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "31f3a327ff1674a8dda59b1838eb12d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cn(N,G){return N!=\"quasi\"?I():G.slice(G.length-2)!=\"${\"?S(cn):S(tt,Pt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cbda588e10679a3504be799152301ea0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pt(N){if(N==\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7a09671659ee676b64b931710ded58e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ot(N,G){return N==\"variable\"&&P.stream.match(/^\\s*[?:]/,!1)||G==\"?\"?S(Ot):N==\":\"?S(tt):N==\"spread\"?S(Ot):I(tt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "65a5449af764f5897c8e807c5251c3a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sr(N,G){if(G==\"<\")return S(ie(\">\"),lt(tt,\">\"),U,sr);if(G==\"|\"||N==\".\"||G==\"&\")return S(tt);if(N==\"[\")return S(tt,Q(\"]\"),sr);if(G==\"extends\"||G==\"implements\")return P.marked=\"keyword\",S(tt);if...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "93c5627274e71f78feb1719e0447cd35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hn(N,G){if(G==\"<\")return S(ie(\">\"),lt(tt,\">\"),U,sr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "04ce85309184a3ff4bb40a27a0312bdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mr(){return I(tt,un)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "82949fe7c23098f7682f79bf9d27e3ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function un(N,G){if(G==\"=\")return S(tt)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d35349bd00dadbd47ca999445632ba3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yo(N,G){return G==\"enum\"?(P.marked=\"keyword\",S(Oe)):I(Sn,Dn,vr,bf)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c2c75bd03efc7d5fb75e27dba520ca4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sn(N,G){if(g&&ue(G))return P.marked=\"keyword\",S(Sn);if(N==\"variable\")return B(G),S();if(N==\"spread\")return S(Sn);if(N==\"[\")return Xt(al,\"]\");if(N==\"{\")return Xt($i,\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "146005f8b00dd6f38535d1dc66e8798c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function al(){return I(Sn,vr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "09fe6b8bebc8edd6224aa0286c0addc3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vr(N,G){if(G==\"=\")return S(F)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a6bd9d223413d87be5f95b19c4df62e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bf(N){if(N==\",\")return S(Yo)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91015034ef567c2d31c25b050d2578a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zo(N,G){if(N==\"keyword b\"&&G==\"else\")return S(ie(\"form\",\"else\"),J,U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7729adc0f3c65cbb45ff090fce18887e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Za(N,G){if(G==\"await\")return S(Za);if(N==\"(\")return S(ie(\")\"),cl,U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "faed6c546e98a7e23f11571de053b0a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cl(N){return N==\"var\"?S(Yo,Mi):N==\"variable\"?S(Mi):I(Mi)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5b27ac728add78435316a5a350ccf510",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mi(N,G){return N==\")\"?S():N==\";\"?S(Mi):G==\"in\"||G==\"of\"?(P.marked=\"keyword\",S(ge,Mi)):I(ge,Mi)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "57e6586df128039f67e9b0f571b4dbfd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lr(N,G){if(G==\"*\")return P.marked=\"keyword\",S(lr);if(N==\"variable\")return B(G),S(lr);if(N==\"(\")return S(Ze,ie(\")\"),lt(yr,\")\"),U,Ft,J,Je);if(g&&G==\"<\")return S(ie(\">\"),lt(mr,\">\"),U,lr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36d9f37c4bf3754f44711acd13b59f70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ni(N,G){if(G==\"*\")return P.marked=\"keyword\",S(Ni);if(N==\"variable\")return B(G),S(Ni);if(N==\"(\")return S(Ze,ie(\")\"),lt(yr,\")\"),U,Ft,Je);if(g&&G==\"<\")return S(ie(\">\"),lt(mr,\">\"),U,Ni)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d8ef9578847436e49c109282d3197d4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qa(N,G){if(N==\"keyword\"||N==\"variable\")return P.marked=\"type\",S(Qa);if(G==\"<\")return S(ie(\">\"),lt(mr,\">\"),U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "69a2dc9001d1b72183b87ce0924e6f57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yr(N,G){return G==\"@\"&&S(ge,yr),N==\"spread\"?S(yr):g&&ue(G)?(P.marked=\"keyword\",S(yr)):g&&N==\"this\"?S(Dn,vr):I(Sn,Dn,vr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b58af529bd2a4381817e1e612c4c1f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wf(N,G){return N==\"variable\"?Qo(N,G):br(N,G)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bbd5cdfb058b8f48bfea5ff10550dbc7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qo(N,G){if(N==\"variable\")return B(G),S(br)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7b936b64867a40be5eb4a8cc23fa4b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function br(N,G){if(G==\"<\")return S(ie(\">\"),lt(mr,\">\"),U,br);if(G==\"extends\"||G==\"implements\"||g&&N==\",\")return G==\"implements\"&&(P.marked=\"keyword\"),S(g?tt:ge,br);if(N==\"{\")return S(ie(\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3b65e3b214313e8b334f61df4a44ca2d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wr(N,G){if(N==\"async\"||N==\"variable\"&&(G==\"static\"||G==\"get\"||G==\"set\"||g&&ue(G))&&P.stream.match(/^\\s+#?[\\w$\\xa1-\\uffff]/,!1))return P.marked=\"keyword\",S(wr);if(N==\"variable\"||P.style==\"keyw...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17a6b92354892f099b0a202b18c6e7ba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xo(N,G){if(G==\"!\"||G==\"?\")return S(xo);if(N==\":\")return S(tt,vr);if(G==\"=\")return S(F);var de=P.state.lexical.prev,xe=de&&de.info==\"interface\";return I(xe?Ni:lr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74896cadef1b0f1b103a90bcbdb80a2d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function es(N,G){return G==\"*\"?(P.marked=\"keyword\",S(rs,Q(\";\"))):G==\"default\"?(P.marked=\"keyword\",S(ge,Q(\";\"))):N==\"{\"?S(lt(ts,\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8901749e81d73812287900af506b8c2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ts(N,G){if(G==\"as\")return P.marked=\"keyword\",S(Q(\"variable\"));if(N==\"variable\")return I(F,ts)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f0a9ccf203e73857af66631b3f10b41c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ii(N){return N==\"string\"?S():N==\"(\"?I(ge):N==\".\"?I(pe):I(ns,Br,rs)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "befaaf757a18e2e9ca95e12cd8336c1b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ns(N,G){return N==\"{\"?Xt(ns,\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "33f7331b084516440dbb4374e17a5cb0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Br(N){if(N==\",\")return S(ns,Br)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aee49ac7f5400a5770b2f0b92c80f771",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ul(N,G){if(G==\"as\")return P.marked=\"keyword\",S(ns)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bed27e6b3ed79a9ba4b78d4371a6175d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rs(N,G){if(G==\"from\")return P.marked=\"keyword\",S(ge)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbc541e7789194ae6ed26b733a225c64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rt(N){return N==\"]\"?S():I(lt(F,\"]\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0d29a1b39b752f273c69b36c17685fbf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oe(){return I(ie(\"form\"),Sn,Q(\"{\"),ie(\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3d7329eabc1129d91d06bd9f563268e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function si(){return I(Sn,vr)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3ede2d40c7e5dd34f89c6cf0dd0329ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fl(N,G){return N.lastType==\"operator\"||N.lastType==\",\"||w.test(G.charAt(0))||/[,.]/.test(G.charAt(0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd63f942241eb9523675c640ad370989",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yn(N,G,de){return G.tokenize==O&&/^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "482ddc148773d040cb3fc296b733d4a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v1(){return ty||(ty=1,function(e,t){(function(n){n(sl())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7ae56be2cae8cdae6dd4c5ff84ba5cb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(S,R){function B(we){return R.tokenize=we,we(S,R)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17ab96fbb9ec95e85d5a11abd7f320b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(S,R){var B=S.next();if(B==\">\"||B==\"/\"&&S.eat(\">\"))return R.tokenize=w,v=B==\">\"?\"endTag\":\"selfcloseTag\",\"tag bracket\";if(B==\"=\")return v=\"equals\",null;if(B==\"<\"){R.tokenize=w,R.state=D,R.tag...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d8060f9f8a045c9b78765ca9ad6efe4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(S,R){return function(B,oe){for(;!B.eol();){if(B.match(R)){oe.tokenize=w;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "19316c25c851b92de295bde22b75fb74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(S){return function(R,B){for(var oe;(oe=R.next())!=null;){if(oe==\"<\")return B.tokenize=E(S+1),B.tokenize(R,B);if(oe==\">\")if(S==1){B.tokenize=w;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f6026074c871839c9d3e481834c8877e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(S){return S&&S.toLowerCase()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77887e6398e294e53ad129e2f10280d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(S,R,B){this.prev=S.context,this.tagName=R||\"\",this.indent=S.indented,this.startOfLine=B,(h.doNotIndent.hasOwnProperty(R)||S.context&&S.context.noIndent)&&(this.noIndent=!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "25af2eda4f8bf1bbef8ae3fdb07036ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(S){S.context&&(S.context=S.context.prev)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa11e6b4380d840ea379242dea5660aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(S,R){for(var B;;){if(!S.context||(B=S.context.tagName,!h.contextGrabbers.hasOwnProperty(M(B))||!h.contextGrabbers[M(B)].hasOwnProperty(M(R))))return;k(S)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "38f7e0a9a6886f522063a5559f0561f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(S,R,B){return S==\"openTag\"?(B.tagStart=R.column(),te):S==\"closeTag\"?ee:D}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "478d46915ad9cb91f41088fe35955687",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function te(S,R,B){return S==\"word\"?(B.tagName=R.current(),y=\"tag\",K):h.allowMissingTagName&&S==\"endTag\"?(y=\"tag bracket\",K(S,R,B)):(y=\"error\",te)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "945401d35522f2bba31e9fb6d0f1e851",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(S,R,B){if(S==\"word\"){var oe=R.current();return B.context&&B.context.tagName!=oe&&h.implicitlyClosed.hasOwnProperty(M(B.context.tagName))&&k(B),B.context&&B.context.tagName==oe||h.matchClos...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d36a7e56e244a37ed68bb432c238f6ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W(S,R,B){return S!=\"endTag\"?(y=\"error\",W):(k(B),D)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f0172ef5af42956599fad6979b9e03ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(S,R,B){return y=\"error\",W(S,R,B)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "28a95954face80fd61c09b0ff9c6e417",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K(S,R,B){if(S==\"word\")return y=\"attribute\",C;if(S==\"endTag\"||S==\"selfcloseTag\"){var oe=B.tagName,ue=B.tagStart;return B.tagName=B.tagStart=null,S==\"selfcloseTag\"||h.autoSelfClosers.hasOwnProp...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ca43b237bb2abd56d0154574b6f871de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C(S,R,B){return S==\"equals\"?P:(h.allowMissing||(y=\"error\"),K(S,R,B))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3f81d1b4b18a4353d3f8bf2aa02c6514",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P(S,R,B){return S==\"string\"?I:S==\"word\"&&h.allowUnquoted?(y=\"string\",K):(y=\"error\",K(S,R,B))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6cb44fb247deaf99e765eb099b0f61dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function I(S,R,B){return S==\"string\"?I:K(S,R,B)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3170210cd6142e1f4a658af80e67177e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ade(){return ry||(ry=1,function(e,t){(function(n){n(sl(),v1(),m1())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "24015c96db41ec08a50fb05661778d65",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(l,u,f,h){this.state=l,this.mode=u,this.depth=f,this.prev=h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9e1466791e0a19e73aaf457787a2f224",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(l){return new i(n.copyState(l.mode,l.state),l.mode,l.depth,l.prev&&s(l.prev))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e5a479fccc1e6251442c70fd16c7cee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(w){var L=w.tagName;w.tagName=null;var $=f.indent(w,\"\",\"\");return w.tagName=L,$}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3cb8af5f88bd556c179e079de558c906",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(w,L){return L.context.mode==f?v(w,L,L.context):y(w,L,L.context)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a49862dbf80bee02d15bcc025bfc6bd8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(w,L,$){if($.depth==2)return w.match(/^.*?\\*\\//)?$.depth=1:w.skipToEnd(),\"comment\";if(w.peek()==\"{\"){f.skipAttribute($.state);var A=p($.state),E=$.state.context;if(E&&w.match(/^[^>]*>\\s*$/,!...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "271576899cf099490c60d123b8189dec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(w,L,$){if(w.peek()==\"<\"&&!w.match(/^<([^<>]|<[^>]*>)+,\\s*>/,!1)&&h.expressionAllowed(w,$.state))return L.context=new i(n.startState(f,h.indent($.state,\"\",\"\")),f,0,L.context),h.skipExpressio...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18f3151a3591679913a516bd24d4952c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lde(){return oy||(oy=1,function(e,t){(function(n){n(sl())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4e998b4ab3ea30ddaee330f699845b1a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(p){p.state.placeholder&&(p.state.placeholder.parentNode.removeChild(p.state.placeholder),p.state.placeholder=null)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "02a8643f601b80d4e1dfe07a39f02a8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(p){i(p);var g=p.state.placeholder=document.createElement(\"pre\");g.style.cssText=\"height: 0; overflow: visible\",g.style.direction=p.getOption(\"direction\"),g.className=\"CodeMirror-placeholder...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aad76041e4e13426fab17ce923806da0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(p){setTimeout(function(){var g=!1;if(p.lineCount()==1){var v=p.getInputField();g=v.nodeName==\"TEXTAREA\"?!p.getLine(0).length:!/[^\\u200b]/.test(v.querySelector(\".CodeMirror-line\").textConten...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc738b3e67bc1d9b8d42064c0a3fbe81",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(p){h(p)&&s(p)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "32fad3c751d843d04827fff86b719bf2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(p){var g=p.getWrapperElement(),v=h(p);g.className=g.className.replace(\" CodeMirror-empty\",\"\")+(v?\" CodeMirror-empty\":\"\"),v?s(p):i(p)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "240a4197df193b38bc113526bc7340f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(p){return p.lineCount()===1&&p.getLine(0)===\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "88867411130534ee907f0c1240600e0c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(u,f,h){this.orientation=f,this.scroll=h,this.screen=this.total=this.size=1,this.pos=0,this.node=document.createElement(\"div\"),this.node.className=u+\"-\"+f,this.inner=this.node.appendChild(do...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3f86e901b11879217db44c7b3ee42079",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(E){if(E.which!=1)return $();p.moveTo(L+(E[y]-w)*(p.total/p.size))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "288126581d54374664f780a3f08756e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(v){var y=n.wheelEventPixels(v)[p.orientation==\"horizontal\"?\"x\":\"y\"],w=p.pos;p.moveTo(p.pos+y),p.pos!=w&&n.e_preventDefault(v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "162182a3fa4441f46130de025324c18d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(u,f,h){this.addClass=u,this.horiz=new i(u,\"horizontal\",h),f(this.horiz.node),this.vert=new i(u,\"vertical\",h),f(this.vert.node),this.width=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0b3f324c0dce04001a459766c23ffa6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mde(e,t,n={}){const i=Ede.fromTextArea(e.value,{theme:\"vars\",...n,scrollbarStyle:\"simple\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9812fd3f1b344759d4813a92352a4a63",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nde(e){var t;hf({file:e.file.id,line:((t=e.location)==null?void 0:t.line)??0,view:\"editor\",test:null,column:null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f15e4c74839f9f0537ad629a273c36d1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ide(e,t){hf({file:e,column:t.column-1,line:t.line,view:\"editor\",test:js.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26a54e401dfd4bf3423eaf342dfe0f92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pde(e,t){if(!t.location)return;const{line:n,column:i,file:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d5bebf3c3be0522cd407f02ba9ed5a30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(f){return f.startsWith(t.root)?f.slice(t.root.length):f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "db60d0648a0d8b625a5999f6611d0a31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(f){return _fe(f.file,t.filename)?Ide(t.fileId,f):Ip(f.file,f.line,f.column)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d587cd88392235e41228b1cc220d1cfb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b1(e){var n;const t=(n=e.meta)==null?void 0:n.failScreenshotPath;t&&fetch(`/__open-in-editor?file=${encodeURIComponent(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "beaf16ddd4f58465a5329feeb9611d2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w1(){const e=Ue(!1),t=Ue(Date.now()),n=Ue(),i=_e(()=>{var f;const l=(f=n.value)==null?void 0:f.id,u=t.value;return l?`/__screenshot-error?id=${encodeURIComponent(l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ff9c0d54a4618bc3f3e3f2eacca1b8b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(l){n.value=l,t.value=Date.now(),e.value=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "31a2d5a3e38cf5765a833a452fa729d1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(v){return Pde(t.test,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b758c6f2848da570f3339a8f75af68a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(v){return`${sx(el.value.root,v.file)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8a27d33b7a045d89fff176402151161",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(h,p){var g;return((g=h.result)==null?void 0:g.state)!==\"fail\"?[]:h.type===\"test\"?[{...h,level:p}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b10ba469fffd2836c472cb52d85e5d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t(n){return new Date(n).toLocaleTimeString()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "67179822d0ee89a20730e8a2e779f381",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(i){const s=i&&ht.state.idMap.get(i);return s&&\"filepath\"in s?s.name:(s?h$(s).slice(1).join(\" > \"):\"-\")||\"-\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "831794b90ab45e83b7b4b986431433e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(C){var P;(P=C.result)!=null&&P.errors&&W.push(...C.result.errors),C.type===\"suite\"&&C.tasks.forEach(q)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "425129d492085017e73dc73648d66ad3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(C){C.type===\"test\"&&W.push(...C.annotations),C.type===\"suite\"&&C.tasks.forEach(q)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d171d04763442c5df105a0c74c2f0304",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(){A.forEach(([W,q,K])=>{W.removeEventListener(\"click\",q),K()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "07cb068a8d7f33d94a89350c3be22f53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(){u.value=l.value!==Mn.value.getValue()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4a8cefe8c0b30d19e3e131f4595ee80b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(W){const q=((W==null?void 0:W.stacks)||[]).filter(R=>{var B;return R.file&&R.file===((B=n.file)==null?void 0:B.filepath)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "384faf733951fd4fbd2feb8094a4b6f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(W){var B,oe;if(!W.location)return;const{line:q,file:K}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36853ae2116c9519b90c0b501bbe993c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(W){if(h.value)return;D(),h.value=!0,await Et();const q=Mn.value;q&&(q.setOption(\"readOnly\",!0),await Et(),q.refresh()),p.value=q==null?void 0:q.getCursor(),q==null||q.off(\"changes\",O),M(),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "35a57baec537c70a297cf566ae97e65b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ahe(e,t){let n;return(...i)=>{n!==void 0&&clearTimeout(n),n=setTimeout(()=>e(...i),t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0bfe0b705f25cd57948d7cb2c1771ae9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pf(e){var t=e+=\"\",n=t.indexOf(\":\");return n>=0&&(t=e.slice(0,n))!==\"xmlns\"&&(e=e.slice(n+1)),ay.hasOwnProperty(t)?{space:ay[t],local:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "da7f60901b89a80f6b0643b6ab56c9cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lhe(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===Nh&&t.documentElement.namespaceURI===Nh?t.createElement(e):t.createElementNS(n,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91f6e099518cfc9c28ff1beb65bbefb6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S1(e){var t=pf(e);return(t.local?$he:Lhe)(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c63fda6e195529f1dd07dc0a9c579692",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mhe(){}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6c77041c465aecacb624fa0f3e65a1a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dp(e){return e==null?Mhe:function(){return this.querySelector(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2f3d288b6437fc9b27d7649961b8d17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nhe(e){typeof e!=\"function\"&&(e=Dp(e));for(var t=this._groups,n=t.length,i=new Array(n),s=0;s<n;++s)for(var l=t[s],u=l.length,f=i[s]=new Array(u),h,p,g=0;g<u;++g)(h=l[g])&&(p=e.call(h,h.__dat...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eed346061c49356eb69b8d70057842bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ihe(e){return e==null?[]:Array.isArray(e)?e:Array.from(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ccf178aa85614cc62e2521c8bc494153",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Phe(){return[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "059ef575d9806679d46d25f51a13fc08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _1(e){return e==null?Phe:function(){return this.querySelectorAll(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ce32ef9d29ee9ad361163941c22c990a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ohe(e){return function(){return Ihe(e.apply(this,arguments))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0187bc102c90764a2c62a96ae055685c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rhe(e){typeof e==\"function\"?e=Ohe(e):e=_1(e);for(var t=this._groups,n=t.length,i=[],s=[],l=0;l<n;++l)for(var u=t[l],f=u.length,h,p=0;p<f;++p)(h=u[p])&&(i.push(e.call(h,h.__data__,p,u)),s.push...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e874aabcd6a5591c8d0a3df44af3d6c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k1(e){return function(){return this.matches(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f87afa0de8aca9b7baf91314cb5cd844",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function T1(e){return function(t){return t.matches(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "702aa74eb70301a325afdd6913494d98",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dhe(e){return function(){return zhe.call(this.children,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "43fb8d9acc11f88212c6d7bd9416eab7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fhe(){return this.firstElementChild}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e64cfdf1e24db86b657e509afa491319",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hhe(e){return this.select(e==null?Fhe:Dhe(typeof e==\"function\"?e:T1(e)))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "084e6f4a6a41621dea6a3e5231220699",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Whe(){return Array.from(this.children)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8236aaf38c5d50f405e3c66c9df07a5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jhe(e){return function(){return Bhe.call(this.children,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9f85184896ef2128615ddd18299dbd6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qhe(e){return this.selectAll(e==null?Whe:jhe(typeof e==\"function\"?e:T1(e)))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "16e2acbcdb3e8f7fa8f50783a003696b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uhe(e){typeof e!=\"function\"&&(e=k1(e));for(var t=this._groups,n=t.length,i=new Array(n),s=0;s<n;++s)for(var l=t[s],u=l.length,f=i[s]=[],h,p=0;p<u;++p)(h=l[p])&&e.call(h,h.__data__,p,l)&&f.pus...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cce3ead9c39614905230a947ac426dfe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C1(e){return new Array(e.length)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1020047584266509d557668901af8d08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vhe(){return new or(this._enter||this._groups.map(C1),this._parents)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c268ddb3f39eec31af89fc5913abfa44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ou(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6d7dc7786f6689afc50b0fa02db835fc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ghe(e){return function(){return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4628403b9b2e8b968736c5a2aed726ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xhe(e,t,n,i,s,l){for(var u=0,f,h=t.length,p=l.length;u<p;++u)(f=t[u])?(f.__data__=l[u],i[u]=f):n[u]=new Ou(e,l[u]);for(;u<h;++u)(f=t[u])&&(s[u]=f)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "603fecf744b1fd3a9f10269eb71bd920",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Khe(e,t,n,i,s,l,u){var f,h,p=new Map,g=t.length,v=l.length,y=new Array(g),w;for(f=0;f<g;++f)(h=t[f])&&(y[f]=w=u.call(h,h.__data__,f,t)+\"\",p.has(w)?s[f]=h:p.set(w,h));for(f=0;f<v;++f)w=u.call(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a47059b9d618651b709fb7709afa8cbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jhe(e){return e.__data__}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b4443adc4ef3bcb396c351618bcecc30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yhe(e,t){if(!arguments.length)return Array.from(this,Jhe);var n=t?Khe:Xhe,i=this._parents,s=this._groups;typeof e!=\"function\"&&(e=Ghe(e));for(var l=s.length,u=new Array(l),f=new Array(l),h=ne...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ec8422dcab56957d0bf118c3ef8a9eb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zhe(e){return typeof e==\"object\"&&\"length\"in e?e:Array.from(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "52088ab457f7d8924f05c1df1ba5cafe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qhe(){return new or(this._exit||this._groups.map(C1),this._parents)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7e94b12513457e10e880077f5e401722",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function epe(e,t,n){var i=this.enter(),s=this,l=this.exit();return typeof e==\"function\"?(i=e(i),i&&(i=i.selection())):i=i.append(e+\"\"),t!=null&&(s=t(s),s&&(s=s.selection())),n==null?l.remove():n(l),i&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "508ac88010b0bfc2982690c7db211d7d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tpe(e){for(var t=e.selection?e.selection():e,n=this._groups,i=t._groups,s=n.length,l=i.length,u=Math.min(s,l),f=new Array(s),h=0;h<u;++h)for(var p=n[h],g=i[h],v=p.length,y=f[h]=new Array(v),w...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1cb3489a185d5f2a785a553dc27e01a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function npe(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var i=e[t],s=i.length-1,l=i[s],u;--s>=0;)(u=i[s])&&(l&&u.compareDocumentPosition(l)^4&&l.parentNode.insertBefore(u,l),l=u);return this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5c8fa6c2b28438b481f69d068ecc30f1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rpe(e){e||(e=ipe);function t(v,y){return v&&y?e(v.__data__,y.__data__):!v-!y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e5af3632f9c55c6fecd27fa4f4b44819",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ipe(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "beff8a349747185c6e2fee451cc6be32",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ope(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a173344e51aa24350fedf4c9d9c44b7a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function spe(){return Array.from(this)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "732b4a692b60db248449637b7a827e6d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lpe(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var i=e[t],s=0,l=i.length;s<l;++s){var u=i[s];if(u)return u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ddd8e61177fad2a09a7402a9d4a90438",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ape(){let e=0;for(const t of this)++e;return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c98831dd2e80d03aed41642fc997ce9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cpe(){return!this.node()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "919aca4fec4340bb9b31b202ff1ab5b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function upe(e){for(var t=this._groups,n=0,i=t.length;n<i;++n)for(var s=t[n],l=0,u=s.length,f;l<u;++l)(f=s[l])&&e.call(f,f.__data__,l,s);return this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bfc67c49e1d81c354b0c1dd5d856acc9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fpe(e){return function(){this.removeAttribute(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7954f3674b76fed176cc2f8f31f0cf82",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dpe(e){return function(){this.removeAttributeNS(e.space,e.local)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7ae65ccbee3d6a671d079bbded3fd31d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hpe(e,t){return function(){this.setAttribute(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "175e8edd40478c5411799b2ec07da870",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ppe(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "631a25c83db48ddcc9de12242d18eb42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gpe(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttribute(e):this.setAttribute(e,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "158e20c8d57917e5187286ad9c43c0f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mpe(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96ac83b469288ae739c659a0153a7d83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vpe(e,t){var n=pf(e);if(arguments.length<2){var i=this.node();return n.local?i.getAttributeNS(n.space,n.local):i.getAttribute(n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7fcb5f2da0affcb6c7150bff71d33d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E1(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "87b6dfb73f61fa7fa49d70723a9cafe1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ype(e){return function(){this.style.removeProperty(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6616227433cfdc046ff96316a92aa3e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bpe(e,t,n){return function(){this.style.setProperty(e,t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "11940fc9d5dae6268a08d27729f38d03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wpe(e,t,n){return function(){var i=t.apply(this,arguments);i==null?this.style.removeProperty(e):this.style.setProperty(e,i,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "637b9c06593d0e2615e7a975b772f636",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xpe(e,t,n){return arguments.length>1?this.each((t==null?ype:typeof t==\"function\"?wpe:bpe)(e,t,n??\"\")):tl(this.node(),e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "28b9527b41b5773fb0709e3e39c5ac9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tl(e,t){return e.style.getPropertyValue(t)||E1(e).getComputedStyle(e,null).getPropertyValue(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0675eb8f230f39363bae2b0adc192f47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Spe(e){return function(){delete this[e]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae4d1c26fba1304f041bd2365a7cf050",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _pe(e,t){return function(){this[e]=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "14daf8aabce6a2a19a5eaa5622f77513",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kpe(e,t){return function(){var n=t.apply(this,arguments);n==null?delete this[e]:this[e]=n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3575d1cac5c4f907f34a237e183c5cb4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tpe(e,t){return arguments.length>1?this.each((t==null?Spe:typeof t==\"function\"?kpe:_pe)(e,t)):this.node()[e]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "52bf4689d18037353fd2f62e19b090f5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A1(e){return e.trim().split(/^|\\s+/)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8b70352cfe7956d16addb6ab25c51cf7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fp(e){return e.classList||new L1(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "78c2fe2609896063ab897d0207871dac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L1(e){this._node=e,this._names=A1(e.getAttribute(\"class\")||\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "289a3ef2ae761f84f022d93c08ab3947",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M1(e,t){for(var n=Fp(e),i=-1,s=t.length;++i<s;)n.remove(t[i])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "714fe8c4e6e1133cfcbe2137b2d75aa1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cpe(e){return function(){$1(this,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "16136a74dfb5f970e9d87f66e1922bb9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Epe(e){return function(){M1(this,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a679d9313ff6c28f4f3141f623f2bcb9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ape(e,t){return function(){(t.apply(this,arguments)?$1:M1)(this,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "403c6d0621a0374d7f5ed484a4718bac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lpe(e,t){var n=A1(e+\"\");if(arguments.length<2){for(var i=Fp(this.node()),s=-1,l=n.length;++s<l;)if(!i.contains(n[s]))return!1;return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8678219db3d0c1b24ee64c8c731af4e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mpe(e){return function(){this.textContent=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "886dbecf676a498ef8ad5982cbd8bdc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Npe(e){return function(){var t=e.apply(this,arguments);this.textContent=t??\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5bd1580b3529bdd2934cd2d5de029bb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ipe(e){return arguments.length?this.each(e==null?$pe:(typeof e==\"function\"?Npe:Mpe)(e)):this.node().textContent}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4bd4b83b256a3776dcc500451c630d46",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ppe(){this.innerHTML=\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cc94f67fe9145161792bb01f4ec7e1ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ope(e){return function(){this.innerHTML=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f2b1539410af27491bed1b642655a279",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rpe(e){return function(){var t=e.apply(this,arguments);this.innerHTML=t??\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c664c53a7f78d0e75ea1cd6212b5c316",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zpe(e){return arguments.length?this.each(e==null?Ppe:(typeof e==\"function\"?Rpe:Ope)(e)):this.node().innerHTML}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c47007e99220c6600ba2bfa97b02b130",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dpe(){this.nextSibling&&this.parentNode.appendChild(this)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "323b9ec2ffcccaf15664c665df74b363",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fpe(){return this.each(Dpe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "78f6b5263e54b6e7d79b168c0691e864",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hpe(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12d48559c18a581a94995d2538a50875",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bpe(){return this.each(Hpe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "583217419a6c02e8632369909b3a922f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wpe(e){var t=typeof e==\"function\"?e:S1(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ad3dcfcd4f0d500e690c7887041e1140",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jpe(){return null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e9bf5e802ead9e10fd1dc07f4ab2299c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qpe(e,t){var n=typeof e==\"function\"?e:S1(e),i=t==null?jpe:typeof t==\"function\"?t:Dp(t);return this.select(function(){return this.insertBefore(n.apply(this,arguments),i.apply(this,arguments)||...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "07bd59d96ea06582c2ce5c9f79219407",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Upe(){var e=this.parentNode;e&&e.removeChild(this)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08f1532122533b5b9dbdc09cfba1332b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vpe(){return this.each(Upe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eceb0020db045cbdc67d6a3e3e5e6eee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gpe(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e4823d48b297acd2489d42500fb7f6b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xpe(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f429a8ffe34c0695e2db277d0823689",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kpe(e){return this.select(e?Xpe:Gpe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1892584e78da87325faba0cdba3738b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jpe(e){return arguments.length?this.property(\"__data__\",e):this.node().__data__}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8826faa08ed794e5f9ea50e3a1c4c732",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ype(e){return function(t){e.call(this,t,this.__data__)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "90396f99f9d512f9e21e4cdefb927e27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zpe(e){return e.trim().split(/^|\\s+/).map(function(t){var n=\"\",i=t.indexOf(\".\");return i>=0&&(n=t.slice(i+1),t=t.slice(0,i)),{type:t,name:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "faafbb0cbc041123a731df406a547d55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qpe(e){return function(){var t=this.__on;if(t){for(var n=0,i=-1,s=t.length,l;n<s;++n)l=t[n],(!e.type||l.type===e.type)&&l.name===e.name?this.removeEventListener(l.type,l.listener,l.options):t...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58d856f19af4f9fbcd0b6f9cebf397b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ege(e,t,n){return function(){var i=this.__on,s,l=Ype(t);if(i){for(var u=0,f=i.length;u<f;++u)if((s=i[u]).type===e.type&&s.name===e.name){this.removeEventListener(s.type,s.listener,s.options),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "353152081f95dda0621d053dcbc5db62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tge(e,t,n){var i=Zpe(e+\"\"),s,l=i.length,u;if(arguments.length<2){var f=this.node().__on;if(f){for(var h=0,p=f.length,g;h<p;++h)for(s=0,g=f[h];s<l;++s)if((u=i[s]).type===g.type&&u.name===g.nam...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97fe6b07b8d3b19f52e372eaf7cefde7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function N1(e,t,n){var i=E1(e),s=i.CustomEvent;typeof s==\"function\"?s=new s(t,n):(s=i.document.createEvent(\"Event\"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4e2432548f7db91b68d2cc64d812ece5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nge(e,t){return function(){return N1(this,e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "21fcbfc369ea47266084e86a279655b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rge(e,t){return function(){return N1(this,e,t.apply(this,arguments))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bc1bc6a6ac8b183f1a4c41cb7abdc8d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ige(e,t){return this.each((typeof t==\"function\"?rge:nge)(e,t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59763a285e6787badf16c17f24f111a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function or(e,t){this._groups=e,this._parents=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b1ce96a5e6931eebdd8594ca682329ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xa(){return new or([[document.documentElement]],I1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74d6af2c0e201522b7320c15e21909ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sge(){return this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "92009e652dc1e6d5431865ffd7dd7c33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gn(e){return typeof e==\"string\"?new or([[document.querySelector(e)]],[document.documentElement]):new or([[e]],I1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d4dc16568d2d767451c8d47c6cf533c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lge(e){let t;for(;t=e.sourceEvent;)e=t;return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a1c38ae9073fb8c2cec3b4d322ca84e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bi(e,t){if(e=lge(e),t===void 0&&(t=e.currentTarget),t){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var i=n.createSVGPoint();return i.x=e.clientX,i.y=e.clientY,i=i.matrixTransform(t.getScr...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9d00cbb65364d07dac13920365b71021",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ka(){for(var e=0,t=arguments.length,n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c60d17629971ef4bd992cfabfa4d24c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ru(e){this._=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2fc9fd2ae510c52bdafb1d3c3954a67e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fge(e,t){return e.trim().split(/^|\\s+/).map(function(n){var i=\"\",s=n.indexOf(\".\");if(s>=0&&(i=n.slice(s+1),n=n.slice(0,s)),n&&!t.hasOwnProperty(n))throw new Error(\"unknown type: \"+n);return{t...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c95426bb639be04078731930589c10b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dge(e,t){for(var n=0,i=e.length,s;n<i;++n)if((s=e[n]).name===t)return s.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f874187aeaf9a7916bd50296b5da42e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uy(e,t,n){for(var i=0,s=e.length;i<s;++i)if(e[i].name===t){e[i]=uge,e=e.slice(0,i).concat(e.slice(i+1));break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "db5940e0ae31a8284536d6363cf1407b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jd(e){e.stopImmediatePropagation()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3928252b7a29d1dd5902725dea76c4c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vs(e){e.preventDefault(),e.stopImmediatePropagation()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ff60b97dec01f5a62c64984b043998e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P1(e){var t=e.document.documentElement,n=Gn(e).on(\"dragstart.drag\",Vs,Aa);\"onselectstart\"in t?n.on(\"selectstart.drag\",Vs,Aa):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect=\"none\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "75d6d25cc2547f7e5bb9e09a047667ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O1(e,t){var n=e.document.documentElement,i=Gn(e).on(\"dragstart.drag\",null);t&&(i.on(\"click.drag\",Vs,Aa),setTimeout(function(){i.on(\"click.drag\",null)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "36adc91f7940fe496fdf34809e673b58",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ih(e,{sourceEvent:t,subject:n,target:i,identifier:s,active:l,x:u,y:f,dx:h,dy:p,dispatch:g}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0bcc68c6237eaa1e489ab1c12b8340f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pge(e){return!e.ctrlKey&&!e.button}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bfffbd5468469d76567cd45803bb7276",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gge(){return this.parentNode}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbf1405fbcb7bda55a2f364278522e70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mge(e,t){return t??{x:e.x,y:e.y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ef3fa90307ff1e22803c3063227b3fe3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vge(){return navigator.maxTouchPoints||\"ontouchstart\"in this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97c3c852ac4c34bff2bcb54692bbfa1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yge(){var e=pge,t=gge,n=mge,i=vge,s={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f24c6f75f8bea4adcaf1d7ce04a10001",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(k){k.on(\"mousedown.drag\",w).filter(i).on(\"touchstart.drag\",A).on(\"touchmove.drag\",E,hge).on(\"touchend.drag touchcancel.drag\",M).style(\"touch-action\",\"none\").style(\"-webkit-tap-highlight-col...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "02d1d6de758eb08ba45e290ea3a21810",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(k,z){if(!(g||!e.call(this,k,z))){var D=O(this,t.call(this,k,z),k,z,\"mouse\");D&&(Gn(k.view).on(\"mousemove.drag\",L,Aa).on(\"mouseup.drag\",$,Aa),P1(k.view),jd(k),p=!1,f=k.clientX,h=k.clientY,D(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5139ee278ccda115aca01497b61dddb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(k){if(Vs(k),!p){var z=k.clientX-f,D=k.clientY-h;p=z*z+D*D>v}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "15dd5c498f752ddbbc3eb4215f12a2cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(k,z){if(e.call(this,k,z)){var D=k.changedTouches,te=t.call(this,k,z),ee=D.length,W,q;for(W=0;W<ee;++W)(q=O(this,te,k,z,D[W].identifier,D[W]))&&(jd(k),q(\"start\",k,D[W]))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b7a701638f54572f88cb8c65e9cedccb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(k){var z=k.changedTouches,D=z.length,te,ee;for(te=0;te<D;++te)(ee=s[z[te].identifier])&&(Vs(k),ee(\"drag\",k,z[te]))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4ddcdbeef1214aaa82ac7caa4782eca8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(k){var z=k.changedTouches,D=z.length,te,ee;for(g&&clearTimeout(g),g=setTimeout(function(){g=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "517fdfcd3fd79689072ee9335a847785",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(k,z,D,te,ee,W){var q=l.copy(),K=bi(W||D,z),C,P,I;if((I=n.call(k,new Ih(\"beforestart\",{sourceEvent:D,target:y,identifier:ee,active:u,x:K[0],y:K[1],dx:0,dy:0,dispatch:q}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "83eb482e448e99ead389bec28e252780",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S(R,B,oe){var ue=K,we;switch(R){case\"start\":s[ee]=S,we=u++;break;case\"end\":delete s[ee],--u;case\"drag\":K=bi(oe||B,z),we=u;break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c7275fdb28022c6059f4ced57dd569b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hp(e,t,n){e.prototype=t.prototype=n,n.constructor=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1afad8420fe837483c9155c0b79f62ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function R1(e,t){var n=Object.create(e.prototype);for(var i in t)n[i]=t[i];return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3dad108e18b31de4fae1a8c7fda6fca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ja(){}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "09815b14de185357cfa5214ae74a843f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dy(){return this.rgb().formatHex()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "990d160493d306cdaaafb59351320f7b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cge(){return this.rgb().formatHex8()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "479113b507bb43d79672754044bce65f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ege(){return z1(this).formatHsl()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "73bdb145a9f6b45b365b33a0bce71fb0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hy(){return this.rgb().formatRgb()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0ec179119b7d1c9cab63fe95453edfa0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ma(e){var t,n;return e=(e+\"\").trim().toLowerCase(),(t=bge.exec(e))?(n=t[1].length,t=parseInt(t[1],16),n===6?py(t):n===3?new Kn(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):n===8?jc(t>>24&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1cd8fb5e12bbf6038c0df1637fb8698d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function py(e){return new Kn(e>>16&255,e>>8&255,e&255,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cd4315225c0f89589004ffa4c2b23c95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jc(e,t,n,i){return i<=0&&(e=t=n=NaN),new Kn(e,t,n,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "01839f22d0672b814ca16af5bd651759",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Age(e){return e instanceof Ja||(e=Ma(e)),e?(e=e.rgb(),new Kn(e.r,e.g,e.b,e.opacity)):new Kn}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "712e3509de9139317805995a97446eee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ph(e,t,n,i){return arguments.length===1?Age(e):new Kn(e,t,n,i??1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "42c04c7da0bac43147ee9c3076b7b99f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kn(e,t,n,i){this.r=+e,this.g=+t,this.b=+n,this.opacity=+i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3131d4f64318aae4635b2462179748e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gy(){return`#${Wo(this.r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5671f5f8732b593779f25843841cd5bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lge(){return`#${Wo(this.r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5da567311c90da441a10659afd85182b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function my(){const e=zu(this.opacity);return`${e===1?\"rgb(\":\"rgba(\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd196c171c705220539680a5e63b5f2c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zu(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc1ffb3595a41aec3fb8f63301c791dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vo(e){return Math.max(0,Math.min(255,Math.round(e)||0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5400a2d9391d4a176c3805a93c63134e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wo(e){return e=Vo(e),(e<16?\"0\":\"\")+e.toString(16)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d9e2d7e240207ec6e0c569499e2f42f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vy(e,t,n,i){return i<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new Lr(e,t,n,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b50bd06da85a5718f0d30072169968ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z1(e){if(e instanceof Lr)return new Lr(e.h,e.s,e.l,e.opacity);if(e instanceof Ja||(e=Ma(e)),!e)return new Lr;if(e instanceof Lr)return e;e=e.rgb();var t=e.r/255,n=e.g/255,i=e.b/255,s=Math.min...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7d5dbd427a61bac75684dcf1b12b7167",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lr(e,t,n,i){this.h=+e,this.s=+t,this.l=+n,this.opacity=+i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1401c18529d8d20b4e15e1bfcd8673df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yy(e){return e=(e||0)%360,e<0?e+360:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bdbdd5c9522a67715bffcd2ad067547e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qc(e){return Math.max(0,Math.min(1,e||0))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e85b39071cc2bf569268ca6891f851a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qd(e,t,n){return(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)*255}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bf4b78530d9edf0ac60e4cda16d69d00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mge(e,t){return function(n){return e+n*t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2ae607a0f5f1536765fe3de0ffd8bdf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nge(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(i){return Math.pow(e+i*t,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0f53b254fc103676906d4b4fb4afc4fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ige(e){return(e=+e)==1?F1:function(t,n){return n-t?Nge(t,n,e):D1(isNaN(t)?n:t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fdf0f0f52f19cd31e318cce6009e26e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function F1(e,t){var n=t-e;return n?Mge(e,n):D1(isNaN(e)?t:e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9f9e1ded472f6509275da802c2336ba2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e(t){var n=Ige(t);function i(s,l){var u=n((s=Ph(s)).r,(l=Ph(l)).r),f=n(s.g,l.g),h=n(s.b,l.b),p=F1(s.opacity,l.opacity);return function(g){return s.r=u(g),s.g=f(g),s.b=h(g),s.opacity=p(g),s+\"\"...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1948cb5f0d7a5339b8e6eb400cf3d727",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qi(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8843a176336d62259e8c8cb2c368a5ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pge(e){return function(){return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e94cf625223e2e8f6c31b969bae6c5ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Oge(e){return function(t){return e(t)+\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5031cfeef51cd09e4198873281ee2f9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rge(e,t){var n=Oh.lastIndex=Ud.lastIndex=0,i,s,l,u=-1,f=[],h=[];for(e=e+\"\",t=t+\"\";(i=Oh.exec(e))&&(s=Ud.exec(t));)(l=s.index)>n&&(l=t.slice(n,l),f[u]?f[u]+=l:f[++u]=l),(i=i[0])===(s=s[0])?f[u...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f518e31413343a6f208273da72a7d5c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function H1(e,t,n,i,s,l){var u,f,h;return(u=Math.sqrt(e*e+t*t))&&(e/=u,t/=u),(h=e*n+t*i)&&(n-=e*h,i-=t*h),(f=Math.sqrt(n*n+i*i))&&(n/=f,i/=f,h/=f),e*i<t*n&&(e=-e,t=-t,h=-h,u=-u),{translateX:s,translat...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3c5a5cb707f083adef6055c46920e0d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zge(e){const t=new(typeof DOMMatrix==\"function\"?DOMMatrix:WebKitCSSMatrix)(e+\"\");return t.isIdentity?Rh:H1(t.a,t.b,t.c,t.d,t.e,t.f)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a2b8206c1f759d13fe396083a4574ad4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dge(e){return e==null||(Uc||(Uc=document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\")),Uc.setAttribute(\"transform\",e),!(e=Uc.transform.baseVal.consolidate()))?Rh:(e=e.matrix,H1(e.a,e.b,e...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e559d9bd0b1630b30c966b890ed1a292",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function B1(e,t,n,i){function s(p){return p.length?p.pop()+\" \":\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d18d3d2bfec5f9787f41c5f4ac0ae716",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(p,g,v,y,w,L){if(p!==v||g!==y){var $=w.push(\"translate(\",null,t,null,n);L.push({i:$-4,x:Qi(p,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "143c4ad77d0a766d672ac6791064b68e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(p,g,v,y){p!==g?(p-g>180?g+=360:g-p>180&&(p+=360),y.push({i:v.push(s(v)+\"rotate(\",null,i)-2,x:Qi(p,g)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "edf5d094ed27fbf796703935cc33fd52",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(p,g,v,y){p!==g?y.push({i:v.push(s(v)+\"skewX(\",null,i)-2,x:Qi(p,g)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9976178ef2b9e3df4ca945d23eb89f72",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(p,g,v,y,w,L){if(p!==v||g!==y){var $=w.push(s(w)+\"scale(\",null,\",\",null,\")\");L.push({i:$-4,x:Qi(p,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "afadf5dbe28a021a906ce02a30039791",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xy(e){return((e=Math.exp(e))+1/e)/2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dbe2db2f0588285ba438e9ec75348b1b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wge(e){return((e=Math.exp(e))-1/e)/2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aac37654723dd7d9b5c9a73be7686d15",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jge(e){return((e=Math.exp(2*e))-1)/(e+1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "620304b9e170a1f94e3c60223b2b44f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e(t,n,i){function s(l,u){var f=l[0],h=l[1],p=l[2],g=u[0],v=u[1],y=u[2],w=g-f,L=v-h,$=w*w+L*L,A,E;if($<Bge)E=Math.log(y/p)/t,A=function(te){return[f+te*w,h+te*L,p*Math.exp(t*te*E)]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6a263137bb37b2fa5563605604566658",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bp(){return Xo||(j1(Uge),Xo=Na.now()+gf)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4914c5654bc890c3636c72823874b3a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uge(){Xo=0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "566bd8784b6a6fdcde460fc3376acc15",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hu(){this._call=this._time=this._next=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "aa46fc8cc865b4b55ad5bfb32e5b73e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wp(e,t,n){var i=new Hu;return i.restart(e,t,n),i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6edb2c0ff292cbaeb31f800c1778381e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vge(){Bp(),++nl;for(var e=Du,t;e;)(t=Xo-e._time)>=0&&e._call.call(void 0,t),e=e._next;--nl}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "42bf837d0ffb473c8f29e5bba88cf7e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sy(){Xo=(Fu=Na.now())+gf,nl=Kl=0;try{Vge()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5c8fc21a649f78ff83159ac6bfa51f96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gge(){var e=Na.now(),t=e-Fu;t>W1&&(gf-=t,Fu=e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ff9f15d1e5003c888386c3e3b1324a84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xge(){for(var e,t=Du,n,i=1/0;t;)t._call?(i>t._time&&(i=t._time),e=t,t=t._next):(n=t._next,t._next=null,t=e?e._next=n:Du=n);Jl=e,zh(i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "91ddf25c636a7ef1425da2ff7747cd9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zh(e){if(!nl){Kl&&(Kl=clearTimeout(Kl));var t=e-Xo;t>24?(e<1/0&&(Kl=setTimeout(Sy,e-Na.now()-gf)),ql&&(ql=clearInterval(ql))):(ql||(Fu=Na.now(),ql=setInterval(Gge,W1)),nl=1,j1(Sy))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a10c1707822bb4b6111db26a62189579",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _y(e,t,n){var i=new Hu;return t=t==null?0:+t,i.restart(s=>{i.stop(),e(s+t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a14f5c092342507f7511f1e6a63135fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mf(e,t,n,i,s,l){var u=e.__transition;if(!u)e.__transition={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "671d1d9a0e39732ebca58e8caf652221",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jp(e,t){var n=Fr(e,t);if(n.state>q1)throw new Error(\"too late; already scheduled\");return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fab625d7412345287ec2c576d4f0e933",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ii(e,t){var n=Fr(e,t);if(n.state>iu)throw new Error(\"too late; already running\");return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f87a8300250ef1bac30d1dfadccd2aef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fr(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error(\"transition not found\");return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "83cb2aab4569db9c638a93e3f7d07432",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yge(e,t,n){var i=e.__transition,s;i[t]=n,n.timer=Wp(l,0,n.time);function l(p){n.state=ky,n.timer.restart(u,n.delay,n.time),n.delay<=p&&u(p-n.delay)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "41f17858a3197fcc28dc105155003479",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(p){var g,v,y,w;if(n.state!==ky)return h();for(g in i)if(w=i[g],w.name===n.name){if(w.state===iu)return _y(u);w.state===Ty?(w.state=ou,w.timer.stop(),w.on.call(\"interrupt\",e,e.__data__,w.ind...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d7173cd0f602c8425a620c67d3489570",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(p){for(var g=p<n.duration?n.ease.call(null,p/n.duration):(n.timer.restart(h),n.state=Fh,1),v=-1,y=s.length;++v<y;)s[v].call(e,g);n.state===Fh&&(n.on.call(\"end\",e,e.__data__,n.index,n.group)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "07e8d190f3b95d089ce4383c10a9f6d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(){n.state=ou,n.timer.stop(),delete i[t];for(var p in i)return;delete e.__transition}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "39d600745322df6afa06099d3c514dd6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function su(e,t){var n=e.__transition,i,s,l=!0,u;if(n){t=t==null?null:t+\"\";for(u in n){if((i=n[u]).name!==t){l=!1;continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d4a3a761d0372bf9c7e98f7d4bd87ad9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zge(e){return this.each(function(){su(this,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58bcbaa6f9db5aa6a5af94db32cf48ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qge(e,t){var n,i;return function(){var s=ii(this,e),l=s.tween;if(l!==n){i=n=l;for(var u=0,f=i.length;u<f;++u)if(i[u].name===t){i=i.slice(),i.splice(u,1);break}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "46f498a959a15911a9bb42b237973737",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eme(e,t,n){var i,s;if(typeof n!=\"function\")throw new Error;return function(){var l=ii(this,e),u=l.tween;if(u!==i){s=(i=u).slice();for(var f={name:t,value:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "08d77248f96336d682dd727622844e4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tme(e,t){var n=this._id;if(e+=\"\",arguments.length<2){for(var i=Fr(this.node(),n).tween,s=0,l=i.length,u;s<l;++s)if((u=i[s]).name===e)return u.value;return null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "82640cd857642613a7ab51edf87aa4e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qp(e,t,n){var i=e._id;return e.each(function(){var s=ii(this,i);(s.value||(s.value={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2750ca849ed3d832246f85c119848b27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U1(e,t){var n;return(typeof t==\"number\"?Qi:t instanceof Ma?by:(n=Ma(t))?(t=n,by):Rge)(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4784371beff7fc41dc1ac5194e343532",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nme(e){return function(){this.removeAttribute(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4c83d29805fb25245a82c49f6538dfc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rme(e){return function(){this.removeAttributeNS(e.space,e.local)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "69e2898f400707a52ec95ad5208a78db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ime(e,t,n){var i,s=n+\"\",l;return function(){var u=this.getAttribute(e);return u===s?null:u===i?l:l=t(i=u,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "45356791d6f86bed6dbeb152dbf6612c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ome(e,t,n){var i,s=n+\"\",l;return function(){var u=this.getAttributeNS(e.space,e.local);return u===s?null:u===i?l:l=t(i=u,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "61910ede142e2c133bf5424c945681ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sme(e,t,n){var i,s,l;return function(){var u,f=n(this),h;return f==null?void this.removeAttribute(e):(u=this.getAttribute(e),h=f+\"\",u===h?null:u===i&&h===s?l:(s=h,l=t(i=u,f)))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "228c95487eff6ce073350c61818e56ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lme(e,t,n){var i,s,l;return function(){var u,f=n(this),h;return f==null?void this.removeAttributeNS(e.space,e.local):(u=this.getAttributeNS(e.space,e.local),h=f+\"\",u===h?null:u===i&&h===s?l:(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5d6f6e1d5bd3b964fc8265fefd5f234f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ame(e,t){var n=pf(e),i=n===\"transform\"?Hge:U1;return this.attrTween(e,typeof t==\"function\"?(n.local?lme:sme)(n,i,qp(this,\"attr.\"+e,t)):t==null?(n.local?rme:nme)(n):(n.local?ome:ime)(n,i,t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "491110c5529109185cea19bba6d96418",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cme(e,t){return function(n){this.setAttribute(e,t.call(this,n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f314996dd6514c4797b710aeb7d38b9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ume(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7ee5ed3be06bf0befcbd9bc8007386ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fme(e,t){var n,i;function s(){var l=t.apply(this,arguments);return l!==i&&(n=(i=l)&&ume(e,l)),n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6fffc364e35de59a467c60fc63813b3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dme(e,t){var n,i;function s(){var l=t.apply(this,arguments);return l!==i&&(n=(i=l)&&cme(e,l)),n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4207da64896f2534e41cf544079e6bfd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hme(e,t){var n=\"attr.\"+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(t==null)return this.tween(n,null);if(typeof t!=\"function\")throw new Error;var i=pf(e);return this.tween(n,(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cf9a3c9562b09406da85f03990629c50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pme(e,t){return function(){jp(this,e).delay=+t.apply(this,arguments)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e77ef67e28aa097568747af68ec5789",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gme(e,t){return t=+t,function(){jp(this,e).delay=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "767879565d096fda181fdc6263e016dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mme(e){var t=this._id;return arguments.length?this.each((typeof e==\"function\"?pme:gme)(t,e)):Fr(this.node(),t).delay}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3192400ea46500f572c70d15c1bdb6e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vme(e,t){return function(){ii(this,e).duration=+t.apply(this,arguments)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "52c11d5c3d40a22136ee93626dba27d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yme(e,t){return t=+t,function(){ii(this,e).duration=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "34fc68a5907acfe50c783a129fd58b2c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bme(e){var t=this._id;return arguments.length?this.each((typeof e==\"function\"?vme:yme)(t,e)):Fr(this.node(),t).duration}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "244acd0cbd1a8a74abaeb00eab30a932",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wme(e,t){if(typeof t!=\"function\")throw new Error;return function(){ii(this,e).ease=t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "609de7fc9124e4c357a9f41fbc9d1e0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xme(e){var t=this._id;return arguments.length?this.each(wme(t,e)):Fr(this.node(),t).ease}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e84a6fde1d95d286b3d227303228bb20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sme(e,t){return function(){var n=t.apply(this,arguments);if(typeof n!=\"function\")throw new Error;ii(this,e).ease=n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f8bcfbb377926ca98dc7cbdf329c73c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _me(e){if(typeof e!=\"function\")throw new Error;return this.each(Sme(this._id,e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d3317d8808ae479250d89f92c5245995",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kme(e){typeof e!=\"function\"&&(e=k1(e));for(var t=this._groups,n=t.length,i=new Array(n),s=0;s<n;++s)for(var l=t[s],u=l.length,f=i[s]=[],h,p=0;p<u;++p)(h=l[p])&&e.call(h,h.__data__,p,l)&&f.pus...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cd40a354c8bb94745ede46baf6a36479",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tme(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,i=t.length,s=n.length,l=Math.min(i,s),u=new Array(i),f=0;f<l;++f)for(var h=t[f],p=n[f],g=h.length,v=u[f]=new Arra...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "292f2dba6f08980278f1970c3e1ee778",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cme(e){return(e+\"\").trim().split(/^|\\s+/).every(function(t){var n=t.indexOf(\".\");return n>=0&&(t=t.slice(0,n)),!t||t===\"start\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd1147c18bed27b31f196e110f90ae0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Eme(e,t,n){var i,s,l=Cme(t)?jp:ii;return function(){var u=l(this,e),f=u.on;f!==i&&(s=(i=f).copy()).on(t,n),u.on=s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97c2b35d763c42ad95e2cb3920f2dc4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ame(e,t){var n=this._id;return arguments.length<2?Fr(this.node(),n).on.on(e):this.each(Eme(n,e,t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e72853749cd52cf63b0305f6a8c1b345",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lme(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ced2a4f9bf303d96db18527479ad70a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mme(e){var t=this._name,n=this._id;typeof e!=\"function\"&&(e=Dp(e));for(var i=this._groups,s=i.length,l=new Array(s),u=0;u<s;++u)for(var f=i[u],h=f.length,p=l[u]=new Array(h),g,v,y=0;y<h;++y)(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "da6cd0937a53fb13e1cd782c4a36dde0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nme(e){var t=this._name,n=this._id;typeof e!=\"function\"&&(e=_1(e));for(var i=this._groups,s=i.length,l=[],u=[],f=0;f<s;++f)for(var h=i[f],p=h.length,g,v=0;v<p;++v)if(g=h[v]){for(var y=e.call(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bd7cde10a13fe55055fc0e30bcaf6de8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pme(){return new Ime(this._groups,this._parents)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0dac2585483e8ef0fec8fb9435d6fdd5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ome(e,t){var n,i,s;return function(){var l=tl(this,e),u=(this.style.removeProperty(e),tl(this,e));return l===u?null:l===n&&u===i?s:s=t(n=l,i=u)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "31b3e7faf74844b58d6b8e00caa42360",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function V1(e){return function(){this.style.removeProperty(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "150d69c64facd66e2d6705836d2ab357",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rme(e,t,n){var i,s=n+\"\",l;return function(){var u=tl(this,e);return u===s?null:u===i?l:l=t(i=u,n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "efe954a34188934971d41060bddcaec8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zme(e,t,n){var i,s,l;return function(){var u=tl(this,e),f=n(this),h=f+\"\";return f==null&&(h=f=(this.style.removeProperty(e),tl(this,e))),u===h?null:u===i&&h===s?l:(s=h,l=t(i=u,f))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e5fa4f347f778a01fef29878795b676",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dme(e,t){var n,i,s,l=\"style.\"+t,u=\"end.\"+l,f;return function(){var h=ii(this,e),p=h.on,g=h.value[l]==null?f||(f=V1(t)):void 0;(p!==n||s!==g)&&(i=(n=p).copy()).on(u,s=g),h.on=i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e21ee7d84a183d842610767a7753d393",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fme(e,t,n){var i=(e+=\"\")==\"transform\"?Fge:U1;return t==null?this.styleTween(e,Ome(e,i)).on(\"end.style.\"+e,V1(e)):typeof t==\"function\"?this.styleTween(e,zme(e,i,qp(this,\"style.\"+e,t))).each(Dm...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "33183737f8fc795c1462942cfd211923",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hme(e,t,n){return function(i){this.style.setProperty(e,t.call(this,i),n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a7869798a21cdc5a991cddaac1db1369",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bme(e,t,n){var i,s;function l(){var u=t.apply(this,arguments);return u!==s&&(i=(s=u)&&Hme(e,u,n)),i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f3c7b73d8762df09040e9794d6d0a6d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wme(e,t,n){var i=\"style.\"+(e+=\"\");if(arguments.length<2)return(i=this.tween(i))&&i._value;if(t==null)return this.tween(i,null);if(typeof t!=\"function\")throw new Error;return this.tween(i,Bme(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2524fa1d5f94017799b9a85f85db605a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jme(e){return function(){this.textContent=e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "709f13f5be3cddf29772394318df2c40",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qme(e){return function(){var t=e(this);this.textContent=t??\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b154171864601c9dee47959522da009c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ume(e){return this.tween(\"text\",typeof e==\"function\"?qme(qp(this,\"text\",e)):jme(e==null?\"\":e+\"\"))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7c3da1043556fb015c6939962a0f944b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vme(e){return function(t){this.textContent=e.call(this,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dde41d544f24b984935ffc452167e099",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gme(e){var t,n;function i(){var s=e.apply(this,arguments);return s!==n&&(t=(n=s)&&Vme(s)),t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "825f832dc4ec712648ea9045f673d778",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xme(e){var t=\"text\";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(e==null)return this.tween(t,null);if(typeof e!=\"function\")throw new Error;return this.tween(t,Gme(e))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "398dc265659b7f8318efb551d104252b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kme(){for(var e=this._name,t=this._id,n=G1(),i=this._groups,s=i.length,l=0;l<s;++l)for(var u=i[l],f=u.length,h,p=0;p<f;++p)if(h=u[p]){var g=Fr(h,t);mf(h,e,n,p,u,{time:g.time+g.delay+g.duratio...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "46d0c9b18dfe94df5f78f274802b5968",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jme(){var e,t,n=this,i=n._id,s=n.size();return new Promise(function(l,u){var f={value:u}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97b9528ffe9093b5f90ea631be0e67f1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ei(e,t,n,i){this._groups=e,this._parents=t,this._name=n,this._id=i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26fe1b52625f81c5794d2afc2e676237",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function G1(){return++Yme}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b813e75e7147de608787ab964707da10",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zme(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8f1fd7c6cc6da8fe24ad344b2f99ea1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eve(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6835f9d553491d1ea279555a16bc7735",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tve(e){var t,n;e instanceof Ei?(t=e._id,e=e._name):(t=G1(),(n=Qme).time=Bp(),e=e==null?null:e+\"\");for(var i=this._groups,s=i.length,l=0;l<s;++l)for(var u=i[l],f=u.length,h,p=0;p<f;++p)(h=u[p]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe5e3749ab356147af931166c1ac1e18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nve(e,{sourceEvent:t,target:n,transform:i,dispatch:s}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b1e9116be1cf183407eabe3cb9190b03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Si(e,t,n){this.k=e,this.x=t,this.y=n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "042652a9afacbdf9abe535d6878c40bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vd(e){e.stopImmediatePropagation()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d6ace8207c741a68c95ecf327ab83b28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ul(e){e.preventDefault(),e.stopImmediatePropagation()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1b4412827e373b7eb847a07a888c0ddb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rve(e){return(!e.ctrlKey||e.type===\"wheel\")&&!e.button}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4c131e7b70e05d4a5d70b6076599c9e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ive(){var e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e,e.hasAttribute(\"viewBox\")?(e=e.viewBox.baseVal,[[e.x,e.y],[e.x+e.width,e.y+e.height]]):[[0,0],[e.width.baseVal.value,e....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c70eba784678a13a8a6230c8a701b69b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cy(){return this.__zoom||Up}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd7687f26dd087b031511f14cce99d9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ove(e){return-e.deltaY*(e.deltaMode===1?.05:e.deltaMode?1:.002)*(e.ctrlKey?10:1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "44a6965aafdb850be6b6f3d63245cb3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sve(){return navigator.maxTouchPoints||\"ontouchstart\"in this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ea61bfad78c1a1712c5b7300cdb3a526",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lve(e,t,n){var i=e.invertX(t[0][0])-n[0][0],s=e.invertX(t[1][0])-n[1][0],l=e.invertY(t[0][1])-n[0][1],u=e.invertY(t[1][1])-n[1][1];return e.translate(s>i?(i+s)/2:Math.min(0,i)||Math.max(0,s),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1b887618e29729183fb48c589bc960ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ave(){var e=rve,t=ive,n=lve,i=ove,s=sve,l=[0,1/0],u=[[-1/0,-1/0],[1/0,1/0]],f=250,h=qge,p=Ka(\"start\",\"zoom\",\"end\"),g,v,y,w=500,L=150,$=0,A=10;function E(I){I.property(\"__zoom\",Cy).on(\"wheel.z...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "26f92ac9ac3a3097b4e7e33958a6340f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(I,S){return S=Math.max(l[0],Math.min(l[1],S)),S===I.k?I:new Si(S,I.x,I.y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6edab13e8fb12ff31e87c9f693953175",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(I,S,R){var B=S[0]-R[0]*I.k,oe=S[1]-R[1]*I.k;return B===I.x&&oe===I.y?I:new Si(I.k,B,oe)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ed44b332106f68d53cd329aa7837e7ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(I){return[(+I[0][0]+ +I[1][0])/2,(+I[0][1]+ +I[1][1])/2]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b9860f16fbc148607b209d4df9c0a115",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(I,S,R,B){I.on(\"start.zoom\",function(){D(this,arguments).event(B).start()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "72340d7db088f5e8a72db0199dc535d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(I,S,R){return!R&&I.__zooming||new te(I,S)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c97172ce30d31103ad1f51bc8cdd6654",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function te(I,S){this.that=I,this.args=S,this.active=0,this.sourceEvent=null,this.extent=t.apply(I,S),this.taps=0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "405d5dbd054073b197b7597bd9eb2243",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(I,...S){if(!e.apply(this,arguments))return;var R=D(this,S).event(I),B=this.__zoom,oe=Math.max(l[0],Math.min(l[1],B.k*Math.pow(2,i.apply(this,arguments)))),ue=bi(I);if(R.wheel)(R.mouse[0][0...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e116b229e11f7f91d855303b3f615972",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function we(){R.wheel=null,R.end()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8a11f10435ef114f686e4d60d64d817f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W(I,...S){if(y||!e.apply(this,arguments))return;var R=I.currentTarget,B=D(this,S,!0).event(I),oe=Gn(I.view).on(\"mousemove.zoom\",qe,!0).on(\"mouseup.zoom\",Ze,!0),ue=bi(I,R),we=I.clientX,Pe=I.cl...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd6186ba7317d5389a85f519ca3698de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ze(Ke){oe.on(\"mousemove.zoom mouseup.zoom\",null),O1(Ke.view,B.moved),Ul(Ke),B.event(Ke).end()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5687bfcdd840e76afc65bd7ddc7a4bee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(I,...S){if(e.apply(this,arguments)){var R=this.__zoom,B=bi(I.changedTouches?I.changedTouches[0]:I,this),oe=R.invert(B),ue=R.k*(I.shiftKey?.5:2),we=n(O(M(R,ue),B,oe),t.apply(this,S),u);Ul(I)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d27fee45f9d580e946872a7887200ffc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K(I,...S){if(e.apply(this,arguments)){var R=I.touches,B=R.length,oe=D(this,S,I.changedTouches.length===B).event(I),ue,we,Pe,qe;for(Vd(I),we=0;we<B;++we)Pe=R[we],qe=bi(Pe,this),qe=[qe,this.__z...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ea7cf149b9c895b6878e4327075ccd39",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C(I,...S){if(this.__zooming){var R=D(this,S).event(I),B=I.changedTouches,oe=B.length,ue,we,Pe,qe;for(Ul(I),ue=0;ue<oe;++ue)we=B[ue],Pe=bi(we,this),R.touch0&&R.touch0[2]===we.identifier?R.touc...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ae04b61fe5d1cea09b5a1d4fa1d71311",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function P(I,...S){if(this.__zooming){var R=D(this,S).event(I),B=I.changedTouches,oe=B.length,ue,we;for(Vd(I),y&&clearTimeout(y),y=setTimeout(function(){y=null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "92049a258df620239a97d60360bd6d06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cve(e){const t=+this._x.call(null,e),n=+this._y.call(null,e);return X1(this.cover(t,n),t,n,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "43268e579ea49c1bed5a63e89189868b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function X1(e,t,n,i){if(isNaN(t)||isNaN(n))return e;var s,l=e._root,u={data:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1997b68240f5142aeffeac3c42ea7587",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uve(e){var t,n,i=e.length,s,l,u=new Array(i),f=new Array(i),h=1/0,p=1/0,g=-1/0,v=-1/0;for(n=0;n<i;++n)isNaN(s=+this._x.call(null,t=e[n]))||isNaN(l=+this._y.call(null,t))||(u[n]=s,f[n]=l,s<h&&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "eed08d25df233d1992f562b122e169e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fve(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,i=this._y0,s=this._x1,l=this._y1;if(isNaN(n))s=(n=Math.floor(e))+1,l=(i=Math.floor(t))+1;else{for(var u=s-n||1,f=this._root,h,p...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fe468faa231714ba1a5df6e315027165",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function dve(){var e=[];return this.visit(function(t){if(!t.length)do e.push(t.data);while(t=t.next)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "959f02d5ba3d15572d0e65a98b04659b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function hve(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "deae9cdb6b2a69fbaabca88f19ac4f7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pn(e,t,n,i,s){this.node=e,this.x0=t,this.y0=n,this.x1=i,this.y1=s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "60b02de06da0e0b13d563d6f9f0c338f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pve(e,t,n){var i,s=this._x0,l=this._y0,u,f,h,p,g=this._x1,v=this._y1,y=[],w=this._root,L,$;for(w&&y.push(new Pn(w,s,l,g,v)),n==null?n=1/0:(s=e-n,l=t-n,g=e+n,v=t+n,n*=n);L=y.pop();)if(!(!(w=L....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1aa75e8ec964790adc3c901e6f312e93",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gve(e){if(isNaN(g=+this._x.call(null,e))||isNaN(v=+this._y.call(null,e)))return this;var t,n=this._root,i,s,l,u=this._x0,f=this._y0,h=this._x1,p=this._y1,g,v,y,w,L,$,A,E;if(!n)return this;if(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "77bfd4b959d5fc0c5663019138e5d1be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mve(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "29cd63e0293942ece14c37ece673e23d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vve(){return this._root}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7a64994d5de4691c07b02966dd3e9e1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yve(){var e=0;return this.visit(function(t){if(!t.length)do++e;while(t=t.next)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "461815492ca86f928572554bc0216433",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bve(e){var t=[],n,i=this._root,s,l,u,f,h;for(i&&t.push(new Pn(i,this._x0,this._y0,this._x1,this._y1));n=t.pop();)if(!e(i=n.node,l=n.x0,u=n.y0,f=n.x1,h=n.y1)&&i.length){var p=(l+f)/2,g=(u+h)/2...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e80fc12a961caf54feb387a27364b919",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wve(e){var t=[],n=[],i;for(this._root&&t.push(new Pn(this._root,this._x0,this._y0,this._x1,this._y1));i=t.pop();){var s=i.node;if(s.length){var l,u=i.x0,f=i.y0,h=i.x1,p=i.y1,g=(u+h)/2,v=(f+p)...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dd2452336c94bda78154e3d086ddb4ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xve(e){return e[0]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f39aca0411bd6ea515752c7f4f811bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sve(e){return arguments.length?(this._x=e,this):this._x}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cb85985b1913557a703a77f3e3987a7b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _ve(e){return e[1]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa7e955457adc793444da22e0b025486",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kve(e){return arguments.length?(this._y=e,this):this._y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4e45782792a74c39fe6b035b33579169",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vp(e,t,n){var i=new Gp(t??xve,n??_ve,NaN,NaN,NaN,NaN);return e==null?i:i.addAll(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7876c2513a87e78ac87bd4006505885f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gp(e,t,n,i,s,l){this._x=e,this._y=t,this._x0=n,this._y0=i,this._x1=s,this._y1=l,this._root=void 0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d8c55aa7f4bcba4d357c234ae4de5cd4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ey(e){for(var t={data:e.data}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "58c0f7efde82315d5406f27a114b57d1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rn(e){return function(){return e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "12a48e1f70ca17a7f5ceea0da7fe4d99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function no(e){return(e()-.5)*1e-6}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "54b6e89e4a9f38948e132ae0da12362e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Tve(e){return e.x+e.vx}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0017ee7f258633509553ed2827ed2608",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cve(e){return e.y+e.vy}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f74216946212ad88653658ae4047b95a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Eve(e){var t,n,i,s=1,l=1;typeof e!=\"function\"&&(e=Rn(e==null?1:+e));function u(){for(var p,g=t.length,v,y,w,L,$,A,E=0;E<l;++E)for(v=Vp(t,Tve,Cve).visitAfter(f),p=0;p<g;++p)y=t[p],$=n[y.index]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "48fa5cc7e79cd14686b3c9b7988845bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(p){if(p.data)return p.r=n[p.data.index];for(var g=p.r=0;g<4;++g)p[g]&&p[g].r>p.r&&(p.r=p[g].r)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ac53a70e3cc5785258d3fa675f3f7bbc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(){if(t){var p,g=t.length,v;for(n=new Array(g),p=0;p<g;++p)v=t[p],n[v.index]=+e(v,p,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d7ca3294957df2f47fbdcf221d2b371c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ave(e){return e.index}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9c4cbe702c62144ba4d2951fd16e630a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ay(e,t){var n=e.get(t);if(!n)throw new Error(\"node not found: \"+t);return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ee36a9e282279802c57294ae69352600",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lve(e){var t=Ave,n=v,i,s=Rn(30),l,u,f,h,p,g=1;e==null&&(e=[]);function v(A){return 1/Math.min(f[A.source.index],f[A.target.index])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "287e76678845a2a7e908a23a1a7fb06a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(A){for(var E=0,M=e.length;E<g;++E)for(var O=0,k,z,D,te,ee,W,q;O<M;++O)k=e[O],z=k.source,D=k.target,te=D.x+D.vx-z.x-z.vx||no(p),ee=D.y+D.vy-z.y-z.vy||no(p),W=Math.sqrt(te*te+ee*ee),W=(W-l[O]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e74f233df5d576633b2064c914e0645d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(){if(u){var A,E=u.length,M=e.length,O=new Map(u.map((z,D)=>[t(z,D,u),z])),k;for(A=0,f=new Array(E);A<M;++A)k=e[A],k.index=A,typeof k.source!=\"object\"&&(k.source=Ay(O,k.source)),typeof k.tar...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2f7e45b9d2aa5807f444882d313e3104",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(){if(u)for(var A=0,E=e.length;A<E;++A)i[A]=+n(e[A],A,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f5b47de6e60c27aa8196617fa2d2d35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nve(){let e=1;return()=>(e=($ve*e+Mve)%Ly)/Ly}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "acc79c8eb027f633c3f77b078ac7d572",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ive(e){return e.x}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "db307169fe47a115b4afb1ddd17b29cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pve(e){return e.y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "093c7b4df2ab73b1e718b0975021fb08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zve(e){var t,n=1,i=.001,s=1-Math.pow(i,1/300),l=0,u=.6,f=new Map,h=Wp(v),p=Ka(\"tick\",\"end\"),g=Nve();e==null&&(e=[]);function v(){y(),p.call(\"tick\",t),n<i&&(h.stop(),p.call(\"end\",t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "45ec342cb886c81c576a0eb0bba79eb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y($){var A,E=e.length,M;$===void 0&&($=1);for(var O=0;O<$;++O)for(n+=(l-n)*s,f.forEach(function(k){k(n)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b92ab96f8081ea1cb5c21234b8fbde3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w(){for(var $=0,A=e.length,E;$<A;++$){if(E=e[$],E.index=$,E.fx!=null&&(E.x=E.fx),E.fy!=null&&(E.y=E.fy),isNaN(E.x)||isNaN(E.y)){var M=Ove*Math.sqrt(.5+$),O=$*Rve;E.x=M*Math.cos(O),E.y=M*Math....",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0f082668bfb96838c633f3e25288e38a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L($){return $.initialize&&$.initialize(e,g),$}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59fc628614092c4402553453507e5195",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dve(){var e,t,n,i,s=Rn(-30),l,u=1,f=1/0,h=.81;function p(w){var L,$=e.length,A=Vp(e,Ive,Pve).visitAfter(v);for(i=w,L=0;L<$;++L)t=e[L],A.visit(y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b7a5e87a94677acec1c732349d11b36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(){if(e){var w,L=e.length,$;for(l=new Array(L),w=0;w<L;++w)$=e[w],l[$.index]=+s($,w,e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a9e0ffd69952bb82b2bba7a6dadcf647",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(w){var L=0,$,A,E=0,M,O,k;if(w.length){for(M=O=k=0;k<4;++k)($=w[k])&&(A=Math.abs($.value))&&(L+=$.value,E+=A,M+=A*$.x,O+=A*$.y);w.x=M/E,w.y=O/E}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "535b9b5bd7f58dfebec3491305585207",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(w,L,$,A){if(!w.value)return!0;var E=w.x-t.x,M=w.y-t.y,O=A-L,k=E*E+M*M;if(O*O/h<k)return k<f&&(E===0&&(E=no(n),k+=E*E),M===0&&(M=no(n),k+=M*M),k<u&&(k=Math.sqrt(u*k)),t.vx+=E*w.value*i/k,t.v...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74ac79a98aa60c3e018df5d3636bfae6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fve(e){var t=Rn(.1),n,i,s;typeof e!=\"function\"&&(e=Rn(e==null?0:+e));function l(f){for(var h=0,p=n.length,g;h<p;++h)g=n[h],g.vx+=(s[h]-g.x)*i[h]*f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "480c7ca0128c65c15f713821970ab3ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Hve(e){var t=Rn(.1),n,i,s;typeof e!=\"function\"&&(e=Rn(e==null?0:+e));function l(f){for(var h=0,p=n.length,g;h<p;++h)g=n[h],g.vy+=(s[h]-g.y)*i[h]*f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1c7080d192dd4f737194b8237f18f26",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jve(){return{drag:{end:0,start:.1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d9afbb580ec4ff95feebb4c5d98e3d71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ro(...e){return e.reduce((t,n)=>{if(Array.isArray(n))throw new TypeError(\"Arguments provided to deepmerge must be objects, not arrays.\");return Object.keys(n).forEach(i=>{[\"__proto__\",\"constr...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3ee2a8c6b450b22661dc3b8bd7fb9368",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qve(){return{centering:{enabled:!0,strength:.1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "35d19887c64b26ad4801868d659d2736",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uve(){return{includeUnlinked:!0,linkFilter:()=>!0,nodeTypeFilter:void 0,showLinkLabels:!0,showNodeLabels:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b725ff693d85267f82262fcf818c1cb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function J1(e){e.preventDefault(),e.stopPropagation()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dca247bec6c58902507c428764b60f56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Y1(e){return typeof e==\"number\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "39aebf6020c2b59c2feb9b9374235a4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yo(e,t){return Y1(e.nodeRadius)?e.nodeRadius:e.nodeRadius(t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f60dd7c3dd92d9ab285b76ee24e60cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vve(e){return`${e.source.id}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1ddf3a77370cd2ef7c4be9da199986f1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Z1(e){return`link-arrow-${e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bb8fd4562461110b74af82458317e81b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gve(e){return`url(#${Z1(e.color)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f65a1b3c575607c36fd778bdb1fb3bb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xve(e){return{size:e,padding:(t,n)=>yo(n,t)+2*e,ref:[e/2,e/2],path:[[0,0],[0,e],[e,e/2]],viewBox:[0,0,e,e].join(\",\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a99f0931de34a1c34e814459830506ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function My(e,t){return Math.random()*(t-e)+e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8d818881e501a38ea9fb5bcc519d15e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Yve(){return{autoResize:!1,callbacks:{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9d3551016f0371e2472f9552371daa21",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zve(e={}){return ro.withOptions({mergeArrays:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "145a0e89ce656f2135509397d49503bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qve({applyZoom:e,container:t,onDoubleClick:n,onPointerMoved:i,onPointerUp:s,offset:[l,u],scale:f,zoom:h}){const p=t.classed(\"graph\",!0).append(\"svg\").attr(\"height\",\"100%\").attr(\"width\",\"100%\"...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "49fb429cc69527d7bb7aa8ef68da4adf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e0e({canvas:e,scale:t,xOffset:n,yOffset:i}){e==null||e.attr(\"transform\",`translate(${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0aee8ce329baa6ec904aa5207292b0ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t0e({config:e,onDragStart:t,onDragEnd:n}){var i,s;const l=yge().filter(u=>u.type===\"mousedown\"?u.button===0:u.type===\"touchstart\"?u.touches.length===1:!1).on(\"start\",(u,f)=>{u.active===0&&t(u...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "80a2bcb349da32fb20c3938b09da2ae1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n0e({graph:e,filter:t,focusedNode:n,includeUnlinked:i,linkFilter:s}){const l=e.links.filter(h=>t.includes(h.source.type)&&t.includes(h.target.type)&&s(h)),u=h=>l.find(p=>p.source.id===h.id||p...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e64fcd2edfcfbb3d986275e542633c9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function r0e(e,t){const n=[...i0e(e,t),...o0e(e,t)],i=n.flatMap(s=>[s.source,s.target]);return{nodes:[...new Set([...i,t])],links:[...new Set(n)]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "338c66f638f44980eab29b9db585c594",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i0e(e,t){return eS(e,t,(n,i)=>n.target.id===i.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1c0a92db92430440616975ed0bae55a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function o0e(e,t){return eS(e,t,(n,i)=>n.source.id===i.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18a663a01cb61d522e0aa6551f968a02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function eS(e,t,n){const i=new Set(e.links),s=new Set([t]),l=[];for(;i.size>0;){const u=[...i].filter(f=>[...s].some(h=>n(f,h)));if(u.length===0)return l;u.forEach(f=>{s.add(f.source),s.add(f.target),...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "51a4f965d3eee90e110ac03a836f79c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bh(e){return e.x??0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d53e71af47d45ce6c638bb06aec6cde6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wh(e){return e.y??0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "68922316fcebb144ee0adc8a6553c272",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xp({source:e,target:t}){const n=new Nn(Bh(e),Wh(e)),i=new Nn(Bh(t),Wh(t)),s=i.subtract(n),l=s.length(),u=s.normalize(),f=u.multiply(-1);return{s:n,t:i,dist:l,norm:u,endNorm:f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7782394f2eab42db5332d86e030fb605",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function tS({center:e,node:t}){const n=new Nn(Bh(t),Wh(t));let i=e;return n.x===i.x&&n.y===i.y&&(i=i.add(new Nn(0,1))),{n,c:i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74ecedade0fef2badf559b17e02cd60e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function nS({config:e,source:t,target:n}){const{s:i,t:s,norm:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bbd6bfb57225bfa36da2b72ee0bb9032",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s0e(e){const{start:t,end:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "63b2f7770de2bbdb39b9d76b69cb0846",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l0e(e){const{start:t,end:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "27a7748ff77449ee567c6dc7f4aef269",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function a0e({config:e,source:t,target:n}){const{s:i,t:s,dist:l,norm:u,endNorm:f}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00c125f0e4039da1e098c7454ccbcc5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function c0e({center:e,config:t,node:n}){const{n:i,c:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0b5da5214ad75546124cdc510c828d09",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u0e({config:e,source:t,target:n}){const{t:i,dist:s,endNorm:l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8c1796ee68d2378dd668d2c8e0fd093f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f0e({center:e,config:t,node:n}){const{n:i,c:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d798c6e203b7c70fc71f0ff211014d18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function d0e(e){return e.append(\"g\").classed(\"links\",!0).selectAll(\"path\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55a9e5ff7612c153bb2409fefb0f185b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h0e({config:e,graph:t,selection:n,showLabels:i}){const s=n==null?void 0:n.data(t.links,l=>Vve(l)).join(l=>{var u,f,h,p;const g=l.append(\"g\"),v=g.append(\"path\").classed(\"link\",!0).style(\"marke...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "49cc2aa30c3a5f6e605a0f68e41978d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p0e(e){g0e(e),m0e(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bfb191528817eada36edaec49b83d025",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g0e({center:e,config:t,graph:n,selection:i}){i==null||i.selectAll(\"path\").attr(\"d\",s=>s.source.x===void 0||s.source.y===void 0||s.target.x===void 0||s.target.y===void 0?\"\":s.source.id===s.tar...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5c3585e8264c54df94678605a487b49e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function m0e({config:e,center:t,graph:n,selection:i}){i==null||i.select(\".link__label\").attr(\"transform\",s=>s.source.x===void 0||s.source.y===void 0||s.target.x===void 0||s.target.y===void 0?\"translat...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "57356586bc2e33446295a3cbab4b2f8a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rS(e,t,n){return t.id!==n.id&&e.links.some(i=>i.target.id===t.id&&i.source.id===n.id)&&e.links.some(i=>i.target.id===n.id&&i.source.id===t.id)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2c4e9a0e7faf37882a41d97593a57853",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v0e(e){return e.append(\"defs\").selectAll(\"marker\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "612c91552d5ec7d9b7b32a1d1dd1ad0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y0e({config:e,graph:t,selection:n}){return n==null?void 0:n.data(b0e(t),i=>i).join(i=>{const s=i.append(\"marker\").attr(\"id\",l=>Z1(l)).attr(\"markerHeight\",4*e.marker.size).attr(\"markerWidth\",4...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b921d3a9d884db6123b2797602cb45c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function b0e(e){return[...new Set(e.links.map(t=>t.color))]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "63a4bb280fbf14b762ace5fdb6b57ef2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function w0e(e){const[t,...n]=e;if(!t)return\"M0,0\";const[i,s]=t;return n.reduce((l,[u,f])=>`${l}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1c057a05563dafc9985f4255567c72df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function x0e(e){return e.append(\"g\").classed(\"nodes\",!0).selectAll(\"circle\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b6bb6ef654e12f3d7073ea4ea9a5569",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function S0e({config:e,drag:t,graph:n,onNodeContext:i,onNodeSelected:s,selection:l,showLabels:u}){const f=l==null?void 0:l.data(n.nodes,h=>h.id).join(h=>{var p,g,v,y;const w=h.append(\"g\");t!==void 0&&...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f952110b30fc86458c81d045567cc287",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k0e(e,t,n){if(e.button!==void 0&&e.button!==0)return;const i=t.lastInteractionTimestamp,s=Date.now();if(i===void 0||s-i>_0e){t.lastInteractionTimestamp=s;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "cab85b0da6e1090846c13b815f5d75bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function T0e(e){e==null||e.attr(\"transform\",t=>`translate(${t.x??0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f3c32e1004f5192dd9edcf6f523be98e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C0e({center:e,config:t,graph:n,onTick:i}){var s,l;const u=zve(n.nodes),f=t.simulation.forces.centering;if(f&&f.enabled){const v=f.strength;u.force(\"x\",Fve(()=>e().x).strength(v)).force(\"y\",Hv...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6778203ad41d5f480e2ddc64d5287782",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E0e({canvasContainer:e,config:t,min:n,max:i,onZoom:s}){var l,u;const f=ave().scaleExtent([n,i]).filter(h=>{var p;return h.button===0||((p=h.touches)==null?void 0:p.length)>=2}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "afc6f6dbe3942fedc627adb134a93d62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ny({nodes:e,links:t}){return{nodes:e??[],links:t??[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b5b36ffb456127bad396bef2183c23cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L0e(e){return{...e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5a59423331661a1eebef40905a2db3d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function iS(e){return{...e,isFocused:!1,lastInteractionTimestamp:void 0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dcc09dd92b99f80e5d34a446657f671a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(w,L){var $;($=f.value)==null||$.filterNodesByType(L,w)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "03c2cce27a6a913009d30df87f1305d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(w){u.value=w,l.value=!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d7b0d1940d1b6cd4e6c75b4af1362455",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(w=!1){var L;if((L=f.value)==null||L.shutdown(),w&&!n.value){n.value=!0;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "739c482ab284637eb78cffd494a4d9e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(w){if(pr)return;let L=0,$=0,A=0;w.on(\"pointerdown\",(E,M)=>{M.type!==\"external\"&&(!M.x||!M.y||!v(E)||(L=M.x,$=M.y,A=Date.now()))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bf171482348c9386e103bb44ba30458a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W0e(e){const t=new Map,n=new Map,i=[];for(;;){let s=0;if(e.forEach((l,u)=>{var g;const{splits:f,finished:h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "177260869eb5787f16b548df809735d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function j0e(e){let t=e;t.includes(\"/node_modules/\")&&(t=e.split(/\\/node_modules\\//g).pop());const n=t.split(/\\//g);return{raw:t,splits:n,candidate:\"\",finished:!1,id:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81a441d25709bcfa2c9d5f7d50f6469f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q0e(e){const t=e.map(i=>j0e(i)),n=W0e(t);return t.map(({raw:i,id:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "17f99918c90d4b4ca23c8b7ce96fd0fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function U0e(e,t){return iS({color:t?\"var(--color-node-root)\":\"var(--color-node-inline)\",label:{color:t?\"var(--color-node-root)\":\"var(--color-node-inline)\",fontSize:\"0.875rem\",text:e.split(/\\//g).pop(...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "996c29258dd75812a47eaa87bdae5ae1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function V0e(e,t){if(!e)return Ny({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "88e58580ad0c627f968a46551f3aa075",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(){var z;const k=(z=qt.value)==null?void 0:z.filepath;k&&fetch(`/__open-in-editor?file=${encodeURIComponent(k)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "182f97bac48777a9e410f98aeca57cbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(k){k===\"graph\"&&(i.value=!0),jn.value=k}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9de9f5f21d15dc7243f0d3116726ac2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(k){n.value=k}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7885ccf05827862450e024af0474c0c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(k=!1){var z;if(!(s.value||((z=h.value)==null?void 0:z.filepath)===l.value&&!k)){s.value=!0,await Et();try{const D=h.value;if(!D){s.value=!1;return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7419e401c40c6ce3b2c0e25adbb6ded4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qye(e,t){const n=Hye;return se(),ye(\"div\",Wye,[t[0]||(t[0]=ne(\"div\",{p:\"3\",\"h-10\":\"\",flex:\"~ gap-2\",\"items-center\":\"\",\"bg-header\":\"\",border:\"b base\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "16074a66ed716ff6c476997b601b3b17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(){var A;if(!e.expandable){(A=e.onItemClick)==null||A.call(e,t.value);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f6fef8f25b8fe4801f3a8514d35d583",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(A){var E;(E=e.onItemClick)==null||E.call(e,A),Ns.value&&(Nu.value=!0,await Et()),e.type===\"file\"?await Rp([A.file]):await Jfe(A)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2e08158d8cdfc334c940836c4ec51d97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(A){return ht.rpc.updateSnapshot(A.file)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f0d0ad4dc193f2b1b7e05b3a0fc82a50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(){var E;const A=t.value;e.type===\"file\"?(E=e.onItemClick)==null||E.call(e,A):Nde(A)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1e2aa629293651327f63bd01d385c6ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ube(){var e=window.navigator.userAgent,t=e.indexOf(\"MSIE \");if(t>0)return parseInt(e.substring(t+5,e.indexOf(\".\",t)),10);var n=e.indexOf(\"Trident/\");if(n>0){var i=e.indexOf(\"rv:\");return pars...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a53ed5cb6cc6c7cc9c31d798ad4cba96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jh(){jh.init||(jh.init=!0,lu=ube()!==-1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e8e3f5517fc545eb1d4da061e832d0d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function au(e){\"@babel/helpers - typeof\";return typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?au=function(t){return typeof t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f82e4454b11f827e815dc1a052a6b22b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function pbe(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "056cf2b24bdba5541c290460a1663e1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function gbe(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f0ddc49176f4d737ac120fed7901f661",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mbe(e,t,n){return t&&gbe(e.prototype,t),e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f7fd05fffd1c3e2595a8e5408fcf7af8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Iy(e){return vbe(e)||ybe(e)||bbe(e)||wbe()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b907e6555e332bf7f5129d4da84654c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vbe(e){if(Array.isArray(e))return qh(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "983dce2a40c03d212c2389642ebcb795",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ybe(e){if(typeof Symbol<\"u\"&&Symbol.iterator in Object(e))return Array.from(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b908968f735236bb46f60527ba8c04b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bbe(e,t){if(e){if(typeof e==\"string\")return qh(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n===\"Object\"&&e.constructor&&(n=e.constructor.name),n===\"Map\"||n===\"Set\")return Arra...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "efa58df7c7310d61507607014c51e8d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qh(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3ef5bd01d8eba29d468b4a116e8d9e8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 2,
        "sample": "function wbe(){throw new TypeError(`Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96aa14094222d511d12b92a752afd400",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xbe(e){var t;return typeof e==\"function\"?t={callback:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b1ff9d582cf3f35ca91c4487649859e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Sbe(e,t){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "540d78944832199f2e1a1d4b1db6a29e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function sS(e,t){if(e===t)return!0;if(au(e)===\"object\"){for(var n in e)if(!sS(e[n],t[n]))return!1;return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e227e39522f22aa01810fad4bf4e013f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function e(t,n,i){pbe(this,e),this.el=t,this.observer=null,this.frozen=!1,this.createObserver(n,i)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8eb1e72275c162b34b1f4318ef7f8232",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function lS(e,t,n){var i=t.value;if(i)if(typeof IntersectionObserver>\"u\")console.warn(\"[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill:...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d81a115ad83c9fa083c0298253fdc906",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kbe(e,t,n){var i=t.value,s=t.oldValue;if(!sS(i,s)){var l=e._vue_visibilityState;if(!i){aS(e);return}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00ee87278688450adbe5eb066ed16891",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function aS(e){var t=e._vue_visibilityState;t&&(t.destroyObserver(),delete e._vue_visibilityState)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "511e20815973782154192e285e592a60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cS(e,t){return e.parentNode===null?t:cS(e.parentNode,t.concat([e]))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ab9954bde75383bc2a3ee8f2ae66cc4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Py(e){if(e instanceof HTMLElement||e instanceof SVGElement){for(var t=cS(e.parentNode,[]),n=0;n<t.length;n+=1)if(Lbe(t[n]))return t[n];return document.scrollingElement||document.documentEleme...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3507e397f9cf42ab2bb394c880833d57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uh(e){\"@babel/helpers - typeof\";return Uh=typeof Symbol==\"function\"&&typeof Symbol.iterator==\"symbol\"?function(t){return typeof t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "55246d980be3214b0f4ed74681d37a60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mbe(){return this.items.length&&Uh(this.items[0])!==\"object\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d2b248b591e268922dd95d04bd5ed787",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rbe(e,t,n,i,s,l){const u=Go(\"ResizeObserver\"),f=Dr(\"observe-visibility\");return ct((se(),ye(\"div\",{class:ot([\"vue-recycle-scroller\",{ready:s.ready,\"page-mode\":n.pageMode,[`direction-${e.direc...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f11b9b465260306f5d9d485038525013",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zbe(e){const t=_e(()=>Ch.value?!1:!et.onlyTests),n=_e(()=>Un.value===\"\"),i=Ue(Un.value);Lp(()=>Un.value,h=>{i.value=(h==null?void 0:h.trim())??\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "32b39bfecc6e0b0308478736949291dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(h){var p;Un.value=\"\",h&&((p=e.value)==null||p.focus())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c4cb63ce1a508125eb77a080dcd8f046",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(h){var p;et.failed=!1,et.success=!1,et.skipped=!1,et.onlyTests=!1,h&&((p=e.value)==null||p.focus())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a4d08a67a29744031c24a9fa4055819f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(){l(!1),s(!0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "121d02f12eb2f1b3430011f7870a469f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(h,p,g,v,y){Zs.value&&(pn.value.search=(h==null?void 0:h.trim())??\"\",pn.value.failed=p,pn.value.success=g,pn.value.skipped=v,pn.value.onlyTests=y)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0c79779df426b6cdb11c93a92b1e9f44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t(){return ht.rpc.updateSnapshot()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0455ed30909823d34dfff4b9e52324c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function i(u){Ns.value&&(Nu.value=!0,await Et(),vo.value&&(Iu(!0),await Et())),u!=null&&u.length?await Rp(u):await Xfe()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "05375fd33305088a201bf2c6fc00b006",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(){Ae.collapseAllNodes()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "dc3db373e0bdab9d447730ba09dc414e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(){Ae.expandAllNodes()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "517f533eae86442ae7a77edc65ca13a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const Je=()=>{var ie;return Ba(\"div\",{ref:h,class:y.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3007c67316c331478672b54a14cbfad6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(g){At.navigation=g[0].size,At.details.size=g[1].size}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "acc6dd3d5fb28786509925da9e1f4def",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(g){At.details.browser=g[0].size,At.details.main=g[1].size}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c35e1e59d58e2c236d38b57f602555b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(){const g=document.querySelector(\"#tester-ui\");g&&(g.style.pointerEvents=\"none\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "21cf34acbe371bad067267d58e3d4c6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(){const g=document.querySelector(\"#tester-ui\");g&&(g.style.pointerEvents=\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0755263f93a3f2d8477618c2abbe9047",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function uS(e){return typeof e==\"object\"||\"displayName\"in e||\"props\"in e||\"__vccOpts\"in e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ec9516dd2668dba6cc8adcdb0c278812",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function swe(e){return e.__esModule||e[Symbol.toStringTag]===\"Module\"||e.default&&uS(e.default)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "83c243cc49b8a49c91612cc781749c3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xd(e,t){const n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "98f8604efbb796d840afdae1e7eb6725",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "const aa=()=>{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "21f9b11c6ce1c87451642ec9ef187133",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jp(e){return encodeURI(\"\"+e).replace(pwe,\"|\").replace(fwe,\"[\").replace(dwe,\"]\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "574d5bc570bc6654e85ef2b3bee0e281",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mwe(e){return Jp(e).replace(pS,\"{\").replace(gS,\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a35f1ac2976ff128054208a17fa34316",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gh(e){return Jp(e).replace(dS,\"%2B\").replace(gwe,\"+\").replace(fS,\"%23\").replace(lwe,\"%26\").replace(hwe,\"`\").replace(pS,\"{\").replace(gS,\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9f269bf2ed742a42333bd3a8b59871bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vwe(e){return Gh(e).replace(cwe,\"%3D\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "871b42d1da6be1b770ded6f6ddc30725",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ywe(e){return Jp(e).replace(fS,\"%23\").replace(uwe,\"%3F\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9800e857a6fa9be85e5040a1b4eb9c83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function bwe(e){return e==null?\"\":ywe(e).replace(awe,\"%2F\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "808ae84fc4c22ddac0daf352800f11f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ia(e){try{return decodeURIComponent(\"\"+e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "59d8e34d87d74fa439361d3a0ee530b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kd(e,t,n=\"/\"){let i,s={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3ab72af0a2cbb218b0eec8345801aa3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Swe(e,t){const n=t.query?e(t.query):\"\";return t.path+(n&&\"?\")+n+(t.hash||\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "32bb97fb87c825945cd1402de8f8827b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ry(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||\"/\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "495dfdbf868b366bf20a31f2f2d6cbf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function _we(e,t,n){const i=t.matched.length-1,s=n.matched.length-1;return i>-1&&i===s&&rl(t.matched[i],n.matched[s])&&mS(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6b270a12f10ecfc480d6a801110eb441",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function rl(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ce639a92f92fbe4d56ea2c9f6be438cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function mS(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!kwe(e[n],t[n]))return!1;return!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "837acfbea3ba919bd3f43d289e913d2b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function kwe(e,t){return zr(e)?zy(e,t):zr(t)?zy(t,e):e===t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0d167012e6258d5dde69c3520071a001",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zy(e,t){return zr(t)?e.length===t.length&&e.every((n,i)=>n===t[i]):e.length===1&&e[0]===t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5fa53ee116ee680cca410681e5da55df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Twe(e,t){if(e.startsWith(\"/\"))return e;if(!e)return t;const n=t.split(\"/\"),i=e.split(\"/\"),s=i[i.length-1];(s===\"..\"||s===\".\")&&i.push(\"\");let l=n.length-1,u,f;for(u=0;u<i.length;u++)if(f=i[u]...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ba2eda2de77853a824f859c4821f6d73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Cwe(e){if(!e)if(Ls){const t=document.querySelector(\"base\");e=t&&t.getAttribute(\"href\")||\"/\",e=e.replace(/^\\w+:\\/\\/[^\\/]+/,\"\")}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "555ea054838ec5e8b9fbb7408c462385",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Awe(e,t){return e.replace(Ewe,\"#\")+t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d1cf2210a78cfc1bedc3eae84d3c629c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Lwe(e,t){const n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{behavior:t.behavior,left:i.left-n.left-(t.left||0),top:i.top-n.top-(t.top||0)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d78a72d485ff8944ef74dd5b752a0d40",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dy(e,t){return(history.state?history.state.position-t:-1)+e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd132b85f408f4d97a4c697ae46c47be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Mwe(e,t){Xh.set(e,t)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b4439d83a41849ae8e457ec1a6a2b0c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Nwe(e){const t=Xh.get(e);return Xh.delete(e),t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8403375b16dd380ed7bd08e9b05f6c49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vS(e,t){const{pathname:n,search:i,hash:s}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0036bd23c3d7189749bc72b11e37dc54",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pwe(e,t,n,i){let s=[],l=[],u=null;const f=({state:y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d9babc92909ccad61c5283f8c0e4fa27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(){u=n.value}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "229be74ed44573ad5f59e4b940fbefd4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(y){s.push(y);const w=()=>{const L=s.indexOf(y);L>-1&&s.splice(L,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d35ca77d8f1d3eb3457d9cc5091a47fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(){const{history:y}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e03c66f48bb49deffb197fb8c382e794",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(){for(const y of l)y();l=[],window.removeEventListener(\"popstate\",f),window.removeEventListener(\"beforeunload\",g)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d398442a9f4c2d69919301f127d9c245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Fy(e,t,n,i=!1,s=!1){return{back:e,current:t,forward:n,replaced:i,position:window.history.length,scroll:s?yf():null}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7c5f0706584d744c67119ce60671e467",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Owe(e){const{history:t,location:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2c4dfa12bb2b24ef01fefbc577aab132",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(h,p,g){const v=e.indexOf(\"#\"),y=v>-1?(n.host&&document.querySelector(\"base\")?e:e.slice(v))+h:Iwe()+e+h;try{t[g?\"replaceState\":\"pushState\"](p,\"\",y),s.value=p}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81381c1e35d35d1f217379d397e6fe50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(h,p){const g=bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "81a23b7a5472adf196da4fcac50177b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(h,p){const g=bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a47cbdfd38374de4bed7963874cadb70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Rwe(e){e=Cwe(e);const t=Owe(e),n=Pwe(e,t.state,t.location,t.replace);function i(l,u=!0){u||n.pauseListeners(),history.go(l)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ecd712fbc6fb17d413b8a2bcf6942dc3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function zwe(e){return e=location.host?e||location.pathname+location.search:\"\",e.includes(\"#\")||(e+=\"#\"),Rwe(e)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa4abb82b864be285e45d61c51fdd2e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Dwe(e){return typeof e==\"string\"||e&&typeof e==\"object\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5bd015b15aa9533f1c3c906d65c5cc24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function yS(e){return typeof e==\"string\"||typeof e==\"symbol\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "48108e6815a49a77797636bb5da26174",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function il(e,t){return bt(new Error,{type:e,[bS]:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18b51bf87ac16416e250e208598fe0b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function vi(e,t){return e instanceof Error&&bS in e&&(t==null||!!(e.type&t))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4cd04d4ca2b4367250b8b7a17410b255",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Bwe(e,t){const n=bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1f362a005ef8a8163121fc3e95ee1be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(p){const g=p.match(u),v={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ba4af8e1bccf50325f51e51008e4aff2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(p){let g=\"\",v=!1;for(const y of e){(!v||!g.endsWith(\"/\"))&&(g+=\"/\"),v=!1;for(const w of y)if(w.type===0)g+=w.value;else if(w.type===1){const{value:L,repeatable:$,optional:A}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e278132641a7dba398eb143ae8abd36b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wwe(e,t){let n=0;for(;n<e.length&&n<t.length;){const i=t[n]-e[n];if(i)return i;n++}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "216552923d7fb560bb3eb1938130e45f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function wS(e,t){let n=0;const i=e.score,s=t.score;for(;n<i.length&&n<s.length;){const l=Wwe(i[n],s[n]);if(l)return l;n++}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "14668756b6cf62732711d513be992e33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Wy(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "56ee30d8315b0bf5a60170cc98eecf9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uwe(e){if(!e)return[[]];if(e===\"/\")return[[jwe]];if(!e.startsWith(\"/\"))throw new Error(`Invalid path \"${e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "5a331e593d6328ed89f8314b6f453670",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function t(w){throw new Error(`ERR (${n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8deb6a69dbacd5dfc0d84b8e4da144e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(){l&&s.push(l),l=[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1c078cd9d6fccdf8f3b7d49ea4e018ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function v(){p&&(n===0?l.push({type:0,value:p}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fd7a02a430bd75649bf64f6af38cc22b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function y(){p+=h}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "9b8b7bde43e116939b6c458453829ec5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vwe(e,t,n){const i=Bwe(Uwe(e.path),n),s=bt(i,{record:e,parent:t,children:[],alias:[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f9632da75910305fb6d480b0dd9b8c14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gwe(e,t){const n=[],i=new Map;t=Vy({strict:!1,end:!0,sensitive:!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "97202e5e2d1e718042cfafc07651c602",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function s(v){return i.get(v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "da0d51e6532c4f584d0a7c29bfc375ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function l(v,y,w){const L=!w,$=qy(v);$.aliasOf=w&&w.record;const A=Vy(t,v),E=[$];if(\"alias\"in v){const k=typeof v.alias==\"string\"?[v.alias]:v.alias;for(const z of k)E.push(qy(bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "04e72d57cc6f0289468e75c632f59387",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function u(v){if(yS(v)){const y=i.get(v);y&&(i.delete(v),n.splice(n.indexOf(y),1),y.children.forEach(u),y.alias.forEach(u))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "b3310174b49fd46e142dfecb35c16f76",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(){return n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0fb72d4004dbb050be09114ef84c9c07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function h(v){const y=Jwe(v,n);n.splice(y,0,v),v.record.name&&!Uy(v)&&i.set(v.record.name,v)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0ea779afd582990e8062e02fe86873c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function p(v,y){let w,L={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e32c68c17eb4e5ed638d4658e954170a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function g(){n.length=0,i.clear()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "7b7f67dade99cf66ac9efe825e613618",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function jy(e,t){const n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2250c074b305b992ed648a8a097314fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function qy(e){const t={path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4f4419093339d504ed9c8768f4d0df70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Xwe(e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "86fcfdeab3f7ae3237c4ede1fc92f74a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Uy(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "47309f19b6e83ab5a27103b7ebf4ecf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Kwe(e){return e.reduce((t,n)=>bt(t,n.meta),{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8cf1fb641a0cc72c974290dd3a703f49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vy(e,t){const n={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e92b0c98fc613d342bc54234f38157d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jwe(e,t){let n=0,i=t.length;for(;n!==i;){const l=n+i>>1;wS(e,t[l])<0?i=l:n=l+1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2fb92968e99ac7becca720cf463dc6de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ywe(e){let t=e;for(;t=t.parent;)if(xS(t)&&wS(e,t)===0)return t}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e32537377dd2d839652b42aaba55fda0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function xS({record:e}){return!!(e.name||e.components&&Object.keys(e.components).length||e.redirect)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa5864da4572ee700961bafb44de905c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zwe(e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6495e553a575a8cbbf83aa2c6f299f3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Gy(e){let t=\"\";for(let n in e){const i=e[n];if(n=vwe(n),i==null){i!==void 0&&(t+=(t.length?\"&\":\"\")+n);continue}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "f07c9fed4800824fe9c3718b60ba3d09",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Qwe(e){const t={}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "96e363560582decd56e02936bd41a2f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Vl(){let e=[];function t(i){return e.push(i),()=>{const s=e.indexOf(i);s>-1&&e.splice(s,1)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "bb2bc5431774e292400951aeba79a9b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function n(){e=[]}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fc4a8db065e4ea77f80181dfe1353942",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Ky(e){const t=wn(Yp),n=wn(SS),i=_e(()=>{const h=j(e.to);return t.resolve(h)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "04871aeecc05ca46e64c3e73630eb8e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function f(h={}){if(ixe(h)){const p=t[j(e.replace)?\"replace\":\"push\"](j(e.to)).catch(aa);return e.viewTransition&&typeof document<\"u\"&&\"startViewTransition\"in document&&document.startViewTransition(()=...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "00c306bb660676646ce4f0cf2736d554",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function txe(e){return e.length===1?e[0]:e}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "67fe57a5ece1a80ca33b6f0447a6bbb0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ixe(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.get...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "18f20fe8bdcb109a132a7294e7a1db30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oxe(e,t){for(const n in t){const i=t[n],s=e[n];if(typeof i==\"string\"){if(i!==s)return!1}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "73da19921ad5bd783595cc7f0befcf00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Jy(e){return e?e.aliasOf?e.aliasOf.path:e.path:\"\"}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d4d5ec331f8be3a34ef2ab3d3897f270",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Zy(e,t){if(!e)return null;const n=e(t);return n.length===1?n[0]:n}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "74fdad793c1618eb435adcb0b778e3d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function axe(e){const t=Gwe(e.routes,e),n=e.parseQuery||Zwe,i=e.stringifyQuery||Gy,s=e.history,l=Vl(),u=Vl(),f=Vl(),h=rn(Vi);let p=Vi;Ls&&e.scrollBehavior&&\"scrollRestoration\"in history&&(history.scro...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "4af260f4c4d11871f715d2fe00332806",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function L(U){const Q=t.getRecordMatcher(U);Q&&t.removeRoute(Q)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c1ff69b67e056a1151469ffa5f176528",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function A(U){return!!t.getRecordMatcher(U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c3e773fae2bd81312437c3c187126ae4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function E(U,Q){if(Q=bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1ea216019e2e739ccc16f65790053732",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function M(U){return typeof U==\"string\"?Kd(n,U,h.value.path):bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "129ed655f680554adc1e48cfce823b88",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function O(U,Q){if(p!==U)return il(8,{from:Q,to:U}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8084ba682610b57b5e6a925b89ad25f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function k(U){return te(U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "3137a98e0800480f5c8b2a1702abae81",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function z(U){return k(bt(M(U),{replace:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "e03d01206f418d74df48b8f942ac8571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function D(U){const Q=U.matched[U.matched.length-1];if(Q&&Q.redirect){const{redirect:J}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "1f622d52788a6e028bf8c6b49c731b97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function te(U,Q){const J=p=E(U),ae=h.value,ge=U.state,F=U.force,V=U.replace===!0,Y=D(J);if(Y)return te(bt(M(Y),{state:typeof Y==\"object\"?bt({}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "fa417c0c4791e862410f6825edda77bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ee(U,Q){const J=O(U,Q);return J?Promise.reject(J):Promise.resolve()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "408b3c546b6f57d1d762c8dd8e71456f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function W(U){const Q=Ke.values().next().value;return Q&&typeof Q.runWithContext==\"function\"?Q.runWithContext(U):U()}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "48319cd4319c58b30c4633cd8e6a9527",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function q(U,Q){let J;const[ae,ge,F]=cxe(U,Q);J=Jd(ae.reverse(),\"beforeRouteLeave\",U,Q);for(const Y of ae)Y.leaveGuards.forEach(fe=>{J.push(eo(fe,U,Q))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "8749b35ed8a74da174a95edca9759440",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function K(U,Q,J){f.list().forEach(ae=>W(()=>ae(U,Q,J)))}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "ca7ab63459388870655015efd45ff9e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function C(U,Q,J,ae,ge){const F=O(U,Q);if(F)return F;const V=Q===Vi,Y=Ls?history.state:{}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e3ae0c9568437b5a3bf4ab8103c8d3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function I(){P||(P=s.listen((U,Q,J)=>{if(!Je.listening)return;const ae=E(U),ge=D(ae);if(ge){te(bt(ge,{replace:!0,force:!0}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "2884fbc6160f1d6caff2d047e024fa94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function oe(U,Q,J){we(U);const ae=R.list();return ae.length?ae.forEach(ge=>ge(U,Q,J)):console.error(U),Promise.reject(U)}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "d0808af5b7e2999172fbd29bcf61ede3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ue(){return B&&h.value!==Vi?Promise.resolve():new Promise((U,Q)=>{S.add([U,Q])}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "c8d0124cf5631dc87f08dc666adf1392",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function we(U){return B||(B=!U,I(),S.list().forEach(([Q,J])=>U?J(U):Q()),S.reset()),U}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "0956398337dce182e9152c1fd20aa794",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function Pe(U,Q,J,ae){const{scrollBehavior:ge}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "a598441400f52272f8f50edf5504c266",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function ie(U){return U.reduce((Q,J)=>Q.then(()=>W(J)),Promise.resolve())}...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "6e84789620fbce4d1484ba22609cf119",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function cxe(e,t){const n=[],i=[],s=[],l=Math.max(t.matched.length,e.matched.length);for(let u=0;u<l;u++){const f=t.matched[u];f&&(e.matched.find(p=>rl(p,f))?i.push(f):n.push(f));const h=e.matched[u];...",
        "recommendation": "Consider creating a shared helper function"
      },
      {
        "hash": "64a89f8c314ff047df77495946a36b85",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 1,
        "sample": "function fxe(){return axe({history:zwe(),routes:owe}...",
        "recommendation": "Consider creating a shared helper function"
      }
    ],
    "components": [],
    "imports": [
      {
        "normalized": "import React from 'react'",
        "severity": "low",
        "occurrences": 24,
        "files": [
          "debug/test-simple-app.tsx",
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkHeader.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/VadTimeline.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
          "packages/murmuraba/src/components/chunk-results/audio-controls/audio-controls.tsx",
          "packages/murmuraba/src/components/chunk-results/chunk-header/chunk-header.tsx",
          "packages/murmuraba/src/components/chunk-results/file-info/file-info.tsx",
          "packages/murmuraba/src/components/chunk-results/processing-metrics/processing-metrics.tsx",
          "packages/murmuraba/src/components/chunk-results/vad-display/vad-display.tsx",
          "packages/murmuraba/verify-app-health.test.tsx",
          "src/components/wasm-error-display/wasm-error-display.tsx",
          "src/features/audio-recording/RecordRoute.tsx",
          "src/features/demo/DemoRoute.tsx",
          "src/features/file-management/FileProcessRoute.tsx",
          "src/main.tsx",
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "sample": "import React from 'react';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { describe, it, expect, beforeEach, vi } from 'vitest'",
        "severity": "low",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "sample": "import { describe, it, expect, beforeEach, vi } from 'vitest'",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import userEvent from '@testing-library/user-event'",
        "severity": "low",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkHeader.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "sample": "import userEvent from '@testing-library/user-event'",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest'",
        "severity": "low",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts",
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "sample": "import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { vi } from 'vitest'",
        "severity": "low",
        "occurrences": 18,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts",
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/core/StateManager.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
          "packages/murmuraba/src/__tests__/vitest.setup.ts",
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
          "src/__tests__/setup.ts"
        ],
        "sample": "import { vi } from 'vitest';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest'",
        "severity": "low",
        "occurrences": 19,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
          "packages/murmuraba/src/__tests__/utils/rnnoise-loader.test.ts",
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "sample": "import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { render, screen, fireEvent, waitFor } from '@testing-library/react'",
        "severity": "low",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "sample": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { AudioWorkletEngine } from '../../engines/audio-worklet-engine'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts"
        ],
        "sample": "import { AudioWorkletEngine } from '../../engines/audio-worklet-engine';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { ProcessedChunk } from '../../../hooks/murmuraba-engine/types'",
        "severity": "low",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "sample": "import { ProcessedChunk } from '../../../hooks/murmuraba-engine/types';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { renderHook, act } from '@testing-library/react'",
        "severity": "low",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx",
          "src/core/store/__tests__/useAppStore.test.ts"
        ],
        "sample": "import { renderHook, act } from '@testing-library/react';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { render, screen } from '@testing-library/react'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkHeader.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
          "src/__tests__/App.startup.test.tsx"
        ],
        "sample": "import { render, screen } from '@testing-library/react';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { ProcessedChunk } from './types'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/interfaces.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "sample": "import { ProcessedChunk } from './types';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { defineConfig } from 'vitest/config'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "packages/murmuraba/vitest.simple.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "sample": "import { defineConfig } from 'vitest/config';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import path from 'path'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "sample": "import path from 'path';",
        "recommendation": "Consider creating a centralized import barrel file"
      },
      {
        "normalized": "import { RecordingState } from 'murmuraba'",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/features/audio-recording/AudioRecorder.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "sample": "import { RecordingState } from 'murmuraba';",
        "recommendation": "Consider creating a centralized import barrel file"
      }
    ],
    "constants": [
      {
        "hash": "bdb54b7eea090ec5406e3992da87aa56",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=[];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b3057a8a78835a430f2f224a7bcfa0e1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const W=[];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5cf48e9d28a323692c3fbd5e40594937",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=document.createElement(\"div\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "99e1dfb7a2d0f65a128ee147327d15b2",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const I=document.createElement(\"span\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2f2bf9eae8853834f9149b8cbb6e98c0",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=t.value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "60732c13f6d0e488bd3b4e340f2ce757",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const F=Math.max(Math.min(ae.size+J,ae.max),ae.min),V=F-ae.size;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ded720e3b26a913bffd108a3997bab65",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=cb(),E=()=>{g.stop(),A&&A.active&&Zh(A.effects,g)};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "62c0e1d2c16d785abf7af6b2c2a6c4db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=k=>{if(!(!(g.flags&1)||!g.dirty&&!k))if(t){const z=g.run();",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "3819112a9239fb007842df941b7a88da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=zo;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "3eedac6a3e3375c2105d7f45f79c52bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=q[1];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b2d41457fa51cc6cfabedea3be52ca17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=z[k];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "44e9ae375e692797dbf13e9193bdd4ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const I=W[Ic]=S=>{P||(P=!0,S?D(C,[W]):D(K,[W]),ee.delayedLeave&&ee.delayedLeave(),W[Ic]=void 0)};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ea7ac802a9065655d0bece50c28cadbf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=String(e.key);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "7c5094e607ba18a603fadb4d657e2899",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=W[Ji]=I=>{C||(C=!0,q(),I?D($,[W]):D(L,[W]),W[Ji]=void 0,z[K]===e&&delete z[K])};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b0eee5c615525ececc8cdeb97dd22f44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=Dt(h),$=kt(h);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f7ee020765645529a1e4a7fec0a1f434",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=()=>{if(e.f){const E=L?w(h)?v[h]:g[h]:h.value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2992fdc862da913ca03e4f0f8f4250fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const B=s.call(n,n);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "819329234c63f8090bae76889b8a8458",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const B=Ge(h)?h.call(n):h;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "7d579c5a242351f981212683a90a9456",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const B=e.exposed||(e.exposed={});",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "68b10d662f34eada79348a5065e2a244",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const DT={data:sv,props:lv,emits:lv,methods:Gl,computed:Gl,beforeCreate:$n,created:$n,beforeMount:$n,mounted:$n,beforeUpdate:$n,updated:$n,beforeDestroy:$n,beforeUnmount:$n,destroyed:$n,unmounted:$n,activated:$n,deactivated:$n,errorCaptured:$n,serverPrefetch:$n,components:Gl,directives:Gl,watch:HT,provide:sv,inject:FT};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "aa868840fff88293d002de1b1da7b977",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=ir(y);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5768f7226f67d40822b7b8a5d954b8ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const UT=new WeakMap;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2e8f92dc47ad011a502afcc575234791",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=L[E],O=Ge(M)&&M.name;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "436dcf9c8e70e21a1f1ce02f27448dd5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const V=y(F.anchor||F.el),Y=V&&V[mT];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "750441157f396337653d88f95f082e0e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J=(F,V,Y)=>{F==null?V._vnode&&qe(V._vnode,null,null,!0):$(V._vnode||null,F,V,null,null,null,Y),V._vnode=F,Q||(Q=!0,nv(),$b(),Q=!1)},ae={p:$,um:qe,m:Pe,r:Ze,mt:I,mc:ee,pc:oe,pbc:q,n:U,o:e};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "bb3bea5b67de1517e22a60950e6be198",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const QT=Symbol.for(\"v-scx\"),eC=()=>wn(QT);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "8d8a54421f176bc9a83e82a61a9837f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=n.set?n.set(w):w;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "3d71313543cf7ca010336dc8370099c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=pC(e);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b66f1c9ded95608688f6ae5a227efc7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=e.props?ib(e.props.timeout):void 0,k=l,z={vnode:e,parent:t,parentComponent:n,namespace:u,container:i,hiddenContainer:s,deps:0,pendingId:ah++,timeout:typeof O==\"number\"?O:-1,activeBranch:null,pendingBranch:null,isInFallback:!g,isHydrating:g,isUnmounted:!1,effects:[],resolve(D=!1,te=!1){const{vnode:ee,activeBranch:W,pendingBranch:q,pendingId:K,effects:C,parentComponent:P,container:I}=z;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "96d1c0932ad6be1c588e568477b08ed8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=L(ee),P=()=>{z.isInFallback&&(v(null,D,q,C,W,null,K,f,h),Fs(z,D))},I=D.transition&&D.transition.mode===\"out-in\";",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "626e97b5f55f1d57d19aee4f4af8a3ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const W=!!z.pendingBranch;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d4bb809cb17ed4edce643b28884a7f0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=!q&&D.subTree.el;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "92bc5f779f7dbfabce85aa30eda5511b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const S=C?te:M,R=()=>W(P,C,I);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c85bed16cf217c318ae18de7ca149b69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const I=()=>q(C,P);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "11f3ae1a455b78166d2cd1d5a98a8c02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const RC=Symbol(\"\"),zC=/(^|;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9b61cf7b950a442b616acf53e0af11d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const ZC=[\"ctrl\",\"shift\",\"alt\",\"meta\"],QC={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>\"button\"in e&&e.button!==0,middle:e=>\"button\"in e&&e.button!==1,right:e=>\"button\"in e&&e.button!==2,exact:(e,t)=>ZC.some(n=>e[`${n}Key`]&&!t.includes(n))},Zc=(e,t)=>{const n=e._withMods||(e._withMods={}),i=t.join(\".\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "32d9885076943481bfb31808e0fa73f1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=Tw(M,l,await(h.isRTL==null?void 0:h.isRTL(p.floating)));",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "cdd8da520955485a1e840116a23a0571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=Mr(q.placement);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "180c19ba5acee926fce2c30692f708da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=ti(s),M=ti(f)===f,O=await(h.isRTL==null?void 0:h.isRTL(p.floating)),k=y||(M||!$?[Su(f)]:fE(f));",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f9ef998af16e9b62561c4024992b531a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=Tw(s,u,O);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "fe3339b59b1a13f651a34d141254f23f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=(((W=l.flip)==null?void 0:W.index)||0)+1,P=z[C];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "90f90d92f0a26fc940a7b3feb1d6ac5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const S=(K=ee.map(R=>[R.placement,R.overflows.filter(B=>B>0).reduce((B,oe)=>B+oe,0)]).sort((R,B)=>R[1]-B[1])[0])==null?void 0:K[0];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f879b523538c1870f35c1f7a3bce724a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=y===\"y\"?\"top\":\"left\",E=y===\"y\"?\"bottom\":\"right\",M=w+g[A],O=w-g[E];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "6a7ad0a3e58e954381842f2743e4b9f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=v===\"y\"?\"top\":\"left\",E=v===\"y\"?\"bottom\":\"right\",M=L+g[A],O=L-g[E];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "aa496b824f888a50db1738e7390a5bf4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=w-h[L],E=y-h[$],M=!t.middlewareData.shift;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "440574594fafc191bd0d54e35204fbe0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=y-h.left-h.right;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "fc95a1d28918f1defa8c0966f1d56c07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=w-h.top-h.bottom;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2a5fd650fdbbc06aeedd08ad1113aa71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=Do(h.left,0),te=Do(h.right,0),ee=Do(h.top,0),W=Do(h.bottom,0);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b2c7e1d7d5f253fc03da50f89ae33671",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=Bs(E),O=E.getBoundingClientRect(),k=getComputedStyle(E);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "95f4248373778023a5490d870f2ba5b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const CE={getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:i,strategy:s}=e;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9d09def13833ec99b44a4020e72e714a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=Zr(p).position===\"fixed\";",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "962f56ae75cfa6cfb1fd22f2695a6213",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=Zr($),E=ph($);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "8d888a7c7eb6dc60dc2547613dce2435",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const NE={extends:zw()},af=(e,t)=>{const n=e.__vccOpts||e;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "0f6ede3d449f6f2f25d848019e86c1dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const PE=af(NE,[[\"render\",IE]]);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "dd4f8215eb3628d202d93776818dde90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const RE=Pb();",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d384a8e770b3c92514b3b10d47b14202",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const DE=RE((e,t,n,i,s,l)=>(se(),Ye(\"div\",zE)));",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "33fbc28ac7e06aa1eab3a104ea5fc728",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const VE=at({name:\"VPopperWrapper\",components:{Popper:PE,PopperContent:Fw},mixins:[Hw,Dw(\"finalTheme\")],props:{theme:{type:String,default:null},referenceNode:{type:Function,default:null},shown:{type:Boolean,default:!1},showGroup:{type:String,default:null},ariaId:{default:null},disabled:{type:Boolean,default:void 0},positioningDisabled:{type:Boolean,default:void 0},placement:{type:String,default:void 0},delay:{type:[String,Number,Object],default:void 0},distance:{type:[Number,String],default:void 0},skidding:{type:[Number,String],default:void 0},triggers:{type:Array,default:void 0},showTriggers:{type:[Array,Function],default:void 0},hideTriggers:{type:[Array,Function],default:void 0},popperTriggers:{type:Array,default:void 0},popperShowTriggers:{type:[Array,Function],default:void 0},popperHideTriggers:{type:[Array,Function],default:void 0},container:{type:[String,Object,vh,Boolean],default:void 0},boundary:{type:[String,vh],default:void 0},strategy:{type:String,default:void 0},autoHide:{type:[Boolean,Function],default:void 0},handleResize:{type:Boolean,default:void 0},instantMove:{type:Boolean,default:void 0},eagerMount:{type:Boolean,default:void 0},popperClass:{type:[String,Array,Object],default:void 0},computeTransformOrigin:{type:Boolean,default:void 0},autoMinSize:{type:Boolean,default:void 0},autoSize:{type:[Boolean,String],default:void 0},autoMaxSize:{type:Boolean,default:void 0},autoBoundaryMaxSize:{type:Boolean,default:void 0},preventOverflow:{type:Boolean,default:void 0},overflowPadding:{type:[Number,String],default:void 0},arrowPadding:{type:[Number,String],default:void 0},arrowOverflow:{type:Boolean,default:void 0},flip:{type:Boolean,default:void 0},shift:{type:Boolean,default:void 0},shiftCrossAxis:{type:Boolean,default:void 0},noAutoFocus:{type:Boolean,default:void 0},disposeTimeout:{type:Number,default:void 0}},emits:{show:()=>!0,hide:()=>!0,\"update:shown\":e=>!0,\"apply-show\":()=>!0,\"apply-hide\":()=>!0,\"close-group\":()=>!0,\"close-directive\":()=>!0,\"auto-hide\":()=>!0,resize:()=>!0},computed:{finalTheme(){return this.theme??this.$options.vPopperTheme}},methods:{getTargetNodes(){return Array.from(this.$el.children).filter(e=>e!==this.$refs.popperContent.$el)}}});",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c89ce4b04cab0caeae8f889e4d80827d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const XE={...wp,name:\"VTooltip\",vPopperTheme:\"tooltip\"},KE=at({name:\"VTooltipDirective\",components:{Popper:zw(),PopperContent:Fw},mixins:[Hw],inheritAttrs:!1,props:{theme:{type:String,default:\"tooltip\"},html:{type:Boolean,default:e=>xa(e.theme,\"html\")},content:{type:[String,Number,Function],default:null},loadingContent:{type:String,default:e=>xa(e.theme,\"loadingContent\")},targetNodes:{type:Function,required:!0}},data(){return{asyncContent:null}},computed:{isContentAsync(){return typeof this.content==\"function\"},loading(){return this.isContentAsync&&this.asyncContent==null},finalContent(){return this.isContentAsync?this.loading?this.loadingContent:this.asyncContent:this.content}},watch:{content:{handler(){this.fetchContent(!0)},immediate:!0},async finalContent(){await this.$nextTick(),this.$refs.popper.onResize()}},created(){this.$_fetchId=0},methods:{fetchContent(e){if(typeof this.content==\"function\"&&this.$_isShown&&(e||!this.$_loading&&this.asyncContent==null)){this.asyncContent=null,this.$_loading=!0;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "e812477fe121793185fca53dceefe4de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const QE=af(KE,[[\"render\",ZE]]),Bw=\"v-popper--has-tooltip\";",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "28c0bce638e6bda12adb740386192404",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const LA=[\"stack\",\"line\",\"column\",\"name\",\"message\",\"fileName\",\"lineNumber\",\"columnNumber\",\"number\",\"description\",\"cause\"];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "98c2d858a02d5f1acb655982f4630f2e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const IA=typeof Symbol==\"function\"&&typeof Symbol.for==\"function\",Ld=IA?Symbol.for(\"chai/inspect\"):\"@@chai/inspect\",$d=Symbol.for(\"nodejs.util.inspect.custom\"),o0=new WeakMap,s0={},l0={undefined:(e,t)=>t.stylize(\"undefined\",\"undefined\"),null:(e,t)=>t.stylize(\"null\",\"null\"),boolean:(e,t)=>t.stylize(String(e),\"boolean\"),Boolean:(e,t)=>t.stylize(String(e),\"boolean\"),number:e0,Number:e0,bigint:t0,BigInt:t0,string:r0,String:r0,function:Qv,Function:Qv,symbol:i0,Symbol:i0,Array:pA,Date:mA,Map:bA,Set:_A,RegExp:xA,Promise:Vw,WeakSet:(e,t)=>t.stylize(\"WeakSet{…}\",\"special\"),WeakMap:(e,t)=>t.stylize(\"WeakMap{…}\",\"special\"),Arguments:AA,Int8Array:gi,Uint8Array:gi,Uint8ClampedArray:gi,Int16Array:gi,Uint16Array:gi,Int32Array:gi,Uint32Array:gi,Float32Array:gi,Float64Array:gi,Generator:()=>\"\",DataView:()=>\"\",ArrayBuffer:()=>\"\",Error:$A,HTMLCollection:yh,NodeList:yh},PA=(e,t,n)=>Ld in e&&typeof e[Ld]==\"function\"?e[Ld](t):$d in e&&typeof e[$d]==\"function\"?e[$d](t.depth,t):\"inspect\"in e&&typeof e.inspect==\"function\"?e.inspect(t.depth,t):\"constructor\"in e&&o0.has(e.constructor)?o0.get(e.constructor)(e,t):s0[n]?s0[n](e,t):\"\",OA=Object.prototype.toString;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "4ea2e5a839e4226c6bcac7b72ab6bb55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const RA=/%[sdjifoOc%]/g;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2fb7769bee3d1a10070ba6fcb293aae3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const BA=44,d0=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",WA=new Uint8Array(64),Zw=new Uint8Array(128);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "335dae2b7ac0bebf2cdcd05aa3f536f5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const GA=/^[\\w+.-]+:\\/\\//,XA=/^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/,KA=/^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "bf51deb80e560c66f009851b173c89de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const CL=/^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d9ba9c182b0aca9864f3e6b37c9740a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const AL=function(...e){e=e.map(i=>TL(i));",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ea13b1c8fb3216d5dc33ff23cf8be225",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const BL=/^[A-Za-z]:\\//;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ba9317f21b11c4c292e8d2dc052be760",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const _0=function(...e){e=e.map(i=>WL(i));",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "aaec05b04b7b3c1ac01e50ec8f164b33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const GL=new WeakMap,lx=new WeakMap,ax=new WeakMap;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b740ce306a7cc4546eb5c89bc4990d41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=await t$(e,w,s,p);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b5163368cc29e214ae3e4bdc4bed0dc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=(E==null?void 0:E.timeout)??Xr.config.testTimeout,k={id:\"\",name:A,suite:(M=ao.currentSuite)===null||M===void 0?void 0:M.suite,each:E.each,fails:E.fails,context:void 0,type:\"test\",file:void 0,timeout:O,retry:E.retry??Xr.config.retry,repeats:E.repeats,mode:E.only?\"only\":E.skip?\"skip\":E.todo?\"todo\":\"run\",meta:E.meta??Object.create(null),annotations:[]},z=E.handler;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f811a96efd0435439924d58977705ba9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=w$(k,Xr);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "08bf479c7013380f0aa364cd618ac215",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const W=ee.stack,q=u$(W);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "432d8d72f187247f16d588b65c69120b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=cx(A,{fixtures:g},Xr);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ec780a2011074179510c577681acfe05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=Array.isArray(y)?y:[y];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "334856ba06242e7bd4ae9fb09ada84e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=Array.isArray($)?$:[$];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1435230c4490ac76abff603504e8afa4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A0=Date.now,ao={currentSuite:null};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "899e1cacb1caa4fa54939221d801658b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=l(()=>{u(L),$()},t);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "21af199a8deb6cbab2b50a33cadaf4a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=x$(n,t,i);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "95d1ea114e7cadf2a441e08460d792d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=e(...h);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5fcf757309788ef4ae4ee0d5cf05b324",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=new Proxy({},{get(E,M){if(M===\"$functions\")return e;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d0d351bf33b14b9c409c87789d0088ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=(...z)=>{n(u({m:M,a:z,t:$0}))};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "4fff5236bafb062768f53f6a5b054184",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=h?h(te,e[te]):e[te];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f563ac48d803a1951c93ff4e6efe0bc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=[new Promise(O=>{A=St(e,k=>{v(k)!==t&&(A?A():Et(()=>A==null?void 0:A()),O(k))},{flush:y,deep:w,immediate:!0})})];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d189b167e3c656a66700a35a97ea6ce7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=[new Promise(k=>{E=St([e,v],([z,D])=>{t!==(z===D)&&(E?E():Et(()=>E==null?void 0:E()),k(z))},{flush:w,deep:L,immediate:!0})})];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "a5ba2ff12f8b6c1aa79a87ae7a0f2ba3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=Array.from(w);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5382e4d02308d391f8f15dccf433baec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=await e($=>{v(()=>{l&&(l.value=!1),w||$()})});",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "846e52536ce70dcd4727263f506e551a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=w-h;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "bc9a196705cfbf9a643ebcb578d0c6c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=Gt(t),M=rM(E),O=(s=i.serializer)!=null?s:iM[M],{pause:k,resume:z}=Mx($,()=>te($.value),{flush:l,deep:u,eventFilter:y});",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "8c18aa54f4077ce9cc346af26ce67e06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P={key:A.value,oldValue:K,newValue:C,storageArea:n};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "4ceaca1147cf06a60415a3fc14ed99e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=n.getItem(A.value);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f67f3b8ce469779c104ed609dac38772",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=O.write(K);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "318e1b0eb2921b84fdd34e7f51abf901",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=K?K.newValue:n.getItem(A.value);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5b2fc9fa61d2244599cfb052565bc4f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=O.read(C);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "858d4f29a5b8592204b5f4664c2f61d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const C=D.split(/\\s/g);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "55b18f9522d86a5e769881ebed8cb52a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=_e({get(){return p?L.value:$.value},set(k){L.value=k}});",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9dcef011b0736fe96b7ce187f943e3c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=f.location.hash||\"\",k=O.indexOf(\"?\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "58be7404955752390548d6abbd176780",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=O.getAll(z);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b788f5e17ec924be7350fee7bad810a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=new URLSearchParams(\"\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f62f0dd31a4dc67d75298fd1a162bf9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E={passive:!0};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "e27ff8c1dc20023e634838caa45c2114",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=v();",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c039009965ac22b18098fab7ba48dfc8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=n.get(y);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d6f38d375c59c13a3aae993e7d44a245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const VM={setCurrentFileId(e){mo.value=e,Qs.value=gr(e),Iu(!1)},async setIframeViewport(e,t){er.value=[e,t],(Nt==null?void 0:Nt.provider)===\"webdriverio\"&&Qx(),await new Promise(n=>requestAnimationFrame(n))}},GM=location.port,XM=[location.hostname,GM].filter(Boolean).join(\":\"),KM=`${location.protocol===\"https:\"?\"wss:\":\"ws:\"}//${XM}/__vitest_api__?token=${window.VITEST_API_TOKEN||\"0\"}`,pr=!!window.METADATA_PATH;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5084ca8bcad8c2477d0b2521f393e65d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const JM=\"Á\",YM=\"á\",ZM=\"Ă\",QM=\"ă\",eN=\"∾\",tN=\"∿\",nN=\"∾̳\",rN=\"Â\",iN=\"â\",oN=\"´\",sN=\"А\",lN=\"а\",aN=\"Æ\",cN=\"æ\",uN=\"⁡\",fN=\"𝔄\",dN=\"𝔞\",hN=\"À\",pN=\"à\",gN=\"ℵ\",mN=\"ℵ\",vN=\"Α\",yN=\"α\",bN=\"Ā\",wN=\"ā\",xN=\"⨿\",SN=\"&\",_N=\"&\",kN=\"⩕\",TN=\"⩓\",CN=\"∧\",EN=\"⩜\",AN=\"⩘\",LN=\"⩚\",$N=\"∠\",MN=\"⦤\",NN=\"∠\",IN=\"⦨\",PN=\"⦩\",ON=\"⦪\",RN=\"⦫\",zN=\"⦬\",DN=\"⦭\",FN=\"⦮\",HN=\"⦯\",BN=\"∡\",WN=\"∟\",jN=\"⊾\",qN=\"⦝\",UN=\"∢\",VN=\"Å\",GN=\"⍼\",XN=\"Ą\",KN=\"ą\",JN=\"𝔸\",YN=\"𝕒\",ZN=\"⩯\",QN=\"≈\",e2=\"⩰\",t2=\"≊\",n2=\"≋\",r2=\"'\",i2=\"⁡\",o2=\"≈\",s2=\"≊\",l2=\"Å\",a2=\"å\",c2=\"𝒜\",u2=\"𝒶\",f2=\"≔\",d2=\"*\",h2=\"≈\",p2=\"≍\",g2=\"Ã\",m2=\"ã\",v2=\"Ä\",y2=\"ä\",b2=\"∳\",w2=\"⨑\",x2=\"≌\",S2=\"϶\",_2=\"‵\",k2=\"∽\",T2=\"⋍\",C2=\"∖\",E2=\"⫧\",A2=\"⊽\",L2=\"⌅\",$2=\"⌆\",M2=\"⌅\",N2=\"⎵\",I2=\"⎶\",P2=\"≌\",O2=\"Б\",R2=\"б\",z2=\"„\",D2=\"∵\",F2=\"∵\",H2=\"∵\",B2=\"⦰\",W2=\"϶\",j2=\"ℬ\",q2=\"ℬ\",U2=\"Β\",V2=\"β\",G2=\"ℶ\",X2=\"≬\",K2=\"𝔅\",J2=\"𝔟\",Y2=\"⋂\",Z2=\"◯\",Q2=\"⋃\",eI=\"⨀\",tI=\"⨁\",nI=\"⨂\",rI=\"⨆\",iI=\"★\",oI=\"▽\",sI=\"△\",lI=\"⨄\",aI=\"⋁\",cI=\"⋀\",uI=\"⤍\",fI=\"⧫\",dI=\"▪\",hI=\"▴\",pI=\"▾\",gI=\"◂\",mI=\"▸\",vI=\"␣\",yI=\"▒\",bI=\"░\",wI=\"▓\",xI=\"█\",SI=\"=⃥\",_I=\"≡⃥\",kI=\"⫭\",TI=\"⌐\",CI=\"𝔹\",EI=\"𝕓\",AI=\"⊥\",LI=\"⊥\",$I=\"⋈\",MI=\"⧉\",NI=\"┐\",II=\"╕\",PI=\"╖\",OI=\"╗\",RI=\"┌\",zI=\"╒\",DI=\"╓\",FI=\"╔\",HI=\"─\",BI=\"═\",WI=\"┬\",jI=\"╤\",qI=\"╥\",UI=\"╦\",VI=\"┴\",GI=\"╧\",XI=\"╨\",KI=\"╩\",JI=\"⊟\",YI=\"⊞\",ZI=\"⊠\",QI=\"┘\",eP=\"╛\",tP=\"╜\",nP=\"╝\",rP=\"└\",iP=\"╘\",oP=\"╙\",sP=\"╚\",lP=\"│\",aP=\"║\",cP=\"┼\",uP=\"╪\",fP=\"╫\",dP=\"╬\",hP=\"┤\",pP=\"╡\",gP=\"╢\",mP=\"╣\",vP=\"├\",yP=\"╞\",bP=\"╟\",wP=\"╠\",xP=\"‵\",SP=\"˘\",_P=\"˘\",kP=\"¦\",TP=\"𝒷\",CP=\"ℬ\",EP=\"⁏\",AP=\"∽\",LP=\"⋍\",$P=\"⧅\",MP=\"\\\\\",NP=\"⟈\",IP=\"•\",PP=\"•\",OP=\"≎\",RP=\"⪮\",zP=\"≏\",DP=\"≎\",FP=\"≏\",HP=\"Ć\",BP=\"ć\",WP=\"⩄\",jP=\"⩉\",qP=\"⩋\",UP=\"∩\",VP=\"⋒\",GP=\"⩇\",XP=\"⩀\",KP=\"ⅅ\",JP=\"∩︀\",YP=\"⁁\",ZP=\"ˇ\",QP=\"ℭ\",eO=\"⩍\",tO=\"Č\",nO=\"č\",rO=\"Ç\",iO=\"ç\",oO=\"Ĉ\",sO=\"ĉ\",lO=\"∰\",aO=\"⩌\",cO=\"⩐\",uO=\"Ċ\",fO=\"ċ\",dO=\"¸\",hO=\"¸\",pO=\"⦲\",gO=\"¢\",mO=\"·\",vO=\"·\",yO=\"𝔠\",bO=\"ℭ\",wO=\"Ч\",xO=\"ч\",SO=\"✓\",_O=\"✓\",kO=\"Χ\",TO=\"χ\",CO=\"ˆ\",EO=\"≗\",AO=\"↺\",LO=\"↻\",$O=\"⊛\",MO=\"⊚\",NO=\"⊝\",IO=\"⊙\",PO=\"®\",OO=\"Ⓢ\",RO=\"⊖\",zO=\"⊕\",DO=\"⊗\",FO=\"○\",HO=\"⧃\",BO=\"≗\",WO=\"⨐\",jO=\"⫯\",qO=\"⧂\",UO=\"∲\",VO=\"”\",GO=\"’\",XO=\"♣\",KO=\"♣\",JO=\":\",YO=\"∷\",ZO=\"⩴\",QO=\"≔\",eR=\"≔\",tR=\",\",nR=\"@\",rR=\"∁\",iR=\"∘\",oR=\"∁\",sR=\"ℂ\",lR=\"≅\",aR=\"⩭\",cR=\"≡\",uR=\"∮\",fR=\"∯\",dR=\"∮\",hR=\"𝕔\",pR=\"ℂ\",gR=\"∐\",mR=\"∐\",vR=\"©\",yR=\"©\",bR=\"℗\",wR=\"∳\",xR=\"↵\",SR=\"✗\",_R=\"⨯\",kR=\"𝒞\",TR=\"𝒸\",CR=\"⫏\",ER=\"⫑\",AR=\"⫐\",LR=\"⫒\",$R=\"⋯\",MR=\"⤸\",NR=\"⤵\",IR=\"⋞\",PR=\"⋟\",OR=\"↶\",RR=\"⤽\",zR=\"⩈\",DR=\"⩆\",FR=\"≍\",HR=\"∪\",BR=\"⋓\",WR=\"⩊\",jR=\"⊍\",qR=\"⩅\",UR=\"∪︀\",VR=\"↷\",GR=\"⤼\",XR=\"⋞\",KR=\"⋟\",JR=\"⋎\",YR=\"⋏\",ZR=\"¤\",QR=\"↶\",ez=\"↷\",tz=\"⋎\",nz=\"⋏\",rz=\"∲\",iz=\"∱\",oz=\"⌭\",sz=\"†\",lz=\"‡\",az=\"ℸ\",cz=\"↓\",uz=\"↡\",fz=\"⇓\",dz=\"‐\",hz=\"⫤\",pz=\"⊣\",gz=\"⤏\",mz=\"˝\",vz=\"Ď\",yz=\"ď\",bz=\"Д\",wz=\"д\",xz=\"‡\",Sz=\"⇊\",_z=\"ⅅ\",kz=\"ⅆ\",Tz=\"⤑\",Cz=\"⩷\",Ez=\"°\",Az=\"∇\",Lz=\"Δ\",$z=\"δ\",Mz=\"⦱\",Nz=\"⥿\",Iz=\"𝔇\",Pz=\"𝔡\",Oz=\"⥥\",Rz=\"⇃\",zz=\"⇂\",Dz=\"´\",Fz=\"˙\",Hz=\"˝\",Bz=\"`\",Wz=\"˜\",jz=\"⋄\",qz=\"⋄\",Uz=\"⋄\",Vz=\"♦\",Gz=\"♦\",Xz=\"¨\",Kz=\"ⅆ\",Jz=\"ϝ\",Yz=\"⋲\",Zz=\"÷\",Qz=\"÷\",eD=\"⋇\",tD=\"⋇\",nD=\"Ђ\",rD=\"ђ\",iD=\"⌞\",oD=\"⌍\",sD=\"$\",lD=\"𝔻\",aD=\"𝕕\",cD=\"¨\",uD=\"˙\",fD=\"⃜\",dD=\"≐\",hD=\"≑\",pD=\"≐\",gD=\"∸\",mD=\"∔\",vD=\"⊡\",yD=\"⌆\",bD=\"∯\",wD=\"¨\",xD=\"⇓\",SD=\"⇐\",_D=\"⇔\",kD=\"⫤\",TD=\"⟸\",CD=\"⟺\",ED=\"⟹\",AD=\"⇒\",LD=\"⊨\",$D=\"⇑\",MD=\"⇕\",ND=\"∥\",ID=\"⤓\",PD=\"↓\",OD=\"↓\",RD=\"⇓\",zD=\"⇵\",DD=\"̑\",FD=\"⇊\",HD=\"⇃\",BD=\"⇂\",WD=\"⥐\",jD=\"⥞\",qD=\"⥖\",UD=\"↽\",VD=\"⥟\",GD=\"⥗\",XD=\"⇁\",KD=\"↧\",JD=\"⊤\",YD=\"⤐\",ZD=\"⌟\",QD=\"⌌\",eF=\"𝒟\",tF=\"𝒹\",nF=\"Ѕ\",rF=\"ѕ\",iF=\"⧶\",oF=\"Đ\",sF=\"đ\",lF=\"⋱\",aF=\"▿\",cF=\"▾\",uF=\"⇵\",fF=\"⥯\",dF=\"⦦\",hF=\"Џ\",pF=\"џ\",gF=\"⟿\",mF=\"É\",vF=\"é\",yF=\"⩮\",bF=\"Ě\",wF=\"ě\",xF=\"Ê\",SF=\"ê\",_F=\"≖\",kF=\"≕\",TF=\"Э\",CF=\"э\",EF=\"⩷\",AF=\"Ė\",LF=\"ė\",$F=\"≑\",MF=\"ⅇ\",NF=\"≒\",IF=\"𝔈\",PF=\"𝔢\",OF=\"⪚\",RF=\"È\",zF=\"è\",DF=\"⪖\",FF=\"⪘\",HF=\"⪙\",BF=\"∈\",WF=\"⏧\",jF=\"ℓ\",qF=\"⪕\",UF=\"⪗\",VF=\"Ē\",GF=\"ē\",XF=\"∅\",KF=\"∅\",JF=\"◻\",YF=\"∅\",ZF=\"▫\",QF=\" \",e3=\" \",t3=\" \",n3=\"Ŋ\",r3=\"ŋ\",i3=\" \",o3=\"Ę\",s3=\"ę\",l3=\"𝔼\",a3=\"𝕖\",c3=\"⋕\",u3=\"⧣\",f3=\"⩱\",d3=\"ε\",h3=\"Ε\",p3=\"ε\",g3=\"ϵ\",m3=\"≖\",v3=\"≕\",y3=\"≂\",b3=\"⪖\",w3=\"⪕\",x3=\"⩵\",S3=\"=\",_3=\"≂\",k3=\"≟\",T3=\"⇌\",C3=\"≡\",E3=\"⩸\",A3=\"⧥\",L3=\"⥱\",$3=\"≓\",M3=\"ℯ\",N3=\"ℰ\",I3=\"≐\",P3=\"⩳\",O3=\"≂\",R3=\"Η\",z3=\"η\",D3=\"Ð\",F3=\"ð\",H3=\"Ë\",B3=\"ë\",W3=\"€\",j3=\"!\",q3=\"∃\",U3=\"∃\",V3=\"ℰ\",G3=\"ⅇ\",X3=\"ⅇ\",K3=\"≒\",J3=\"Ф\",Y3=\"ф\",Z3=\"♀\",Q3=\"ﬃ\",eH=\"ﬀ\",tH=\"ﬄ\",nH=\"𝔉\",rH=\"𝔣\",iH=\"ﬁ\",oH=\"◼\",sH=\"▪\",lH=\"fj\",aH=\"♭\",cH=\"ﬂ\",uH=\"▱\",fH=\"ƒ\",dH=\"𝔽\",hH=\"𝕗\",pH=\"∀\",gH=\"∀\",mH=\"⋔\",vH=\"⫙\",yH=\"ℱ\",bH=\"⨍\",wH=\"½\",xH=\"⅓\",SH=\"¼\",_H=\"⅕\",kH=\"⅙\",TH=\"⅛\",CH=\"⅔\",EH=\"⅖\",AH=\"¾\",LH=\"⅗\",$H=\"⅜\",MH=\"⅘\",NH=\"⅚\",IH=\"⅝\",PH=\"⅞\",OH=\"⁄\",RH=\"⌢\",zH=\"𝒻\",DH=\"ℱ\",FH=\"ǵ\",HH=\"Γ\",BH=\"γ\",WH=\"Ϝ\",jH=\"ϝ\",qH=\"⪆\",UH=\"Ğ\",VH=\"ğ\",GH=\"Ģ\",XH=\"Ĝ\",KH=\"ĝ\",JH=\"Г\",YH=\"г\",ZH=\"Ġ\",QH=\"ġ\",eB=\"≥\",tB=\"≧\",nB=\"⪌\",rB=\"⋛\",iB=\"≥\",oB=\"≧\",sB=\"⩾\",lB=\"⪩\",aB=\"⩾\",cB=\"⪀\",uB=\"⪂\",fB=\"⪄\",dB=\"⋛︀\",hB=\"⪔\",pB=\"𝔊\",gB=\"𝔤\",mB=\"≫\",vB=\"⋙\",yB=\"⋙\",bB=\"ℷ\",wB=\"Ѓ\",xB=\"ѓ\",SB=\"⪥\",_B=\"≷\",kB=\"⪒\",TB=\"⪤\",CB=\"⪊\",EB=\"⪊\",AB=\"⪈\",LB=\"≩\",$B=\"⪈\",MB=\"≩\",NB=\"⋧\",IB=\"𝔾\",PB=\"𝕘\",OB=\"`\",RB=\"≥\",zB=\"⋛\",DB=\"≧\",FB=\"⪢\",HB=\"≷\",BB=\"⩾\",WB=\"≳\",jB=\"𝒢\",qB=\"ℊ\",UB=\"≳\",VB=\"⪎\",GB=\"⪐\",XB=\"⪧\",KB=\"⩺\",JB=\">\",YB=\">\",ZB=\"≫\",QB=\"⋗\",e5=\"⦕\",t5=\"⩼\",n5=\"⪆\",r5=\"⥸\",i5=\"⋗\",o5=\"⋛\",s5=\"⪌\",l5=\"≷\",a5=\"≳\",c5=\"≩︀\",u5=\"≩︀\",f5=\"ˇ\",d5=\" \",h5=\"½\",p5=\"ℋ\",g5=\"Ъ\",m5=\"ъ\",v5=\"⥈\",y5=\"↔\",b5=\"⇔\",w5=\"↭\",x5=\"^\",S5=\"ℏ\",_5=\"Ĥ\",k5=\"ĥ\",T5=\"♥\",C5=\"♥\",E5=\"…\",A5=\"⊹\",L5=\"𝔥\",$5=\"ℌ\",M5=\"ℋ\",N5=\"⤥\",I5=\"⤦\",P5=\"⇿\",O5=\"∻\",R5=\"↩\",z5=\"↪\",D5=\"𝕙\",F5=\"ℍ\",H5=\"―\",B5=\"─\",W5=\"𝒽\",j5=\"ℋ\",q5=\"ℏ\",U5=\"Ħ\",V5=\"ħ\",G5=\"≎\",X5=\"≏\",K5=\"⁃\",J5=\"‐\",Y5=\"Í\",Z5=\"í\",Q5=\"⁣\",e4=\"Î\",t4=\"î\",n4=\"И\",r4=\"и\",i4=\"İ\",o4=\"Е\",s4=\"е\",l4=\"¡\",a4=\"⇔\",c4=\"𝔦\",u4=\"ℑ\",f4=\"Ì\",d4=\"ì\",h4=\"ⅈ\",p4=\"⨌\",g4=\"∭\",m4=\"⧜\",v4=\"℩\",y4=\"Ĳ\",b4=\"ĳ\",w4=\"Ī\",x4=\"ī\",S4=\"ℑ\",_4=\"ⅈ\",k4=\"ℐ\",T4=\"ℑ\",C4=\"ı\",E4=\"ℑ\",A4=\"⊷\",L4=\"Ƶ\",$4=\"⇒\",M4=\"℅\",N4=\"∞\",I4=\"⧝\",P4=\"ı\",O4=\"⊺\",R4=\"∫\",z4=\"∬\",D4=\"ℤ\",F4=\"∫\",H4=\"⊺\",B4=\"⋂\",W4=\"⨗\",j4=\"⨼\",q4=\"⁣\",U4=\"⁢\",V4=\"Ё\",G4=\"ё\",X4=\"Į\",K4=\"į\",J4=\"𝕀\",Y4=\"𝕚\",Z4=\"Ι\",Q4=\"ι\",e8=\"⨼\",t8=\"¿\",n8=\"𝒾\",r8=\"ℐ\",i8=\"∈\",o8=\"⋵\",s8=\"⋹\",l8=\"⋴\",a8=\"⋳\",c8=\"∈\",u8=\"⁢\",f8=\"Ĩ\",d8=\"ĩ\",h8=\"І\",p8=\"і\",g8=\"Ï\",m8=\"ï\",v8=\"Ĵ\",y8=\"ĵ\",b8=\"Й\",w8=\"й\",x8=\"𝔍\",S8=\"𝔧\",_8=\"ȷ\",k8=\"𝕁\",T8=\"𝕛\",C8=\"𝒥\",E8=\"𝒿\",A8=\"Ј\",L8=\"ј\",$8=\"Є\",M8=\"є\",N8=\"Κ\",I8=\"κ\",P8=\"ϰ\",O8=\"Ķ\",R8=\"ķ\",z8=\"К\",D8=\"к\",F8=\"𝔎\",H8=\"𝔨\",B8=\"ĸ\",W8=\"Х\",j8=\"х\",q8=\"Ќ\",U8=\"ќ\",V8=\"𝕂\",G8=\"𝕜\",X8=\"𝒦\",K8=\"𝓀\",J8=\"⇚\",Y8=\"Ĺ\",Z8=\"ĺ\",Q8=\"⦴\",eW=\"ℒ\",tW=\"Λ\",nW=\"λ\",rW=\"⟨\",iW=\"⟪\",oW=\"⦑\",sW=\"⟨\",lW=\"⪅\",aW=\"ℒ\",cW=\"«\",uW=\"⇤\",fW=\"⤟\",dW=\"←\",hW=\"↞\",pW=\"⇐\",gW=\"⤝\",mW=\"↩\",vW=\"↫\",yW=\"⤹\",bW=\"⥳\",wW=\"↢\",xW=\"⤙\",SW=\"⤛\",_W=\"⪫\",kW=\"⪭\",TW=\"⪭︀\",CW=\"⤌\",EW=\"⤎\",AW=\"❲\",LW=\"{\",$W=\"[\",MW=\"⦋\",NW=\"⦏\",IW=\"⦍\",PW=\"Ľ\",OW=\"ľ\",RW=\"Ļ\",zW=\"ļ\",DW=\"⌈\",FW=\"{\",HW=\"Л\",BW=\"л\",WW=\"⤶\",jW=\"“\",qW=\"„\",UW=\"⥧\",VW=\"⥋\",GW=\"↲\",XW=\"≤\",KW=\"≦\",JW=\"⟨\",YW=\"⇤\",ZW=\"←\",QW=\"←\",ej=\"⇐\",tj=\"⇆\",nj=\"↢\",rj=\"⌈\",ij=\"⟦\",oj=\"⥡\",sj=\"⥙\",lj=\"⇃\",aj=\"⌊\",cj=\"↽\",uj=\"↼\",fj=\"⇇\",dj=\"↔\",hj=\"↔\",pj=\"⇔\",gj=\"⇆\",mj=\"⇋\",vj=\"↭\",yj=\"⥎\",bj=\"↤\",wj=\"⊣\",xj=\"⥚\",Sj=\"⋋\",_j=\"⧏\",kj=\"⊲\",Tj=\"⊴\",Cj=\"⥑\",Ej=\"⥠\",Aj=\"⥘\",Lj=\"↿\",$j=\"⥒\",Mj=\"↼\",Nj=\"⪋\",Ij=\"⋚\",Pj=\"≤\",Oj=\"≦\",Rj=\"⩽\",zj=\"⪨\",Dj=\"⩽\",Fj=\"⩿\",Hj=\"⪁\",Bj=\"⪃\",Wj=\"⋚︀\",jj=\"⪓\",qj=\"⪅\",Uj=\"⋖\",Vj=\"⋚\",Gj=\"⪋\",Xj=\"⋚\",Kj=\"≦\",Jj=\"≶\",Yj=\"≶\",Zj=\"⪡\",Qj=\"≲\",eq=\"⩽\",tq=\"≲\",nq=\"⥼\",rq=\"⌊\",iq=\"𝔏\",oq=\"𝔩\",sq=\"≶\",lq=\"⪑\",aq=\"⥢\",cq=\"↽\",uq=\"↼\",fq=\"⥪\",dq=\"▄\",hq=\"Љ\",pq=\"љ\",gq=\"⇇\",mq=\"≪\",vq=\"⋘\",yq=\"⌞\",bq=\"⇚\",wq=\"⥫\",xq=\"◺\",Sq=\"Ŀ\",_q=\"ŀ\",kq=\"⎰\",Tq=\"⎰\",Cq=\"⪉\",Eq=\"⪉\",Aq=\"⪇\",Lq=\"≨\",$q=\"⪇\",Mq=\"≨\",Nq=\"⋦\",Iq=\"⟬\",Pq=\"⇽\",Oq=\"⟦\",Rq=\"⟵\",zq=\"⟵\",Dq=\"⟸\",Fq=\"⟷\",Hq=\"⟷\",Bq=\"⟺\",Wq=\"⟼\",jq=\"⟶\",qq=\"⟶\",Uq=\"⟹\",Vq=\"↫\",Gq=\"↬\",Xq=\"⦅\",Kq=\"𝕃\",Jq=\"𝕝\",Yq=\"⨭\",Zq=\"⨴\",Qq=\"∗\",e6=\"_\",t6=\"↙\",n6=\"↘\",r6=\"◊\",i6=\"◊\",o6=\"⧫\",s6=\"(\",l6=\"⦓\",a6=\"⇆\",c6=\"⌟\",u6=\"⇋\",f6=\"⥭\",d6=\"‎\",h6=\"⊿\",p6=\"‹\",g6=\"𝓁\",m6=\"ℒ\",v6=\"↰\",y6=\"↰\",b6=\"≲\",w6=\"⪍\",x6=\"⪏\",S6=\"[\",_6=\"‘\",k6=\"‚\",T6=\"Ł\",C6=\"ł\",E6=\"⪦\",A6=\"⩹\",L6=\"<\",$6=\"<\",M6=\"≪\",N6=\"⋖\",I6=\"⋋\",P6=\"⋉\",O6=\"⥶\",R6=\"⩻\",z6=\"◃\",D6=\"⊴\",F6=\"◂\",H6=\"⦖\",B6=\"⥊\",W6=\"⥦\",j6=\"≨︀\",q6=\"≨︀\",U6=\"¯\",V6=\"♂\",G6=\"✠\",X6=\"✠\",K6=\"↦\",J6=\"↦\",Y6=\"↧\",Z6=\"↤\",Q6=\"↥\",eU=\"▮\",tU=\"⨩\",nU=\"М\",rU=\"м\",iU=\"—\",oU=\"∺\",sU=\"∡\",lU=\" \",aU=\"ℳ\",cU=\"𝔐\",uU=\"𝔪\",fU=\"℧\",dU=\"µ\",hU=\"*\",pU=\"⫰\",gU=\"∣\",mU=\"·\",vU=\"⊟\",yU=\"−\",bU=\"∸\",wU=\"⨪\",xU=\"∓\",SU=\"⫛\",_U=\"…\",kU=\"∓\",TU=\"⊧\",CU=\"𝕄\",EU=\"𝕞\",AU=\"∓\",LU=\"𝓂\",$U=\"ℳ\",MU=\"∾\",NU=\"Μ\",IU=\"μ\",PU=\"⊸\",OU=\"⊸\",RU=\"∇\",zU=\"Ń\",DU=\"ń\",FU=\"∠⃒\",HU=\"≉\",BU=\"⩰̸\",WU=\"≋̸\",jU=\"ŉ\",qU=\"≉\",UU=\"♮\",VU=\"ℕ\",GU=\"♮\",XU=\" \",KU=\"≎̸\",JU=\"≏̸\",YU=\"⩃\",ZU=\"Ň\",QU=\"ň\",e9=\"Ņ\",t9=\"ņ\",n9=\"≇\",r9=\"⩭̸\",i9=\"⩂\",o9=\"Н\",s9=\"н\",l9=\"–\",a9=\"⤤\",c9=\"↗\",u9=\"⇗\",f9=\"↗\",d9=\"≠\",h9=\"≐̸\",p9=\"​\",g9=\"​\",m9=\"​\",v9=\"​\",y9=\"≢\",b9=\"⤨\",w9=\"≂̸\",x9=\"≫\",S9=\"≪\",_9=`\n`,k9=\"∄\",T9=\"∄\",C9=\"𝔑\",E9=\"𝔫\",A9=\"≧̸\",L9=\"≱\",$9=\"≱\",M9=\"≧̸\",N9=\"⩾̸\",I9=\"⩾̸\",P9=\"⋙̸\",O9=\"≵\",R9=\"≫⃒\",z9=\"≯\",D9=\"≯\",F9=\"≫̸\",H9=\"↮\",B9=\"⇎\",W9=\"⫲\",j9=\"∋\",q9=\"⋼\",U9=\"⋺\",V9=\"∋\",G9=\"Њ\",X9=\"њ\",K9=\"↚\",J9=\"⇍\",Y9=\"‥\",Z9=\"≦̸\",Q9=\"≰\",eV=\"↚\",tV=\"⇍\",nV=\"↮\",rV=\"⇎\",iV=\"≰\",oV=\"≦̸\",sV=\"⩽̸\",lV=\"⩽̸\",aV=\"≮\",cV=\"⋘̸\",uV=\"≴\",fV=\"≪⃒\",dV=\"≮\",hV=\"⋪\",pV=\"⋬\",gV=\"≪̸\",mV=\"∤\",vV=\"⁠\",yV=\" \",bV=\"𝕟\",wV=\"ℕ\",xV=\"⫬\",SV=\"¬\",_V=\"≢\",kV=\"≭\",TV=\"∦\",CV=\"∉\",EV=\"≠\",AV=\"≂̸\",LV=\"∄\",$V=\"≯\",MV=\"≱\",NV=\"≧̸\",IV=\"≫̸\",PV=\"≹\",OV=\"⩾̸\",RV=\"≵\",zV=\"≎̸\",DV=\"≏̸\",FV=\"∉\",HV=\"⋵̸\",BV=\"⋹̸\",WV=\"∉\",jV=\"⋷\",qV=\"⋶\",UV=\"⧏̸\",VV=\"⋪\",GV=\"⋬\",XV=\"≮\",KV=\"≰\",JV=\"≸\",YV=\"≪̸\",ZV=\"⩽̸\",QV=\"≴\",eG=\"⪢̸\",tG=\"⪡̸\",nG=\"∌\",rG=\"∌\",iG=\"⋾\",oG=\"⋽\",sG=\"⊀\",lG=\"⪯̸\",aG=\"⋠\",cG=\"∌\",uG=\"⧐̸\",fG=\"⋫\",dG=\"⋭\",hG=\"⊏̸\",pG=\"⋢\",gG=\"⊐̸\",mG=\"⋣\",vG=\"⊂⃒\",yG=\"⊈\",bG=\"⊁\",wG=\"⪰̸\",xG=\"⋡\",SG=\"≿̸\",_G=\"⊃⃒\",kG=\"⊉\",TG=\"≁\",CG=\"≄\",EG=\"≇\",AG=\"≉\",LG=\"∤\",$G=\"∦\",MG=\"∦\",NG=\"⫽⃥\",IG=\"∂̸\",PG=\"⨔\",OG=\"⊀\",RG=\"⋠\",zG=\"⊀\",DG=\"⪯̸\",FG=\"⪯̸\",HG=\"⤳̸\",BG=\"↛\",WG=\"⇏\",jG=\"↝̸\",qG=\"↛\",UG=\"⇏\",VG=\"⋫\",GG=\"⋭\",XG=\"⊁\",KG=\"⋡\",JG=\"⪰̸\",YG=\"𝒩\",ZG=\"𝓃\",QG=\"∤\",e7=\"∦\",t7=\"≁\",n7=\"≄\",r7=\"≄\",i7=\"∤\",o7=\"∦\",s7=\"⋢\",l7=\"⋣\",a7=\"⊄\",c7=\"⫅̸\",u7=\"⊈\",f7=\"⊂⃒\",d7=\"⊈\",h7=\"⫅̸\",p7=\"⊁\",g7=\"⪰̸\",m7=\"⊅\",v7=\"⫆̸\",y7=\"⊉\",b7=\"⊃⃒\",w7=\"⊉\",x7=\"⫆̸\",S7=\"≹\",_7=\"Ñ\",k7=\"ñ\",T7=\"≸\",C7=\"⋪\",E7=\"⋬\",A7=\"⋫\",L7=\"⋭\",$7=\"Ν\",M7=\"ν\",N7=\"#\",I7=\"№\",P7=\" \",O7=\"≍⃒\",R7=\"⊬\",z7=\"⊭\",D7=\"⊮\",F7=\"⊯\",H7=\"≥⃒\",B7=\">⃒\",W7=\"⤄\",j7=\"⧞\",q7=\"⤂\",U7=\"≤⃒\",V7=\"<⃒\",G7=\"⊴⃒\",X7=\"⤃\",K7=\"⊵⃒\",J7=\"∼⃒\",Y7=\"⤣\",Z7=\"↖\",Q7=\"⇖\",eX=\"↖\",tX=\"⤧\",nX=\"Ó\",rX=\"ó\",iX=\"⊛\",oX=\"Ô\",sX=\"ô\",lX=\"⊚\",aX=\"О\",cX=\"о\",uX=\"⊝\",fX=\"Ő\",dX=\"ő\",hX=\"⨸\",pX=\"⊙\",gX=\"⦼\",mX=\"Œ\",vX=\"œ\",yX=\"⦿\",bX=\"𝔒\",wX=\"𝔬\",xX=\"˛\",SX=\"Ò\",_X=\"ò\",kX=\"⧁\",TX=\"⦵\",CX=\"Ω\",EX=\"∮\",AX=\"↺\",LX=\"⦾\",$X=\"⦻\",MX=\"‾\",NX=\"⧀\",IX=\"Ō\",PX=\"ō\",OX=\"Ω\",RX=\"ω\",zX=\"Ο\",DX=\"ο\",FX=\"⦶\",HX=\"⊖\",BX=\"𝕆\",WX=\"𝕠\",jX=\"⦷\",qX=\"“\",UX=\"‘\",VX=\"⦹\",GX=\"⊕\",XX=\"↻\",KX=\"⩔\",JX=\"∨\",YX=\"⩝\",ZX=\"ℴ\",QX=\"ℴ\",eK=\"ª\",tK=\"º\",nK=\"⊶\",rK=\"⩖\",iK=\"⩗\",oK=\"⩛\",sK=\"Ⓢ\",lK=\"𝒪\",aK=\"ℴ\",cK=\"Ø\",uK=\"ø\",fK=\"⊘\",dK=\"Õ\",hK=\"õ\",pK=\"⨶\",gK=\"⨷\",mK=\"⊗\",vK=\"Ö\",yK=\"ö\",bK=\"⌽\",wK=\"‾\",xK=\"⏞\",SK=\"⎴\",_K=\"⏜\",kK=\"¶\",TK=\"∥\",CK=\"∥\",EK=\"⫳\",AK=\"⫽\",LK=\"∂\",$K=\"∂\",MK=\"П\",NK=\"п\",IK=\"%\",PK=\".\",OK=\"‰\",RK=\"⊥\",zK=\"‱\",DK=\"𝔓\",FK=\"𝔭\",HK=\"Φ\",BK=\"φ\",WK=\"ϕ\",jK=\"ℳ\",qK=\"☎\",UK=\"Π\",VK=\"π\",GK=\"⋔\",XK=\"ϖ\",KK=\"ℏ\",JK=\"ℎ\",YK=\"ℏ\",ZK=\"⨣\",QK=\"⊞\",eJ=\"⨢\",tJ=\"+\",nJ=\"∔\",rJ=\"⨥\",iJ=\"⩲\",oJ=\"±\",sJ=\"±\",lJ=\"⨦\",aJ=\"⨧\",cJ=\"±\",uJ=\"ℌ\",fJ=\"⨕\",dJ=\"𝕡\",hJ=\"ℙ\",pJ=\"£\",gJ=\"⪷\",mJ=\"⪻\",vJ=\"≺\",yJ=\"≼\",bJ=\"⪷\",wJ=\"≺\",xJ=\"≼\",SJ=\"≺\",_J=\"⪯\",kJ=\"≼\",TJ=\"≾\",CJ=\"⪯\",EJ=\"⪹\",AJ=\"⪵\",LJ=\"⋨\",$J=\"⪯\",MJ=\"⪳\",NJ=\"≾\",IJ=\"′\",PJ=\"″\",OJ=\"ℙ\",RJ=\"⪹\",zJ=\"⪵\",DJ=\"⋨\",FJ=\"∏\",HJ=\"∏\",BJ=\"⌮\",WJ=\"⌒\",jJ=\"⌓\",qJ=\"∝\",UJ=\"∝\",VJ=\"∷\",GJ=\"∝\",XJ=\"≾\",KJ=\"⊰\",JJ=\"𝒫\",YJ=\"𝓅\",ZJ=\"Ψ\",QJ=\"ψ\",eY=\" \",tY=\"𝔔\",nY=\"𝔮\",rY=\"⨌\",iY=\"𝕢\",oY=\"ℚ\",sY=\"⁗\",lY=\"𝒬\",aY=\"𝓆\",cY=\"ℍ\",uY=\"⨖\",fY=\"?\",dY=\"≟\",hY='\"',pY='\"',gY=\"⇛\",mY=\"∽̱\",vY=\"Ŕ\",yY=\"ŕ\",bY=\"√\",wY=\"⦳\",xY=\"⟩\",SY=\"⟫\",_Y=\"⦒\",kY=\"⦥\",TY=\"⟩\",CY=\"»\",EY=\"⥵\",AY=\"⇥\",LY=\"⤠\",$Y=\"⤳\",MY=\"→\",NY=\"↠\",IY=\"⇒\",PY=\"⤞\",OY=\"↪\",RY=\"↬\",zY=\"⥅\",DY=\"⥴\",FY=\"⤖\",HY=\"↣\",BY=\"↝\",WY=\"⤚\",jY=\"⤜\",qY=\"∶\",UY=\"ℚ\",VY=\"⤍\",GY=\"⤏\",XY=\"⤐\",KY=\"❳\",JY=\"}\",YY=\"]\",ZY=\"⦌\",QY=\"⦎\",eZ=\"⦐\",tZ=\"Ř\",nZ=\"ř\",rZ=\"Ŗ\",iZ=\"ŗ\",oZ=\"⌉\",sZ=\"}\",lZ=\"Р\",aZ=\"р\",cZ=\"⤷\",uZ=\"⥩\",fZ=\"”\",dZ=\"”\",hZ=\"↳\",pZ=\"ℜ\",gZ=\"ℛ\",mZ=\"ℜ\",vZ=\"ℝ\",yZ=\"ℜ\",bZ=\"▭\",wZ=\"®\",xZ=\"®\",SZ=\"∋\",_Z=\"⇋\",kZ=\"⥯\",TZ=\"⥽\",CZ=\"⌋\",EZ=\"𝔯\",AZ=\"ℜ\",LZ=\"⥤\",$Z=\"⇁\",MZ=\"⇀\",NZ=\"⥬\",IZ=\"Ρ\",PZ=\"ρ\",OZ=\"ϱ\",RZ=\"⟩\",zZ=\"⇥\",DZ=\"→\",FZ=\"→\",HZ=\"⇒\",BZ=\"⇄\",WZ=\"↣\",jZ=\"⌉\",qZ=\"⟧\",UZ=\"⥝\",VZ=\"⥕\",GZ=\"⇂\",XZ=\"⌋\",KZ=\"⇁\",JZ=\"⇀\",YZ=\"⇄\",ZZ=\"⇌\",QZ=\"⇉\",eQ=\"↝\",tQ=\"↦\",nQ=\"⊢\",rQ=\"⥛\",iQ=\"⋌\",oQ=\"⧐\",sQ=\"⊳\",lQ=\"⊵\",aQ=\"⥏\",cQ=\"⥜\",uQ=\"⥔\",fQ=\"↾\",dQ=\"⥓\",hQ=\"⇀\",pQ=\"˚\",gQ=\"≓\",mQ=\"⇄\",vQ=\"⇌\",yQ=\"‏\",bQ=\"⎱\",wQ=\"⎱\",xQ=\"⫮\",SQ=\"⟭\",_Q=\"⇾\",kQ=\"⟧\",TQ=\"⦆\",CQ=\"𝕣\",EQ=\"ℝ\",AQ=\"⨮\",LQ=\"⨵\",$Q=\"⥰\",MQ=\")\",NQ=\"⦔\",IQ=\"⨒\",PQ=\"⇉\",OQ=\"⇛\",RQ=\"›\",zQ=\"𝓇\",DQ=\"ℛ\",FQ=\"↱\",HQ=\"↱\",BQ=\"]\",WQ=\"’\",jQ=\"’\",qQ=\"⋌\",UQ=\"⋊\",VQ=\"▹\",GQ=\"⊵\",XQ=\"▸\",KQ=\"⧎\",JQ=\"⧴\",YQ=\"⥨\",ZQ=\"℞\",QQ=\"Ś\",eee=\"ś\",tee=\"‚\",nee=\"⪸\",ree=\"Š\",iee=\"š\",oee=\"⪼\",see=\"≻\",lee=\"≽\",aee=\"⪰\",cee=\"⪴\",uee=\"Ş\",fee=\"ş\",dee=\"Ŝ\",hee=\"ŝ\",pee=\"⪺\",gee=\"⪶\",mee=\"⋩\",vee=\"⨓\",yee=\"≿\",bee=\"С\",wee=\"с\",xee=\"⊡\",See=\"⋅\",_ee=\"⩦\",kee=\"⤥\",Tee=\"↘\",Cee=\"⇘\",Eee=\"↘\",Aee=\"§\",Lee=\";",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "db59029e35b2fb090f90efe97319b0b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L={id:h.id,file:h,name:h.name,level:0,type:\"suite\",mode:\"run\",meta:{},tasks:[],result:g};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "66e51b8916785408e0c83c95f114dc53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const I=p.value,S=I??{line:(C??1)-1,ch:P??0};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "7c385fdbe4cd73f4a30141a43bdbd1d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=document.createElement(\"pre\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c949d069060f114bc1268e06781915fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const S=async()=>{await Ip(K.file,K.line,K.column)};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "cee09f9b8df4f49bb77a411486c19d53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=document.createElement(\"div\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9f0dd43bd467ee9c9b454d0d8b4e6317",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const S=document.createElement(\"span\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1e20606c9fbee44d3a4a5e5335dac3d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const R=W.attachment;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "eabb56fdeb7ff3d008d55bfe6ea0d15d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=x1;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "74fa35e3a88c0a30f46d3e10ebb5a096",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D1=e=>()=>e;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "58b0b1ee09a0ddd4fab123168b7ffc1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K1={mergeArrays:!0};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1c585fc7f3c0a0bc604dbf49ca77b4dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q1={Arrow:e=>Xve(e)},Kve=(e,t,n)=>[t/2,n/2],Jve=(e,t,n)=>[My(0,t),My(0,n)];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "6756927e7f2fedd8e93d910cdb75563c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=w.append(\"circle\").classed(\"node\",!0).attr(\"r\",A=>yo(e,A)).on(\"contextmenu\",(A,E)=>{J1(A),i(E)}).on(\"pointerdown\",(A,E)=>k0e(A,E,s??i)).style(\"fill\",A=>A.color);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "66be2af5c65dd705387343833c4968d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const O=M.x-L,k=M.y-$;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "840db8d9523a4ee696870bbf6bda2533",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=h.value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5b98072e02b20ddf8c2c609eea2e73c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const E=_e(()=>{var z,D;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c963ad7df89a254b871d697f16b23bf8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=oS,te=ri,ee=O0e,W=bhe,q=yhe,K=dhe,C=ihe,P=Dr(\"tooltip\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c5df67e17344b3d3a51080a9c63a8669",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=u.value,E=[];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "64aee562a6ec2e14e801ff2962b57d19",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=uM.value,E=p.value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "ef26f89664190fb78f4fa32a4c5740bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=oS,O=Kye,k=ri,z=Dr(\"tooltip\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "82edd2ba1c0ab9a83ef534bd26f2a616",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=this.buffer;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f2c11f75b9550ee599efcc75635d27bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=this.$refs.after.scrollHeight;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c4f7452a88d401dbd072833527d0c5bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const P=$%i;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "743ed4c46bcc14fb45b2e77672dc66f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=z?null:new Map;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "5c26e0bf3e103e10f7ee07762d93f076",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const K=f?te[f]:te;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "0e7b5b543e8353fa23f234e65740e78f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const I=C.indexOf(k);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c59a8005b9c95c61bf3be838aaffc9f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=ie.target.closest(\".splitpanes__splitter\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "39c853a36b113d8feee21b5094d51eb9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=h.value.getBoundingClientRect(),{clientX:Q,clientY:J}=\"ontouchstart\"in window&&ie.touches?ie.touches[0]:ie;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "0a14e03b88e37a7a7948d69cf8f44379",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=h.value[i.horizontal?\"clientHeight\":\"clientWidth\"];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d79a1eb6a4f466876c098f2f7dac5126",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=g.value.activeSplitter;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2f984d689e2e72e34539033b042da365",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J=0+(i.pushOtherPanes?0:Q.prevPanesSize),ae=100-(i.pushOtherPanes?0:Q.nextPanesSize),ge=Math.max(Math.min(D(ie),ae),J);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d790a76f8018bb49a6718e206a13d7ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=g.value.activeSplitter,J=[Q,Q+1];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "497152cf734ab9d3ab35a6f9eb492965",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=U.classList.contains(\"splitpanes__pane\"),J=U.classList.contains(\"splitpanes__splitter\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "e9fe0bc2c4d7fa88e3360347d205a7b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J=ie-1,ae=document.createElement(\"div\");",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "888e3e4b4978053e4d103b2419f6f584",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=Array.from(((ie=h.value)==null?void 0:ie.children)||[]);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "19a6a1b69d5e5c2025d068f4234ae2c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=u.value[ie];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c4f84299372e74080748d5b8fcf3fb7f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=l.value.findIndex(J=>J.id===ie),Q=l.value.splice(U,1)[0];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f71c55468b37da83be2b50788a156deb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=[],J=[];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d4f50a6e3be90a5d13d449f763fadd2e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const U=[],Q=[];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "449ae8e405585029e6781fc7175f7700",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=isNaN(n.size)||n.size===void 0?0:parseFloat(n.size);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "666940d6bbf62e28ec569388b6bbb117",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=parseFloat(n.minSize);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "8fc7df28c30ee7357b3bbce20a7ec263",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=parseFloat(n.maxSize);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "6cd99d849b21fa7d2e240e96a8c39ae6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=s.indexOf(y);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "c2dfdc0e126e4430f7239a2166e36a43",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=E||By;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "f3baced1dfc12009a193840c349cbb69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const M=zr(E)?E.join(\"/\"):E;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1a3ed5d10e91c8b640f5d9acd8f80e13",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const L=!w,$=qy(v);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d5777582b314d9dad67792729a5e7d42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const A=Vy(t,v),E=[$];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "635d6bc7112f225b49cfae2683e66859",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=y.record.path,te=D[D.length-1]===\"/\"?\"\":\"/\";",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "dad4b88448f71a494795206f5094cffa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const D=$.children;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9f528ae2b34cb264dc97d9f53995a0ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=t.getRecordMatcher(U);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "02d49f965c61379b21450ffe2fb23d11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Y=Kd(n,U,Q.path),fe=t.resolve({path:Y.path},Q),pe=s.createHref(Y.fullPath);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "9c8fe6c37a4d5a472a5c89109efb0b1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Y=bt({},U.params);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b82bf6fc2836dd580ef7c79fa5f7b41b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const F=Swe(i,bt({},U,{hash:mwe(ge),path:ae.path})),V=s.createHref(F);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d7ea26730e89194ba5e8ca889023d2cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=U.matched[U.matched.length-1];",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b5ce3e82dc32ab75f7724e51f66ada0f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J=p=E(U),ae=h.value,ge=U.state,F=U.force,V=U.replace===!0,Y=D(J);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2227aa9d864f1adf62e24e32a899c21b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J=O(U,Q);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "d825caf05bd1b47a6297675ba10f5784",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=Ke.values().next().value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "7cbca3e9e158d41f2a31ab7b6c297ebc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const V=ee.bind(null,U,Q);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "2d772ea12378fef3a43f445dc635651a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const F=O(U,Q);",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "276df1afb48063e322d5ad06999b84ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const V=Q===Vi,Y=Ls?history.state:{};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1ea36d887af12bfa0c70006c200808c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const F=h.value;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "1830dd85921d4d9e644eea0f21e50386",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const F=!J&&Nwe(Dy(U.fullPath,0))||(ae||!J)&&history.state&&history.state.scroll||null;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "21f13488036d392eb1889af66ce3c211",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const Q=this;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "a7ea973900914e951c1f50f7f8af2786",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "sample": "const J={};",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "3d8d60b8278970171be7f621ee217349",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "sample": "const MINIMUM_COVERAGE = 90;",
        "recommendation": "Move to a shared constants file"
      },
      {
        "hash": "b6c88b21f6b6b51661aca24713247ff3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "sample": "const COVERAGE_THRESHOLDS = {\n  statements: MINIMUM_COVERAGE,\n  branches: 85, // Slightly lower for branches as per config\n  functions: MINIMUM_COVERAGE,\n  lines: MINIMUM_COVERAGE\n};",
        "recommendation": "Move to a shared constants file"
      }
    ],
    "codeBlocks": [
      {
        "hash": "264b82c7666b82d516d6a6bb849d5852",
        "severity": "critical",
        "occurrences": 45,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 243,
            "endLine": 247
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 297,
            "endLine": 301
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 364,
            "endLine": 368
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 396,
            "endLine": 400
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 435,
            "endLine": 439
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 460,
            "endLine": 464
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 511,
            "endLine": 515
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 527,
            "endLine": 531
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 539,
            "endLine": 543
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 577,
            "endLine": 581
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 578,
            "endLine": 582
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 592,
            "endLine": 596
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 602,
            "endLine": 606
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 613,
            "endLine": 617
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 628,
            "endLine": 632
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 653,
            "endLine": 657
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 654,
            "endLine": 658
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 671,
            "endLine": 675
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 672,
            "endLine": 676
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 717,
            "endLine": 721
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 718,
            "endLine": 722
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 741,
            "endLine": 745
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 742,
            "endLine": 746
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 764,
            "endLine": 768
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 765,
            "endLine": 769
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 887,
            "endLine": 891
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 903,
            "endLine": 907
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 398,
            "endLine": 402
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 399,
            "endLine": 403
          }
        ],
        "sample": "      // 1. Initialize engine\n      await act(async () => {\n        await result.current.initialize();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a459d31e1dd8e25a08f29baef520b6eb",
        "severity": "critical",
        "occurrences": 29,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 251,
            "endLine": 255
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 268,
            "endLine": 272
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 387,
            "endLine": 391
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 404,
            "endLine": 408
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 405,
            "endLine": 409
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 422,
            "endLine": 426
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 305,
            "endLine": 309
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 306,
            "endLine": 310
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 379,
            "endLine": 383
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 380,
            "endLine": 384
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 478,
            "endLine": 482
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 507,
            "endLine": 511
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 508,
            "endLine": 512
          }
        ],
        "sample": "      // Wait for initialization\n      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd448f167ad15bbfacc5630597191b89",
        "severity": "critical",
        "occurrences": 27,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 247,
            "endLine": 251
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 248,
            "endLine": 252
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 279,
            "endLine": 283
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 341,
            "endLine": 345
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 342,
            "endLine": 346
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 386,
            "endLine": 390
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 435,
            "endLine": 439
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 436,
            "endLine": 440
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 458,
            "endLine": 462
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 489,
            "endLine": 493
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 490,
            "endLine": 494
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 522,
            "endLine": 526
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 523,
            "endLine": 527
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 570,
            "endLine": 574
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 594,
            "endLine": 598
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 595,
            "endLine": 599
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 616,
            "endLine": 620
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 617,
            "endLine": 621
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 644,
            "endLine": 648
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 645,
            "endLine": 649
          }
        ],
        "sample": "      \n      await act(async () => {\n        await result.current.initializeAudioEngine();\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4eee782990194dfe07c68f95963451f4",
        "severity": "critical",
        "occurrences": 22,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 243,
            "endLine": 247
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 276,
            "endLine": 280
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 344,
            "endLine": 348
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 360,
            "endLine": 364
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 376,
            "endLine": 380
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 392,
            "endLine": 396
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 426,
            "endLine": 430
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 439,
            "endLine": 443
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 454,
            "endLine": 458
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 468,
            "endLine": 472
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 487,
            "endLine": 491
          }
        ],
        "sample": "      render(\n        <AdvancedMetricsPanel\n          isVisible={true}\n          diagnostics={diagnostics}\n          onClose={mockOnClose}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "152eb697d552906e586da499b42c843b",
        "severity": "critical",
        "occurrences": 22,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 195,
            "endLine": 199
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 345,
            "endLine": 349
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 377,
            "endLine": 381
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 393,
            "endLine": 397
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 427,
            "endLine": 431
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 440,
            "endLine": 444
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 455,
            "endLine": 459
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 469,
            "endLine": 473
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 488,
            "endLine": 492
          }
        ],
        "sample": "        <AdvancedMetricsPanel\n          isVisible={true}\n          diagnostics={diagnostics}\n          onClose={mockOnClose}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8a7ee73317196458879dda43f0a6285b",
        "severity": "critical",
        "occurrences": 22,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 211,
            "endLine": 215
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 245,
            "endLine": 249
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 329,
            "endLine": 333
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 346,
            "endLine": 350
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 394,
            "endLine": 398
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 428,
            "endLine": 432
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 441,
            "endLine": 445
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 456,
            "endLine": 460
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 470,
            "endLine": 474
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 489,
            "endLine": 493
          }
        ],
        "sample": "          isVisible={true}\n          diagnostics={diagnostics}\n          onClose={mockOnClose}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6d8845ae9c89312808d3a47ea13c9442",
        "severity": "critical",
        "occurrences": 21,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 271,
            "endLine": 275
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 363,
            "endLine": 367
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 434,
            "endLine": 438
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 459,
            "endLine": 463
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 510,
            "endLine": 514
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 526,
            "endLine": 530
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 538,
            "endLine": 542
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 576,
            "endLine": 580
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 591,
            "endLine": 595
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 601,
            "endLine": 605
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 612,
            "endLine": 616
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 627,
            "endLine": 631
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 652,
            "endLine": 656
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 740,
            "endLine": 744
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 763,
            "endLine": 767
          }
        ],
        "sample": "      const { result } = renderHook(() => useMurmubaraEngine());\n\n      await act(async () => {\n        await result.current.initialize();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ddb9c8a93cabe4d3404b73847cfdad43",
        "severity": "high",
        "occurrences": 20,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 204,
            "endLine": 208
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 235,
            "endLine": 239
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 236,
            "endLine": 240
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 364,
            "endLine": 368
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 365,
            "endLine": 369
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 474,
            "endLine": 478
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 509,
            "endLine": 513
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 538,
            "endLine": 542
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 539,
            "endLine": 543
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 633,
            "endLine": 637
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 634,
            "endLine": 638
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 657,
            "endLine": 661
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 658,
            "endLine": 662
          }
        ],
        "sample": "      // Trigger audio processing\n      act(() => {\n        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "500a16ac73896a220d876bcad37e8c6d",
        "severity": "high",
        "occurrences": 20,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 275,
            "endLine": 279
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 308,
            "endLine": 312
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 343,
            "endLine": 347
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 359,
            "endLine": 363
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 375,
            "endLine": 379
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 391,
            "endLine": 395
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 438,
            "endLine": 442
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 453,
            "endLine": 457
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 467,
            "endLine": 471
          }
        ],
        "sample": "      \n      render(\n        <AdvancedMetricsPanel\n          isVisible={true}\n          diagnostics={diagnostics}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3dffddd03fe0408dd05794106060585",
        "severity": "high",
        "occurrences": 20,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 227,
            "endLine": 231
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 246,
            "endLine": 250
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 279,
            "endLine": 283
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 312,
            "endLine": 316
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 347,
            "endLine": 351
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 363,
            "endLine": 367
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 379,
            "endLine": 383
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 442,
            "endLine": 446
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 457,
            "endLine": 461
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 471,
            "endLine": 475
          }
        ],
        "sample": "          diagnostics={diagnostics}\n          onClose={mockOnClose}\n        />\n      );\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c87e18426a37cfbdac0f0cf8e39258c5",
        "severity": "high",
        "occurrences": 18,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 243,
            "endLine": 247
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 281,
            "endLine": 285
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 332,
            "endLine": 336
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 377,
            "endLine": 381
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 398,
            "endLine": 402
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 421,
            "endLine": 425
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 456,
            "endLine": 460
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 475,
            "endLine": 479
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 500,
            "endLine": 504
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 517,
            "endLine": 521
          }
        ],
        "sample": "        ...mockSetters,\n        chunkManager: mockChunkManager,\n        recordingManager: mockRecordingManager,\n        initialize: mockInitialize\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1013be59a3de59c4303e9d58e35ab2f2",
        "severity": "high",
        "occurrences": 18,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 219,
            "endLine": 223
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 301,
            "endLine": 305
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 333,
            "endLine": 337
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 358,
            "endLine": 362
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 399,
            "endLine": 403
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 422,
            "endLine": 426
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 457,
            "endLine": 461
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 476,
            "endLine": 480
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 501,
            "endLine": 505
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 518,
            "endLine": 522
          }
        ],
        "sample": "        chunkManager: mockChunkManager,\n        recordingManager: mockRecordingManager,\n        initialize: mockInitialize\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b930352a88796b300eef65ff4d2b0df4",
        "severity": "high",
        "occurrences": 16,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 240,
            "endLine": 244
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 297,
            "endLine": 301
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 354,
            "endLine": 358
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 374,
            "endLine": 378
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 453,
            "endLine": 457
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 472,
            "endLine": 476
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 497,
            "endLine": 501
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 514,
            "endLine": 518
          }
        ],
        "sample": "        recordingStateHook: mockRecordingStateHook,\n        currentStream: null,\n        originalStream: null,\n        ...mockSetters,\n        chunkManager: mockChunkManager,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab5b0736045a79756de0fa56ed46f942",
        "severity": "high",
        "occurrences": 16,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 154,
            "endLine": 158
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 195,
            "endLine": 199
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 279,
            "endLine": 283
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 298,
            "endLine": 302
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 355,
            "endLine": 359
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 375,
            "endLine": 379
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 396,
            "endLine": 400
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 454,
            "endLine": 458
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 473,
            "endLine": 477
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 498,
            "endLine": 502
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 515,
            "endLine": 519
          }
        ],
        "sample": "        currentStream: null,\n        originalStream: null,\n        ...mockSetters,\n        chunkManager: mockChunkManager,\n        recordingManager: mockRecordingManager,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45f72079f95a6196c3763735b05c442b",
        "severity": "high",
        "occurrences": 16,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 155,
            "endLine": 159
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 172,
            "endLine": 176
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 299,
            "endLine": 303
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 376,
            "endLine": 380
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 397,
            "endLine": 401
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 455,
            "endLine": 459
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 474,
            "endLine": 478
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 499,
            "endLine": 503
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 516,
            "endLine": 520
          }
        ],
        "sample": "        originalStream: null,\n        ...mockSetters,\n        chunkManager: mockChunkManager,\n        recordingManager: mockRecordingManager,\n        initialize: mockInitialize...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a451649b3d20b832e335206f25ebfa96",
        "severity": "high",
        "occurrences": 16,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 253,
            "endLine": 257
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 288,
            "endLine": 292
          }
        ],
        "sample": "    \n    await act(async () => {\n      render(<TestEngineComponent />);\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3b9afd4e599e52d26759af471bb9b8a5",
        "severity": "high",
        "occurrences": 15,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 239,
            "endLine": 243
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 353,
            "endLine": 357
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 373,
            "endLine": 377
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 394,
            "endLine": 398
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 471,
            "endLine": 475
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 496,
            "endLine": 500
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 513,
            "endLine": 517
          }
        ],
        "sample": "        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,\n        currentStream: null,\n        originalStream: null,\n        ...mockSetters,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2a0f1a511a6ece7fe776ebdf3ce8de5b",
        "severity": "high",
        "occurrences": 15,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 246,
            "endLine": 250
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 340,
            "endLine": 344
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 385,
            "endLine": 389
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 434,
            "endLine": 438
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 457,
            "endLine": 461
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 488,
            "endLine": 492
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 521,
            "endLine": 525
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 569,
            "endLine": 573
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 593,
            "endLine": 597
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 615,
            "endLine": 619
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 643,
            "endLine": 647
          }
        ],
        "sample": "      const { result } = renderHook(() => useAudioEngine());\n      \n      await act(async () => {\n        await result.current.initializeAudioEngine();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e0a4400aa8340e56bfbab2050bc20991",
        "severity": "high",
        "occurrences": 13,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 641,
            "endLine": 645
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 359,
            "endLine": 363
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 469,
            "endLine": 473
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 504,
            "endLine": 508
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 533,
            "endLine": 537
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 628,
            "endLine": 632
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 652,
            "endLine": 656
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 716,
            "endLine": 720
          }
        ],
        "sample": "      \n      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuffer }\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "24dd13cbf6642c262612e61beee19f1c",
        "severity": "high",
        "occurrences": 13,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 642,
            "endLine": 646
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 360,
            "endLine": 364
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 470,
            "endLine": 474
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 505,
            "endLine": 509
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 534,
            "endLine": 538
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 629,
            "endLine": 633
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 653,
            "endLine": 657
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 717,
            "endLine": 721
          }
        ],
        "sample": "      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuffer }\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d6c3c42bc2dddf6c02e3a164fdad3693",
        "severity": "high",
        "occurrences": 13,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 237,
            "endLine": 241
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 275,
            "endLine": 279
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 371,
            "endLine": 375
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 392,
            "endLine": 396
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 469,
            "endLine": 473
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 494,
            "endLine": 498
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 511,
            "endLine": 515
          }
        ],
        "sample": "      const functions = createRecordingFunctions({\n        isInitialized: true,\n        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,\n        currentStream: n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed990a41d9a5b118a178f896cfbb2301",
        "severity": "high",
        "occurrences": 13,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 238,
            "endLine": 242
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 276,
            "endLine": 280
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 352,
            "endLine": 356
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 372,
            "endLine": 376
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 393,
            "endLine": 397
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 470,
            "endLine": 474
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 495,
            "endLine": 499
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 512,
            "endLine": 516
          }
        ],
        "sample": "        isInitialized: true,\n        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,\n        currentStream: null,\n        originalStream: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "63d71d3c64b6c0a970d1f25d0dec8ade",
        "severity": "high",
        "occurrences": 12,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 128,
            "endLine": 132
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 347,
            "endLine": 351
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 457,
            "endLine": 461
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 483,
            "endLine": 487
          }
        ],
        "sample": "      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={25}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae69e189d90aa925d95b859b20b85a75",
        "severity": "high",
        "occurrences": 12,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 232,
            "endLine": 236
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 250,
            "endLine": 254
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 403,
            "endLine": 407
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 421,
            "endLine": 425
          }
        ],
        "sample": "      const { result } = renderHook(() => useMurmubaraEngine({ autoInitialize: true }));\n      \n      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e076cdeef40f08079c9090c062022c57",
        "severity": "high",
        "occurrences": 11,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 274,
            "endLine": 278
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 307,
            "endLine": 311
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 342,
            "endLine": 346
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 358,
            "endLine": 362
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 374,
            "endLine": 378
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 390,
            "endLine": 394
          }
        ],
        "sample": "      });\n      \n      render(\n        <AdvancedMetricsPanel\n          isVisible={true}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e56c8f91b57e80d2b1933a29a01a118b",
        "severity": "high",
        "occurrences": 11,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 139,
            "endLine": 143
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 385,
            "endLine": 389
          }
        ],
        "sample": "      render(<AudioRecorder {...defaultProps} />);\n      \n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7733a4609cd62a0fbf95bcceda1314e1",
        "severity": "high",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 301,
            "endLine": 305
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 122,
            "endLine": 126
          }
        ],
        "sample": "        noiseReductionLevel: 0,\n        processingLatency: 0,\n        inputLevel: 0,\n        outputLevel: 0,\n        timestamp: Date.now(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3538c4af7776955972e711b611240969",
        "severity": "high",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 123,
            "endLine": 127
          }
        ],
        "sample": "        processingLatency: 0,\n        inputLevel: 0,\n        outputLevel: 0,\n        timestamp: Date.now(),\n        frameCount: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "705c0b23520718f9dc68037eb5812962",
        "severity": "high",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 886,
            "endLine": 890
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 360,
            "endLine": 364
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 397,
            "endLine": 401
          }
        ],
        "sample": "\n      // 1. Initialize engine\n      await act(async () => {\n        await result.current.initialize();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efa37a443e963127eaac4689c2415519",
        "severity": "high",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
          "src/__tests__/App.startup.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 8,
            "endLine": 12
          }
        ],
        "sample": "    isRecording: false,\n    isPaused: false,\n    recordingTime: 0,\n    chunks: [],\n    playingChunks: {},...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d9cc848d8644e492287c13c918bed14",
        "severity": "high",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 288,
            "endLine": 292
          }
        ],
        "sample": "    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn()\n  };\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "085c49be24daef06135a46edd175617b",
        "severity": "medium",
        "occurrences": 10,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 232,
            "endLine": 236
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 471,
            "endLine": 475
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 506,
            "endLine": 510
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 535,
            "endLine": 539
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 630,
            "endLine": 634
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 654,
            "endLine": 658
          }
        ],
        "sample": "        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuffer }\n      };\n      \n      act(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c04680f6f581a26732e6da8484b6cb3b",
        "severity": "medium",
        "occurrences": 10,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 472,
            "endLine": 476
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 507,
            "endLine": 511
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 536,
            "endLine": 540
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 631,
            "endLine": 635
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 655,
            "endLine": 659
          }
        ],
        "sample": "        outputBuffer: { getChannelData: () => outputBuffer }\n      };\n      \n      act(() => {\n        (mockProcessor.onaudioprocess as any)(mockEvent);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2429bbda45b5ab61822b2f84bb73c0b2",
        "severity": "medium",
        "occurrences": 10,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 329,
            "endLine": 333
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 363,
            "endLine": 367
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 473,
            "endLine": 477
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 508,
            "endLine": 512
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 537,
            "endLine": 541
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 632,
            "endLine": 636
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 656,
            "endLine": 660
          }
        ],
        "sample": "      };\n      \n      act(() => {\n        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee2f716f6498e4f900b71248ea8c35b9",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 239,
            "endLine": 243
          }
        ],
        "sample": "      // Based on log: \"Engine not ready (uninitialized), waiting...\"\n      mockGetEngineStatus.mockReturnValue('uninitialized')\n\n      render(<AudioDemo {...defaultProps} />)\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e9c77b3ccd4f8cc71a84b6c5b9c3896f",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 235,
            "endLine": 239
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 251,
            "endLine": 255
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 318,
            "endLine": 322
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 371,
            "endLine": 375
          }
        ],
        "sample": "        onChunkProcessed: vi.fn()\n      };\n      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d48100a1d7d3fa8cde74f79023dc46f",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 202,
            "endLine": 206
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 253,
            "endLine": 257
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 323,
            "endLine": 327
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 400,
            "endLine": 404
          }
        ],
        "sample": "      \n      const event = {\n        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)\n        },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "77113e45a9cdee14a71ec98514f82820",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 139,
            "endLine": 143
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 254,
            "endLine": 258
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 324,
            "endLine": 328
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 401,
            "endLine": 405
          }
        ],
        "sample": "      const event = {\n        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)\n        },\n        outputBuffer: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ba5974ca2808db2f81353f15844e677",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 140,
            "endLine": 144
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 204,
            "endLine": 208
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 255,
            "endLine": 259
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 279,
            "endLine": 283
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 402,
            "endLine": 406
          }
        ],
        "sample": "        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)\n        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => outputData)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d2bdfb46606517eb8e32ce30b3522f7",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 205,
            "endLine": 209
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 256,
            "endLine": 260
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 403,
            "endLine": 407
          }
        ],
        "sample": "          getChannelData: vi.fn(() => inputData)\n        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => outputData)\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9bdba4d00ffeebe6997f7f3b87382c89",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 206,
            "endLine": 210
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 281,
            "endLine": 285
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 404,
            "endLine": 408
          }
        ],
        "sample": "        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => outputData)\n        }\n      } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ee8bc7048cd3a1583eb1307968f7821",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 405,
            "endLine": 409
          }
        ],
        "sample": "        outputBuffer: {\n          getChannelData: vi.fn(() => outputData)\n        }\n      } as any;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e2b65957e7a0ac69d4da619bb6a1ca74",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 211,
            "endLine": 215
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 366,
            "endLine": 370
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 459,
            "endLine": 463
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 485,
            "endLine": 489
          }
        ],
        "sample": "        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk={null}\n          {...mockHandlers}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f9990f551bd124ca8034068efd4dcd88",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 367,
            "endLine": 371
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 460,
            "endLine": 464
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 486,
            "endLine": 490
          }
        ],
        "sample": "          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk={null}\n          {...mockHandlers}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46cdb130dee317971edd5d34171d3462",
        "severity": "medium",
        "occurrences": 9,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 368,
            "endLine": 372
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 461,
            "endLine": 465
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 487,
            "endLine": 491
          }
        ],
        "sample": "          averageNoiseReduction={25}\n          selectedChunk={null}\n          {...mockHandlers}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "beae393602e07269273574044ca85191",
        "severity": "medium",
        "occurrences": 8,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 284,
            "endLine": 288
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 407,
            "endLine": 411
          }
        ],
        "sample": "        }\n      } as any;\n\n      mockScriptProcessor.onaudioprocess(event);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "38f6ae6a4e9508dc3ac7b8241d9b3f7e",
        "severity": "medium",
        "occurrences": 8,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 409,
            "endLine": 413
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 503,
            "endLine": 507
          }
        ],
        "sample": "          diagnostics={createMockDiagnostics()}\n          onClose={mockOnClose}\n        />\n      );\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3b9acc003e2e01a9de4e5556516c96ef",
        "severity": "medium",
        "occurrences": 8,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 348,
            "endLine": 352
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 458,
            "endLine": 462
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 484,
            "endLine": 488
          }
        ],
        "sample": "      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk={null}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1fddd6ca1633b9c9a3ae84a40e2ccc80",
        "severity": "medium",
        "occurrences": 8,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 252,
            "endLine": 256
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 388,
            "endLine": 392
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 423,
            "endLine": 427
          }
        ],
        "sample": "      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      act(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "36bdec172cc90863fdbe1a35864d2b26",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 228,
            "endLine": 232
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 288,
            "endLine": 292
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 467,
            "endLine": 471
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 531,
            "endLine": 535
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 626,
            "endLine": 630
          }
        ],
        "sample": "      // Mock the engine process to return input unchanged\n      mockEngine.process = vi.fn().mockImplementation((frame) => frame);\n      \n      const mockEvent = {\n        inputBuffer: { getChannelDa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34a8db07b3fe139455126f9751764c53",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 229,
            "endLine": 233
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 289,
            "endLine": 293
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 358,
            "endLine": 362
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 468,
            "endLine": 472
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 532,
            "endLine": 536
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 627,
            "endLine": 631
          }
        ],
        "sample": "      mockEngine.process = vi.fn().mockImplementation((frame) => frame);\n      \n      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannel...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ff90361c2ab77e0b4c1b961ad63f666",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 283,
            "endLine": 287
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 329,
            "endLine": 333
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 406,
            "endLine": 410
          }
        ],
        "sample": "          getChannelData: vi.fn(() => outputData)\n        }\n      } as any;\n\n      mockScriptProcessor.onaudioprocess(event);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "463e21c23fa001f2ef85496fe1d6aa64",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 407,
            "endLine": 411
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 501,
            "endLine": 505
          }
        ],
        "sample": "        <AdvancedMetricsPanel\n          isVisible={true}\n          diagnostics={createMockDiagnostics()}\n          onClose={mockOnClose}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bb5e2c2b28303943c00d196f9b5d1105",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 408,
            "endLine": 412
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 502,
            "endLine": 506
          }
        ],
        "sample": "          isVisible={true}\n          diagnostics={createMockDiagnostics()}\n          onClose={mockOnClose}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f3fa88b794743faca35febda00aa86e",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 232,
            "endLine": 236
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 482,
            "endLine": 486
          }
        ],
        "sample": "      const user = userEvent.setup();\n      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce6d9eb13abc0e73fb36dbd093bfb9e8",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 270,
            "endLine": 274
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 312,
            "endLine": 316
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 406,
            "endLine": 410
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 307,
            "endLine": 311
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 381,
            "endLine": 385
          }
        ],
        "sample": "        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      // Minimum value\n      act(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e67118033ec183f967fc9456f4552c8",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 347,
            "endLine": 351
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 385,
            "endLine": 389
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 270,
            "endLine": 274
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 303,
            "endLine": 307
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 377,
            "endLine": 381
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 476,
            "endLine": 480
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 505,
            "endLine": 509
          }
        ],
        "sample": "        useMurmubaraEngine({ autoInitialize: true })\n      );\n      \n      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "534083144ce70a5e96354f6fa832fa20",
        "severity": "medium",
        "occurrences": 7,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 348,
            "endLine": 352
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 386,
            "endLine": 390
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 271,
            "endLine": 275
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 304,
            "endLine": 308
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 477,
            "endLine": 481
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 506,
            "endLine": 510
          }
        ],
        "sample": "      );\n      \n      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c354d3940a8e03f982efb2f89e7be7e",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 202,
            "endLine": 206
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 229,
            "endLine": 233
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 274,
            "endLine": 278
          }
        ],
        "sample": "      \n      // Quick process\n      const file = new File(['audio'], 'test.wav', { type: 'audio/wav' })\n      await user.upload(screen.getByLabelText('Upload audio file'), file)\n      await user.click...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bfe27df155f7edfc505a0c0d1e41dff5",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 636,
            "endLine": 640
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 682,
            "endLine": 686
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 705,
            "endLine": 709
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 733,
            "endLine": 737
          }
        ],
        "sample": "        wasmLoaded: true,\n        audioContextState: 'running',\n        processingLatency: 10,\n        memoryUsage: 1000000,\n        streamCount: 1,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9dc7cd9a5ba3bb8275ad30c4f7d78269",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 312,
            "endLine": 316
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 338,
            "endLine": 342
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "      on: vi.fn(),\n      off: vi.fn(),\n      emit: vi.fn(),\n      once: vi.fn(),\n      removeAllListeners: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "011dbf6c1bb7dc476085863fed1b69ef",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 313,
            "endLine": 317
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 339,
            "endLine": 343
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 170,
            "endLine": 174
          }
        ],
        "sample": "      off: vi.fn(),\n      emit: vi.fn(),\n      once: vi.fn(),\n      removeAllListeners: vi.fn(),\n      listenerCount: vi.fn().mockReturnValue(0)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed30fc8f6d9ec0b0e4608e60c9085589",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 401,
            "endLine": 405
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 416,
            "endLine": 420
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 757,
            "endLine": 761
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 435,
            "endLine": 439
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 450,
            "endLine": 454
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1214,
            "endLine": 1218
          }
        ],
        "sample": "      mockStateManager.isInState.mockReturnValue(true);\n      \n      // Emit processing-end event to trigger cleanup timer\n      engine.emit('processing-end');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "688e0650b7844de7386869907267cfbb",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 634,
            "endLine": 638
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 635,
            "endLine": 639
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 709,
            "endLine": 713
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 710,
            "endLine": 714
          }
        ],
        "sample": "      // Create test audio data\n      const inputBuffer = new Float32Array(4096);\n      for (let i = 0; i < 4096; i++) {\n        inputBuffer[i] = Math.sin(i * 0.01) * 0.5;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "99daac51bc77dbe1dc6f4bf4f0a58a1a",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 238,
            "endLine": 242
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 279,
            "endLine": 283
          }
        ],
        "sample": "      await recordingManager.startCycle(\n        mockProcessedStream,\n        mockOriginalStream,\n        8000,\n        onChunkProcessed...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98c375ea311d3aed95c2c515634e128b",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 219,
            "endLine": 223
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 239,
            "endLine": 243
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 280,
            "endLine": 284
          }
        ],
        "sample": "        mockProcessedStream,\n        mockOriginalStream,\n        8000,\n        onChunkProcessed\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3fdc2dab8ff6fd4a85039c59920f7570",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 406,
            "endLine": 410
          }
        ],
        "sample": "      render(\n        <AdvancedMetricsPanel\n          isVisible={true}\n          diagnostics={createMockDiagnostics()}\n          onClose={mockOnClose}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cec6eec50085e48a197022e01e6e227d",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 318,
            "endLine": 322
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 319,
            "endLine": 323
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 320,
            "endLine": 324
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 216,
            "endLine": 220
          }
        ],
        "sample": "\n    // Analyze all files\n    for (const file of [...componentFiles, ...styleFiles]) {\n      await this.analyzeFile(file);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74454023035a16d76f993a2c7670feaa",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 445,
            "endLine": 449
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 446,
            "endLine": 450
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "\n      // Step 3: Open gain control panel\n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c23e37e5a86376b8700f7783f98fa54",
        "severity": "medium",
        "occurrences": 6,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 245,
            "endLine": 249
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 297,
            "endLine": 301
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 362,
            "endLine": 366
          }
        ],
        "sample": "      \n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      \n      const slider = screen.getByRole('slider');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "400cfae5c13eb7f8235b00769c712e20",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "      \n      const file = new File(['audio content'], 'test.wav', { type: 'audio/wav' })\n      const input = screen.getByLabelText('Upload audio file')\n      \n      await user.upload(input, file)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f8d7a92fe8c1fe0d0861d04fb1ae02d0",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 202,
            "endLine": 206
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 227,
            "endLine": 231
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 354,
            "endLine": 358
          }
        ],
        "sample": "      // Mock the gain value persistence\n      let currentGain = 1.0;\n      engine.setInputGain = vi.fn((gain) => { currentGain = gain; });\n      engine.getInputGain = vi.fn(() => currentGain);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "01ae6eb11055cdd0be28c2876521d177",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 709,
            "endLine": 713
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 771,
            "endLine": 775
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1166,
            "endLine": 1170
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1291,
            "endLine": 1295
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1489,
            "endLine": 1493
          }
        ],
        "sample": "    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b02fcf8a0dd1a3e365e6858e4bd7b16e",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "      };\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();\n\n      const engine = new AudioWorkletEngine();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c8bf9f78949cb7aa470ce5ba2f94f0ca",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 200,
            "endLine": 204
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 246,
            "endLine": 250
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 520,
            "endLine": 524
          }
        ],
        "sample": "        initialize: mockInitialize\n      });\n\n      await functions.startRecording();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1aebd1bc8dab057ef461a043303f4926",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 418,
            "endLine": 422
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 690,
            "endLine": 694
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 751,
            "endLine": 755
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 353,
            "endLine": 357
          }
        ],
        "sample": "          start: vi.fn(),\n          stop: vi.fn(),\n          state: 'inactive',\n          ondataavailable: null,\n          onstop: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71bf697b56078247cb01624bfd493d8a",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 195,
            "endLine": 199
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 282,
            "endLine": 286
          }
        ],
        "sample": "        8000,\n        onChunkProcessed\n      );\n      \n      const processedRecorder = mediaRecorderInstances[0];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "815ecccdf0c058b24113bb6db96058be",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 287,
            "endLine": 291
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 288,
            "endLine": 292
          }
        ],
        "sample": "      \n      // Trigger stop\n      if (processedRecorder.onstop) {\n        processedRecorder.onstop();\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4404df717222431c2eaf30fe5de874fa",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 181,
            "endLine": 185
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 249,
            "endLine": 253
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 491,
            "endLine": 495
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 524,
            "endLine": 528
          }
        ],
        "sample": "        await result.current.initializeAudioEngine();\n      });\n      \n      // Create test input/output buffers\n      const inputBuffer = new Float32Array(4096);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b24cef19521d1e7cf26031134e90fdf7",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 463,
            "endLine": 467
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 495,
            "endLine": 499
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 527,
            "endLine": 531
          }
        ],
        "sample": "      \n      const inputBuffer = new Float32Array(4096);\n      inputBuffer.fill(0.5);\n      const outputBuffer = new Float32Array(4096);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dc5844f9818ac919866da8a65aca4c00",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 255,
            "endLine": 259
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 286,
            "endLine": 290
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 355,
            "endLine": 359
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 465,
            "endLine": 469
          }
        ],
        "sample": "      const outputBuffer = new Float32Array(4096);\n      \n      // Mock the engine process to return input unchanged\n      mockEngine.process = vi.fn().mockImplementation((frame) => frame);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "921c1183419e53f169e7cb946ce2507e",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 256,
            "endLine": 260
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 287,
            "endLine": 291
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 466,
            "endLine": 470
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 530,
            "endLine": 534
          }
        ],
        "sample": "      const outputBuffer = new Float32Array(4096);\n      \n      mockEngine.process = vi.fn().mockImplementation((frame) => frame);\n      \n      const mockEvent = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3fb9f770de7cf66c7895cdbac4452f42",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 211,
            "endLine": 215
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 225,
            "endLine": 229
          }
        ],
        "sample": "\n      // Button should be disabled\n      const processButton = screen.getByText('🔄 Probar Audio Demo')\n      expect(processButton).toBeDisabled()\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5743294fabe279db56dac0dbbfb46f86",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "    engine = new MurmubaraEngine({\n      useAudioWorklet: true,\n      logLevel: 'none'\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b1b913bb0bd691052f62158808de9307",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 249,
            "endLine": 253
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 271,
            "endLine": 275
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 369,
            "endLine": 373
          }
        ],
        "sample": "      const config: ChunkConfig = {\n        chunkDuration: 1000,\n        onChunkProcessed: vi.fn()\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3a8b2ef76951e6ce73529131ada4fc75",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 250,
            "endLine": 254
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 370,
            "endLine": 374
          }
        ],
        "sample": "        chunkDuration: 1000,\n        onChunkProcessed: vi.fn()\n      };\n      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cda065a9cc669c17f625286e2b22f51",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "      \n      // Get the audio element\n      const audioElements = (playbackManager as any).audioElements;\n      const audio = audioElements.get('chunk-1-processed') as MockAudioElement;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c25d3a4d3d335a92d9714ece312baf8",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 298,
            "endLine": 302
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 365,
            "endLine": 369
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 397,
            "endLine": 401
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 436,
            "endLine": 440
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initialize();\n      });\n\n      await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0eeb8224366d3ba222571e2f269a67d9",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 394,
            "endLine": 398
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 433,
            "endLine": 437
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 739,
            "endLine": 743
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 762,
            "endLine": 766
          }
        ],
        "sample": "      \n      const { result } = renderHook(() => useMurmubaraEngine());\n\n      await act(async () => {\n        await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "505ed681af5d2d0a3fb176f7cee781aa",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 285,
            "endLine": 289
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 331,
            "endLine": 335
          }
        ],
        "sample": "      } as any;\n\n      mockScriptProcessor.onaudioprocess(event);\n\n      const metrics = processor.getMetrics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b62fb5f1df07c5815ec9b279207e6ebb",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "      render(\n        <AudioControls \n          {...defaultProps} \n          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "592fcea480f9979135279b447edd37bb",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 307,
            "endLine": 311
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 308,
            "endLine": 312
          }
        ],
        "sample": "    ctx.lineTo(canvas.width, canvas.height / 2);\n    ctx.stroke();\n    ctx.shadowBlur = 0;\n\n    // Draw status text...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "854b989dc2fd073dc60dccc060a8060b",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "\n    // Handle null and undefined\n    if (value === null || value === undefined) {\n      return value;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "df90d3248c047d64f4cae59a93f82cc2",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "        }\n      };\n      \n      render(<AudioRecorder {...recordingProps} />);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "193db3be032bb254f6973a8001b72991",
        "severity": "medium",
        "occurrences": 5,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 201,
            "endLine": 205
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 209,
            "endLine": 213
          }
        ],
        "sample": "      <ErrorBoundary>\n        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>\n    );\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50976cd4a1ef4d4eb000e679555410e5",
        "severity": "medium",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 640,
            "endLine": 644
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 651,
            "endLine": 655
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 715,
            "endLine": 719
          }
        ],
        "sample": "      const outputBuffer = new Float32Array(4096);\n      \n      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuff...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3016df995c187e3373e86658bf5f1809",
        "severity": "medium",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 400,
            "endLine": 404
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 284,
            "endLine": 288
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 285,
            "endLine": 289
          }
        ],
        "sample": "\n      await act(async () => {\n        await result.current.startRecording();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b48a1f62973aa517359583886c6ac290",
        "severity": "medium",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
          "src/__tests__/App.startup.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "    isPaused: false,\n    recordingTime: 0,\n    chunks: [],\n    playingChunks: {},\n    expandedChunk: null...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f35835a5acaacd09f57f0124f9921717",
        "severity": "medium",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "      // Fill with mock audio data\n      for (let i = 0; i < audioData.length; i++) {\n        audioData[i] = Math.sin(2 * Math.PI * 440 * i / 44100) * 0.5;\n      }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a63eb7f1996ca370a4fb7e8050b2689c",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "  \n  // Create fresh mock nodes\n  mockScriptProcessor = {\n    connect: vi.fn(),\n    disconnect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e17c06febd5aa0fa37bd70f2caa1c6bf",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 289,
            "endLine": 293
          }
        ],
        "sample": "    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn()\n  };\n  \n  // Mock the global AudioContext constructor...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "796ff5e9b76159b5dfcd504169cb0971",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 270,
            "endLine": 274
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "    \n    mockLogger = {\n      debug: vi.fn(),\n      info: vi.fn(),\n      warn: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ee1353cf164f61a5c76e974ac31548f",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 271,
            "endLine": 275
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 87,
            "endLine": 91
          }
        ],
        "sample": "    mockLogger = {\n      debug: vi.fn(),\n      info: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc087ea3aca3ba08527a0c0fe086da31",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "      debug: vi.fn(),\n      info: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),\n      setLevel: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c912c6d2763b23d4af0045d9cc88063f",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "      info: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),\n      setLevel: vi.fn(),\n      setLogHandler: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "732895ce5c2e7fc315967344c8d051f9",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 274,
            "endLine": 278
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "      warn: vi.fn(),\n      error: vi.fn(),\n      setLevel: vi.fn(),\n      setLogHandler: vi.fn()\n    } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "921ea383101416d8278660fe858e2ff5",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 275,
            "endLine": 279
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "      error: vi.fn(),\n      setLevel: vi.fn(),\n      setLogHandler: vi.fn()\n    } as any;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "beeca6a67f72efeb1082e7f8eeceff34",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 299,
            "endLine": 303
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 117,
            "endLine": 121
          }
        ],
        "sample": "      recordChunk: vi.fn(),\n      getMetrics: vi.fn().mockReturnValue({\n        noiseReductionLevel: 0,\n        processingLatency: 0,\n        inputLevel: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ffe945d2dee156945a11de44d472b50",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "      getMetrics: vi.fn().mockReturnValue({\n        noiseReductionLevel: 0,\n        processingLatency: 0,\n        inputLevel: 0,\n        outputLevel: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8a032a4f72df305b12f4f9eb621949db",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 636,
            "endLine": 640
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 711,
            "endLine": 715
          }
        ],
        "sample": "      for (let i = 0; i < 4096; i++) {\n        inputBuffer[i] = Math.sin(i * 0.01) * 0.5;\n      }\n      \n      const outputBuffer = new Float32Array(4096);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f81bd9de5da4db4d1e6fe60c7c6e43c",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 637,
            "endLine": 641
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 712,
            "endLine": 716
          }
        ],
        "sample": "        inputBuffer[i] = Math.sin(i * 0.01) * 0.5;\n      }\n      \n      const outputBuffer = new Float32Array(4096);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "852386fddb2ad3697ac35e730e752773",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 638,
            "endLine": 642
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 713,
            "endLine": 717
          }
        ],
        "sample": "      }\n      \n      const outputBuffer = new Float32Array(4096);\n      \n      const mockEvent = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f95beb1be918b97807ce9f5797544e51",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 639,
            "endLine": 643
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 714,
            "endLine": 718
          }
        ],
        "sample": "      \n      const outputBuffer = new Float32Array(4096);\n      \n      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae5cd25182dd9f9eb329e238ddfb6dcf",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 643,
            "endLine": 647
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 718,
            "endLine": 722
          }
        ],
        "sample": "        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuffer }\n      };\n      \n      // Process audio...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d7e48887a07414da1c13563209c858d7",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 67,
            "endLine": 71
          }
        ],
        "sample": "        audio: {\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d76a380705285befe50a965a18b28f12",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initialize();\n      });\n\n      expect(api.initializeAudioEngine).toHaveBeenCalledWith(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "755367568446c360f633f5cfdee1ed60",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "        await result.current.initialize();\n      });\n\n      expect(api.initializeAudioEngine).toHaveBeenCalledWith(\n        expect.objectContaining({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "908c5d4d3863df7ad5830677e7c2a8a5",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/__tests__/utils/rnnoise-loader.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/rnnoise-loader.test.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  afterEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0eb34baba82df4580378b23854bf917d",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "packages/murmuraba/src/__tests__/utils/rnnoise-loader.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/rnnoise-loader.test.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "    vi.clearAllMocks();\n  });\n\n  afterEach(() => {\n    vi.restoreAllMocks();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d5aca1130c39e253e9d7964f3fa1f53b",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 7,
            "endLine": 11
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "      { time: 0, vad: 0.2 },\n      { time: 1, vad: 0.8 },\n      { time: 2, vad: 0.9 },\n      { time: 3, vad: 0.7 },\n      { time: 4, vad: 0.3 }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f829427f86037aec5d978a6d55a7d750",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "      const audioData = new Float32Array(1024);\n      // Fill with mock audio data\n      for (let i = 0; i < audioData.length; i++) {\n        audioData[i] = Math.sin(2 * Math.PI * 440 * i / 44100) * 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4a7508cb0e7b3217054a44bb694a662",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 1,
            "endLine": 5
          },
          {
            "file": "vitest.config.ts",
            "startLine": 1,
            "endLine": 5
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 1,
            "endLine": 5
          }
        ],
        "sample": "import { defineConfig } from 'vitest/config';\nimport path from 'path';\n\nexport default defineConfig({\n  test: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fdc2224a999171fd4202401f1147d5e1",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "scripts/analyze-performance.js",
          "scripts/analyze-zustand-performance.js",
          "scripts/check-docs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-performance.js",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 6,
            "endLine": 10
          },
          {
            "file": "scripts/check-docs.js",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": " */\n\nconst fs = require('fs');\nconst path = require('path');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d85f3075a8845da945e2e9d7027988e",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "vitest.config.ts",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 53,
            "endLine": 57
          }
        ],
        "sample": "    }\n  },\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61953d0e3baa0aa38f686a05a7201c98",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "vitest.config.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 54,
            "endLine": 58
          }
        ],
        "sample": "  },\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n      '@features': path.resolve(__dirname, './src/features'),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4cad9333d19c8a9837104584b56c00f9",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "vitest.config.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src'),\n      '@features': path.resolve(__dirname, './src/features'),\n      '@core': path.resolve(__dirname, './src/core'),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e441083930d66bda4ae47ad72abb51f6",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "vitest.config.ts",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "    alias: {\n      '@': path.resolve(__dirname, './src'),\n      '@features': path.resolve(__dirname, './src/features'),\n      '@core': path.resolve(__dirname, './src/core'),\n      '@shared': path.reso...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98d8273b27f27d95a47cac9904fbad52",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "vitest.config.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "      '@': path.resolve(__dirname, './src'),\n      '@features': path.resolve(__dirname, './src/features'),\n      '@core': path.resolve(__dirname, './src/core'),\n      '@shared': path.resolve(__dirname...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c6df5ae8d6ad0469934662f65957351",
        "severity": "medium",
        "occurrences": 3,
        "files": [
          "vite.config.ts",
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vite.config.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "vitest.config.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "      '@features': path.resolve(__dirname, './src/features'),\n      '@core': path.resolve(__dirname, './src/core'),\n      '@shared': path.resolve(__dirname, './src/shared'),\n      'murmuraba': path.re...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0944437f87c2e0c726840c0b9917f9ad",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "      \n      // Wait for completion\n      await waitFor(() => {\n        expect(screen.getByTestId('engine-status')).toHaveTextContent('ready')\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2c4e8a62b981099eb9294c293ce2a0d",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 306,
            "endLine": 310
          }
        ],
        "sample": "      \n      // Should render audio components\n      expect(screen.getByRole('button', { name: /play/i })).toBeInTheDocument()\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "812bec0f7e94932d456047e3bea4f173",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 204,
            "endLine": 208
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 275,
            "endLine": 279
          }
        ],
        "sample": "      const file = new File(['audio'], 'test.wav', { type: 'audio/wav' })\n      await user.upload(screen.getByLabelText('Upload audio file'), file)\n      await user.click(screen.getByText('Process Aud...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "345add942dc1b83f2e41966b87b58dad",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "    \n    // Statements\n    totalStatements += Object.keys(s).length;\n    coveredStatements += Object.values(s).filter(count => count > 0).length;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6680d3f47943b61434da89b89e4a33ad",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "    \n    // Functions\n    totalFunctions += Object.keys(f).length;\n    coveredFunctions += Object.values(f).filter(count => count > 0).length;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ae63347a065c83fb8d7cfae5469dbc8",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 80,
            "endLine": 84
          }
        ],
        "sample": "    \n    // Lines\n    totalLines += Object.keys(l).length;\n    coveredLines += Object.values(l).filter(count => count > 0).length;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d468dde08cde3d0c97fd3e5b57d01798",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 128,
            "endLine": 132
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 237,
            "endLine": 241
          }
        ],
        "sample": "    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    gain: { value: 0 },\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18955f964d3f86416655ce0742c20457",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 238,
            "endLine": 242
          }
        ],
        "sample": "    frequency: { value: 0 },\n    Q: { value: 0 },\n    gain: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41eba1487c0e0061248bb6cbf5e62a5f",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 239,
            "endLine": 243
          }
        ],
        "sample": "    Q: { value: 0 },\n    gain: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22b47f9338611159f54f1dd51244c9c5",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 240,
            "endLine": 244
          }
        ],
        "sample": "    gain: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "36a005f7d25c025841a4daa12a4c9c97",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 229,
            "endLine": 233
          }
        ],
        "sample": "    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9bae7380f7d73fa28329aaee190d1dff",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 222,
            "endLine": 226
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 230,
            "endLine": 234
          }
        ],
        "sample": "    frequency: { value: 0 },\n    Q: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3dd7deda891032d57438dbfb684acf3a",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 231,
            "endLine": 235
          }
        ],
        "sample": "    Q: { value: 0 },\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6dd4dbfbbd53ed1e3259322ab9fbaed8",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 293,
            "endLine": 297
          }
        ],
        "sample": "  \n  // Mock the global AudioContext constructor\n  global.AudioContext = vi.fn().mockImplementation(() => mockAudioContext);\n  global.webkitAudioContext = global.AudioContext;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "853136fd24de33091f4e86fc341772b1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 314,
            "endLine": 318
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 137,
            "endLine": 141
          }
        ],
        "sample": "      emit: vi.fn(),\n      once: vi.fn(),\n      removeAllListeners: vi.fn(),\n      listenerCount: vi.fn().mockReturnValue(0)\n    } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "01f7e6baf6334c5d51526d5ec6138714",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 266,
            "endLine": 270
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 315,
            "endLine": 319
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 138,
            "endLine": 142
          }
        ],
        "sample": "      once: vi.fn(),\n      removeAllListeners: vi.fn(),\n      listenerCount: vi.fn().mockReturnValue(0)\n    } as any;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d3c03e0f3c33ac110b678e23f7554dcf",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 400,
            "endLine": 404
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 415,
            "endLine": 419
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 434,
            "endLine": 438
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 449,
            "endLine": 453
          }
        ],
        "sample": "      // Mock state as ready\n      mockStateManager.isInState.mockReturnValue(true);\n      \n      // Emit processing-end event to trigger cleanup timer\n      engine.emit('processing-end');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "379b4bac165ab31e8fe84335a405d04e",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 483,
            "endLine": 487
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 484,
            "endLine": 488
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 532,
            "endLine": 536
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 533,
            "endLine": 537
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Engine is already initialized or in an invalid state');\n    });\n    \n    it('should handle WASM loading failure', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d760c29ae51f7a40ddb21fbfcd558fb",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 616,
            "endLine": 620
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 617,
            "endLine": 621
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 692,
            "endLine": 696
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 693,
            "endLine": 697
          }
        ],
        "sample": "      \n      expect(mockLowShelfFilter.type).toBe('lowshelf');\n      expect(mockLowShelfFilter.frequency.value).toBe(200);\n      expect(mockLowShelfFilter.gain.value).toBe(-3);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9c770cfae68984759e69ae1ffb6ef7d0",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 783,
            "endLine": 787
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 784,
            "endLine": 788
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1306,
            "endLine": 1310
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1307,
            "endLine": 1311
          }
        ],
        "sample": "    \n    it('should register metrics callback', () => {\n      const callback = vi.fn();\n      engine.onMetricsUpdate(callback);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e03505f0a2940559693188fb9c7118de",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 787,
            "endLine": 791
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 788,
            "endLine": 792
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1310,
            "endLine": 1314
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1311,
            "endLine": 1315
          }
        ],
        "sample": "      \n      // Should have registered the callback via event emitter\n      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0] === 'metrics-update')?.[1];\n      expect(metricsHandl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4ccad5cb3174d4ff177e427f252eaae",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 791,
            "endLine": 795
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 792,
            "endLine": 796
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1314,
            "endLine": 1318
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1315,
            "endLine": 1319
          }
        ],
        "sample": "      \n      // Test the forwarding works\n      const testMetrics = { noiseReductionLevel: 50 };\n      metricsHandler?.(testMetrics);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2001c0f819f0e86628a33bc433ed623",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 837,
            "endLine": 841
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 838,
            "endLine": 842
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1000,
            "endLine": 1004
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1001,
            "endLine": 1005
          }
        ],
        "sample": "    \n    it('should emit error events', async () => {\n      const errorHandler = vi.fn();\n      engine.on('error', errorHandler);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b3e2b305dba49f2e9e4883c63b44fb5",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 844,
            "endLine": 848
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 860,
            "endLine": 864
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1007,
            "endLine": 1011
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1023,
            "endLine": 1027
          }
        ],
        "sample": "      (loadRNNoiseModule as any).mockRejectedValueOnce(new Error('Test error'));\n      \n      try {\n        await engine.initialize();\n      } catch (e) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "88e384741c93aad19212bf392096e78d",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 882,
            "endLine": 886
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 883,
            "endLine": 887
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1039,
            "endLine": 1043
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1040,
            "endLine": 1044
          }
        ],
        "sample": "      \n      // Force internal error recording by accessing private method\n      for (let i = 0; i < 15; i++) {\n        (testEngine as any).recordError(new Error(`Error ${i}`));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fcbf9dd40718e2854f317bff0f5429f3",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "        }\n      };\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f14fb6eaf509df8398d9f0c0f493643a",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();\n\n      const engine = new AudioWorkletEngine();\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "80fe190fbe15ab2538bc8d5ef887dee5",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "      (global as any).AudioWorklet = vi.fn();\n\n      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9881315c219da6ebe7f09a714138e848",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 204,
            "endLine": 208
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 205,
            "endLine": 209
          }
        ],
        "sample": "      \n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();\n      (global as any).AudioWorkletNode = vi.fn(() => mockWorkletNode);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d71944972a176f4b7a21d24a3bf9e3ef",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "    // Mock WASM module\n    mockModule = {\n      _rnnoise_create: vi.fn(() => 12345), // Mock state pointer\n      _rnnoise_destroy: vi.fn(),\n      _rnnoise_process_frame: vi.fn((state, output, input) ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0cd4ba2abf41601a4e092adefd5f8a2",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "      \n      // Make imports fail to trigger script loading\n      vi.mocked(require('@jitsi/rnnoise-wasm').default).mockRejectedValueOnce(new Error('Import failed'));\n      vi.mocked(require('../../en...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "997b5a26c67bdb42e2c336de5001e8af",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 137,
            "endLine": 141
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "        recordingManager: mockRecordingManager,\n        initialize: mockInitialize\n      });\n\n      await functions.startRecording();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e37e7e08051d1e29ec3bc09c24d97867",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 417,
            "endLine": 421
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 689,
            "endLine": 693
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 750,
            "endLine": 754
          }
        ],
        "sample": "        const recorder = {\n          start: vi.fn(),\n          stop: vi.fn(),\n          state: 'inactive',\n          ondataavailable: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "194834cb6d5220b32ac28fcf1342b200",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 421,
            "endLine": 425
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 475,
            "endLine": 479
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 542,
            "endLine": 546
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 608,
            "endLine": 612
          }
        ],
        "sample": "          ondataavailable: null,\n          onstop: null,\n          onerror: null,\n        };\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d39156ea626723cab84363bcbe70222c",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 422,
            "endLine": 426
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 476,
            "endLine": 480
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 543,
            "endLine": 547
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 609,
            "endLine": 613
          }
        ],
        "sample": "          onstop: null,\n          onerror: null,\n        };\n        \n        if (stream === processedStream) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55046a61d565638eb011f5012a9ac7ec",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 423,
            "endLine": 427
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 477,
            "endLine": 481
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 544,
            "endLine": 548
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 610,
            "endLine": 614
          }
        ],
        "sample": "          onerror: null,\n        };\n        \n        if (stream === processedStream) {\n          mediaRecorderInstance = recorder;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5b21c13c8494036bc34048a5dae6932f",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 431,
            "endLine": 435
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 487,
            "endLine": 491
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 555,
            "endLine": 559
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 626,
            "endLine": 630
          }
        ],
        "sample": "        \n        return recorder;\n      });\n\n      const processedStream = { getTracks: () => [] } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46ff63ea364258b5730577db9683b958",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 432,
            "endLine": 436
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 488,
            "endLine": 492
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 556,
            "endLine": 560
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 627,
            "endLine": 631
          }
        ],
        "sample": "        return recorder;\n      });\n\n      const processedStream = { getTracks: () => [] } as any;\n      const originalStream = { getTracks: () => [] } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c010ec21474e6a0553466e6e542b21e7",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 439,
            "endLine": 443
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 495,
            "endLine": 499
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 563,
            "endLine": 567
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 634,
            "endLine": 638
          }
        ],
        "sample": "      // Start recording\n      await recordingManager.startCycle(\n        processedStream,\n        originalStream,\n        8000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74e771dcbce1dbf2cf9061c0bbc819a8",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 440,
            "endLine": 444
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 496,
            "endLine": 500
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 564,
            "endLine": 568
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 635,
            "endLine": 639
          }
        ],
        "sample": "      await recordingManager.startCycle(\n        processedStream,\n        originalStream,\n        8000,\n        onChunkProcessed...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d1f3c16cc32319577b9940047fa06e1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 441,
            "endLine": 445
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 497,
            "endLine": 501
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 565,
            "endLine": 569
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 636,
            "endLine": 640
          }
        ],
        "sample": "        processedStream,\n        originalStream,\n        8000,\n        onChunkProcessed\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9bb0b88da1118009def1f1e3f26827bc",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 444,
            "endLine": 448
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 500,
            "endLine": 504
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 568,
            "endLine": 572
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 639,
            "endLine": 643
          }
        ],
        "sample": "        onChunkProcessed\n      );\n\n      // Simulate empty blob from MediaRecorder\n      if (mediaRecorderInstance?.ondataavailable) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "913acf2385c94f471193d944e4a14f97",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "      // Start initialization (but don't await)\n      act(() => {\n        result.current.initializeAudioEngine();\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96652f6f6a28fb051c454c3b16f15a80",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 308,
            "endLine": 312
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 310,
            "endLine": 314
          }
        ],
        "sample": "\n      // Should process once ready\n      await waitFor(() => {\n        expect(mockProcessFile).toHaveBeenCalled()\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a932429457df76ee787a192470733cfb",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "      useAudioWorklet: true,\n      logLevel: 'none'\n    });\n\n    await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0791490a0e1917c05b7a6294dd580ab7",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 255,
            "endLine": 259
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 256,
            "endLine": 260
          }
        ],
        "sample": "      \n      // Add enough for 2 chunks\n      const samples = new Float32Array(10000);\n      chunkProcessor.addSamples(samples);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fde30299849fe3da41b15e1a0b468f9e",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 252,
            "endLine": 256
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 372,
            "endLine": 376
          }
        ],
        "sample": "      };\n      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      // Add partial chunk...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e8d11fba932f5cae6d95ace7b8d6c3d2",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1410,
            "endLine": 1414
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1426,
            "endLine": 1430
          }
        ],
        "sample": "    \n    // Reset the loader mock to its default behavior\n    const { loadRNNoiseModule } = await import('../../../utils/rnnoise-loader');\n    (loadRNNoiseModule as any).mockResolvedValue(mockWasmModu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "445d8c868609fda1953fc10dc24eb299",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 939,
            "endLine": 943
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 940,
            "endLine": 944
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 970,
            "endLine": 974
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 971,
            "endLine": 975
          }
        ],
        "sample": "\n      // Should successfully resample with our linear interpolation implementation\n      const result = await engine.processFile(mockArrayBuffer);\n      expect(result).toBeInstanceOf(ArrayBuffer);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "351e7aad4f1180f38c3e110efca4be15",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 232,
            "endLine": 236
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 282,
            "endLine": 286
          }
        ],
        "sample": "      \n      // Verify elements exist\n      const audioElements = (playbackManager as any).audioElements;\n      expect(audioElements.size).toBe(2);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "825c587701d14f5f2e436ec8c7c10539",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 801,
            "endLine": 805
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 802,
            "endLine": 806
          }
        ],
        "sample": "      \n      await act(async () => {\n        try {\n          await result.current.initialize();\n        } catch (e) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba5e65736588efe46b1aa72f5191f384",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 481,
            "endLine": 485
          }
        ],
        "sample": "      const chunks = [createMockChunk(0)];\n      const user = userEvent.setup();\n      \n      render(\n        <ChunkProcessingResults...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cdbb0f9e479c51c53baec4c4ccc02597",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 346,
            "endLine": 350
          }
        ],
        "sample": "      }];\n      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "06ef437c23e66108f3593e2cf7e1320f",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 235,
            "endLine": 239
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 381,
            "endLine": 385
          }
        ],
        "sample": "        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk=\"chunk-0\"\n          {...mockHandlers}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2302a8db96dbaa19cc6be147f470b057",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 236,
            "endLine": 240
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 382,
            "endLine": 386
          }
        ],
        "sample": "          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk=\"chunk-0\"\n          {...mockHandlers}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "441e731aedb213f723e0940ad7cae7c1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 172,
            "endLine": 176
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 237,
            "endLine": 241
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 383,
            "endLine": 387
          }
        ],
        "sample": "          averageNoiseReduction={25}\n          selectedChunk=\"chunk-0\"\n          {...mockHandlers}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1bb3fde90e3fb7ff0b579365d783f0c0",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "        <AudioControls \n          {...defaultProps} \n          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "85ff17cad6887985bddf994af6149795",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "          {...defaultProps} \n          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eb0f44452500c56cc9d5069213188dcd",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n        />\n      );\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "866d7c080bf3f4d7831b1f7c73d2f109",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 532,
            "endLine": 536
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 621,
            "endLine": 625
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 637,
            "endLine": 641
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = 0;\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ec0564c0d7790c5b6f588e1224ee7710",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "    \n    // Check WebAssembly support\n    if (typeof WebAssembly === 'undefined') {\n      throw new Error('WebAssembly is not supported in this environment');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4afecfecd06bd930301f87897a904d1b",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 412,
            "endLine": 416
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 413,
            "endLine": 417
          }
        ],
        "sample": "    \n    if (!this.workletNode) {\n      this.createWorkletNode();\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3787a589d174bbe222611ee7ec6196a1",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 212,
            "endLine": 216
          }
        ],
        "sample": "      const { result } = renderHook(() => useMurmubaraEngine({ autoInitialize: true }));\n      \n      // Wait for initialization\n      await waitFor(() => {\n        expect(result.current.isInitialized...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc844c23fd47abe001869df5a7d9fb4d",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 396,
            "endLine": 400
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 397,
            "endLine": 401
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 557,
            "endLine": 561
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 558,
            "endLine": 562
          }
        ],
        "sample": "    // Clear intervals and timeouts first\n    if (this.processChunkInterval) {\n      clearInterval(this.processChunkInterval);\n      this.processChunkInterval = null;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "13b771092c3f23937243f142a13af7f5",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 401,
            "endLine": 405
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 402,
            "endLine": 406
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 562,
            "endLine": 566
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 563,
            "endLine": 567
          }
        ],
        "sample": "    \n    if (this.cycleTimeout) {\n      clearTimeout(this.cycleTimeout);\n      this.cycleTimeout = null;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b25034142334512670ff45feba1e76c3",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 114,
            "endLine": 118
          }
        ],
        "sample": "    inputSamples: 0,\n    outputSamples: 0,\n    silenceFrames: 0,\n    activeFrames: 0,\n    totalInputEnergy: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28332988ddc9acdd6a2d4d86de7e883a",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "    outputSamples: 0,\n    silenceFrames: 0,\n    activeFrames: 0,\n    totalInputEnergy: 0,\n    totalOutputEnergy: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c1753b4fa8a89abf2e27e9aae306f36f",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 116,
            "endLine": 120
          }
        ],
        "sample": "    silenceFrames: 0,\n    activeFrames: 0,\n    totalInputEnergy: 0,\n    totalOutputEnergy: 0,\n    peakInput: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3816e812adecac497a5ee869c8cc9874",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 117,
            "endLine": 121
          }
        ],
        "sample": "    activeFrames: 0,\n    totalInputEnergy: 0,\n    totalOutputEnergy: 0,\n    peakInput: 0,\n    peakOutput: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2a327bab4f56053e87dc1196e68056b2",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 186,
            "endLine": 190
          }
        ],
        "sample": "\n  async analyzeFile(filePath) {\n    try {\n      const content = await fs.promises.readFile(filePath, 'utf-8');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c438e6c3a589bbd2af88446bef44552d",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 299,
            "endLine": 303
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 201,
            "endLine": 205
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 202,
            "endLine": 206
          }
        ],
        "sample": "\n    } catch (error) {\n      console.error(`Failed to analyze ${filePath}:`, error.message);\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3edbf9480a73dc753778c45c99ef9c26",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 314,
            "endLine": 318
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 315,
            "endLine": 319
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 211,
            "endLine": 215
          }
        ],
        "sample": "\n    // Find all relevant files\n    const componentFiles = glob('src/**/*.{tsx,jsx}', { ignore: 'node_modules/**' });\n    const styleFiles = glob('src/**/*.{css,scss}', { ignore: 'node_modules/**' });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd0ca838ecd85c4ea5ccf0d0aaccf322",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 227,
            "endLine": 231
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 268,
            "endLine": 272
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "    startRecording: vi.fn(),\n    stopRecording: vi.fn(),\n    pauseRecording: vi.fn(),\n    resumeRecording: vi.fn(),\n    clearRecordings: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35817fcfd03eaa045d1556f301280edf",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 376,
            "endLine": 380
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 475,
            "endLine": 479
          }
        ],
        "sample": "      const { result } = renderHook(() => \n        useMurmubaraEngine({ autoInitialize: true })\n      );\n\n      await waitFor(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6f42ecfea662fcc95e037261a0f6227c",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 240,
            "endLine": 244
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "          isRecording: true\n        }\n      };\n      \n      render(<AudioRecorder {...recordingProps} />);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0dbbab3d67d03e061c15b02f5f13ac5c",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 209,
            "endLine": 213
          }
        ],
        "sample": "      \n      await waitFor(() => {\n        expect(props.onStartRecording).toHaveBeenCalledTimes(1);\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c8ccae9ae54bc3a31833f075446cba44",
        "severity": "low",
        "occurrences": 4,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>\n    );\n    \n    expect(screen.getByText('Component Error')).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ca972716e267ba0b399633dba6c0b18c",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "\n  // Calculate hash for code blocks\n  hashCode(code) {\n    return crypto.createHash('md5').update(code.trim()).digest('hex');\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ae06624fccd62ec6c0fe02e9fb3561e",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 46,
            "endLine": 50
          }
        ],
        "sample": "\n    global.URL.createObjectURL = vi.fn(() => 'blob:mock-url')\n    global.URL.revokeObjectURL = vi.fn()\n    \n    // Mock fetch for WASM...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "303f7823fee960dfb238e69ccb18d6ff",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 205,
            "endLine": 209
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 231,
            "endLine": 235
          }
        ],
        "sample": "      await user.upload(screen.getByLabelText('Upload audio file'), file)\n      await user.click(screen.getByText('Process Audio'))\n      \n      await waitFor(() => {\n        // AudioPlayer should be ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "629750b53b67832d035c70a24a1e47b6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 279,
            "endLine": 283
          }
        ],
        "sample": "      \n      await waitFor(() => {\n        // AudioPlayer should be rendered\n        expect(screen.getByRole('button', { name: /play/i })).toBeInTheDocument()\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5191011216f37ace954436702ab088f8",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 283,
            "endLine": 287
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 284,
            "endLine": 288
          }
        ],
        "sample": "      \n      // Track URL creation\n      const createCalls = (URL.createObjectURL as any).mock.calls.length\n      \n      unmount()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6fac14ee87d638930762a6f6980700d6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "  \n  // Check supported features\n  const features = engine.getSupportedFeatures();\n  console.log('Supported features:', features);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e1d6957fbbd58ae9b6cdad1ce0e3b5b",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 730,
            "endLine": 734
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1187,
            "endLine": 1191
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1227,
            "endLine": 1231
          }
        ],
        "sample": "      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await engine.destroy(true);\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f8a45ae10f794ddba13b190ba6f1a0dd",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 731,
            "endLine": 735
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1188,
            "endLine": 1192
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1228,
            "endLine": 1232
          }
        ],
        "sample": "      \n      await engine.destroy(true);\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aeaae113cdac0bbc2990a94ecf8e0765",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 732,
            "endLine": 736
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1189,
            "endLine": 1193
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1229,
            "endLine": 1233
          }
        ],
        "sample": "      await engine.destroy(true);\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc5f8ce30b2ae2af035efcc915f95109",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 382,
            "endLine": 386
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 236,
            "endLine": 240
          }
        ],
        "sample": "      \n      expect(global.URL.revokeObjectURL).toHaveBeenCalledWith('blob:mock-url');\n    });\n  });\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bcc5aaff05d89dbf4f6f26fee9ca857d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "      // Check that Blob was created with processor code\n      expect((global as any).Blob).toHaveBeenCalled();\n      const blobCall = (global as any).Blob.mock.calls[0];\n      const processorCode = b...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "046294617ac7dffe110009e34c885067",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "      const mockAudioContext = {\n        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)\n        },\n        sampleRate: 48000...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "38af11b7197bebd6a1aeaf22adf2d692",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)\n        },\n        sampleRate: 48000\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c908c39596315adae5386e98d7c98ca",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 202,
            "endLine": 206
          }
        ],
        "sample": "        sampleRate: 48000\n      };\n      \n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9197409418d91421b8350e2d920853ce",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "      };\n      \n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();\n      (global as any).AudioWorkletNode = vi.fn(() => mockWorkletNode);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4886e9459f3cf601729c446fcefeab58",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "      \n      // Set up performance callback\n      const performanceCallback = vi.fn();\n      engine.onPerformanceMetrics(performanceCallback);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5777525d74625c6de048ef7ae4bac3ff",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "      // Mock failed dynamic import\n      vi.doMock('@jitsi/rnnoise-wasm', () => {\n        throw new Error('Module not found');\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6f6837e2515be4780d5c054d0899a6d4",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 111,
            "endLine": 115
          }
        ],
        "sample": "        \n        // Track when overflow cleanup happens\n        if (prevLength === MAX_CHUNKS_IN_MEMORY && state.chunks.length === CHUNKS_TO_KEEP_ON_OVERFLOW) {\n          overflowCount++;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "989658865cbf3cd46830c41d917dad76",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 274,
            "endLine": 278
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 493,
            "endLine": 497
          }
        ],
        "sample": "\n      const functions = createRecordingFunctions({\n        isInitialized: true,\n        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff44d0d48fd2f69276775466f274a27d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 423,
            "endLine": 427
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 458,
            "endLine": 462
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 477,
            "endLine": 481
          }
        ],
        "sample": "        recordingManager: mockRecordingManager,\n        initialize: mockInitialize\n      });\n\n      functions.clearRecordings();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2df9850fcb96b492684bfaf1fbcf21f6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 424,
            "endLine": 428
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 459,
            "endLine": 463
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 478,
            "endLine": 482
          }
        ],
        "sample": "        initialize: mockInitialize\n      });\n\n      functions.clearRecordings();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc19e6165b625650ecfda9f4ae8b0910",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 695,
            "endLine": 699
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 756,
            "endLine": 760
          }
        ],
        "sample": "        };\n        \n        recorder.start = vi.fn(() => {\n          recorder.state = 'recording';\n        });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "87e5a671008cff6ebbf9455f3ca5277f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 696,
            "endLine": 700
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 757,
            "endLine": 761
          }
        ],
        "sample": "        \n        recorder.start = vi.fn(() => {\n          recorder.state = 'recording';\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ed3ca6368a9d9afec10777b42a4bcf3",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 697,
            "endLine": 701
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 758,
            "endLine": 762
          }
        ],
        "sample": "        recorder.start = vi.fn(() => {\n          recorder.state = 'recording';\n        });\n        \n        recorder.stop = vi.fn(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3919ed4208ba3f3c34c982d612f490d3",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 698,
            "endLine": 702
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 759,
            "endLine": 763
          }
        ],
        "sample": "          recorder.state = 'recording';\n        });\n        \n        recorder.stop = vi.fn(() => {\n          recorder.state = 'inactive';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "57adb9902d48c199ae9e373ec69aa06d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 222,
            "endLine": 226
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 283,
            "endLine": 287
          }
        ],
        "sample": "        onChunkProcessed\n      );\n      \n      const processedRecorder = mediaRecorderInstances[0];\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5a0490434e318e910775c79e44bfc8b1",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 343,
            "endLine": 347
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 365,
            "endLine": 369
          }
        ],
        "sample": "      const mockStream = { getTracks: vi.fn(() => []) } as any;\n      let recorderInstance: any;\n      \n      (global.MediaRecorder as any) = vi.fn().mockImplementation(() => {\n        recorderInstanc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ca3eb8156f328ef2051a67136610225",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 303,
            "endLine": 307
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 344,
            "endLine": 348
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 366,
            "endLine": 370
          }
        ],
        "sample": "      let recorderInstance: any;\n      \n      (global.MediaRecorder as any) = vi.fn().mockImplementation(() => {\n        recorderInstance = {\n          start: vi.fn(() => { recorderInstance.state = 'r...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd3e423e1e437c316e68daca5e7f9050",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 374,
            "endLine": 378
          }
        ],
        "sample": "        };\n        return recorderInstance;\n      });\n      \n      await recordingManager.startCycle(mockStream, mockStream, 8000, vi.fn());...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "658b685940d015c4fad16c8391957f77",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 438,
            "endLine": 442
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 712,
            "endLine": 716
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 777,
            "endLine": 781
          }
        ],
        "sample": "\n      // Start recording\n      await recordingManager.startCycle(\n        processedStream,\n        originalStream,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "048309e94fab4f32df0f10e577246433",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 449,
            "endLine": 453
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 652,
            "endLine": 656
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 653,
            "endLine": 657
          }
        ],
        "sample": "        mediaRecorderInstance.ondataavailable({ \n          data: new Blob([], { type: 'audio/webm' }) \n        });\n      }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f555cb6570f43964ea14f30e01adcc90",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 467,
            "endLine": 471
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 532,
            "endLine": 536
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 598,
            "endLine": 602
          }
        ],
        "sample": "      \n      (global.MediaRecorder as any) = vi.fn().mockImplementation((stream) => {\n        const recorder = {\n          start: vi.fn(),\n          stop: vi.fn(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9d7c912e048c793ac945abf0119ccc8a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 473,
            "endLine": 477
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 540,
            "endLine": 544
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 606,
            "endLine": 610
          }
        ],
        "sample": "          }),\n          state: 'recording',\n          ondataavailable: null,\n          onstop: null,\n          onerror: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0bbc1b72eae835582ad36d1d6e3dd154",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 474,
            "endLine": 478
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 541,
            "endLine": 545
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 607,
            "endLine": 611
          }
        ],
        "sample": "          state: 'recording',\n          ondataavailable: null,\n          onstop: null,\n          onerror: null,\n        };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68afb6bd36ade79e5bfe66b1bbb071f5",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 489,
            "endLine": 493
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 557,
            "endLine": 561
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 628,
            "endLine": 632
          }
        ],
        "sample": "      });\n\n      const processedStream = { getTracks: () => [] } as any;\n      const originalStream = { getTracks: () => [] } as any;\n      const chunks: ProcessedChunk[] = [];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9ec9cc368f1964ee434127bb86e5a187",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 490,
            "endLine": 494
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 558,
            "endLine": 562
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 629,
            "endLine": 633
          }
        ],
        "sample": "\n      const processedStream = { getTracks: () => [] } as any;\n      const originalStream = { getTracks: () => [] } as any;\n      const chunks: ProcessedChunk[] = [];\n      const onChunkProcessed = (c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98cdad31be91ab7429b3ab1b015a55cf",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 491,
            "endLine": 495
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 559,
            "endLine": 563
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 630,
            "endLine": 634
          }
        ],
        "sample": "      const processedStream = { getTracks: () => [] } as any;\n      const originalStream = { getTracks: () => [] } as any;\n      const chunks: ProcessedChunk[] = [];\n      const onChunkProcessed = (ch...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a3384c18fb8c3cc242dd65811fb3027d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 492,
            "endLine": 496
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 560,
            "endLine": 564
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 631,
            "endLine": 635
          }
        ],
        "sample": "      const originalStream = { getTracks: () => [] } as any;\n      const chunks: ProcessedChunk[] = [];\n      const onChunkProcessed = (chunk: ProcessedChunk) => chunks.push(chunk);\n\n      await recor...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ed98082ec50f412e782a96d97395988",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 493,
            "endLine": 497
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 561,
            "endLine": 565
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 632,
            "endLine": 636
          }
        ],
        "sample": "      const chunks: ProcessedChunk[] = [];\n      const onChunkProcessed = (chunk: ProcessedChunk) => chunks.push(chunk);\n\n      await recordingManager.startCycle(\n        processedStream,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c69bacf6ff8dc6bb891d714521c93d15",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 494,
            "endLine": 498
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 562,
            "endLine": 566
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 633,
            "endLine": 637
          }
        ],
        "sample": "      const onChunkProcessed = (chunk: ProcessedChunk) => chunks.push(chunk);\n\n      await recordingManager.startCycle(\n        processedStream,\n        originalStream,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cb4df755f5e7b2f09222c5b5d4baf84",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 505,
            "endLine": 509
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 506,
            "endLine": 510
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 644,
            "endLine": 648
          }
        ],
        "sample": "        // Too small - should be rejected\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob(['x'], { type: 'audio/webm' }) // 1 byte\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a4b204529dc78b6cdbaf3cf3bb3b5f75",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 691,
            "endLine": 695
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 752,
            "endLine": 756
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 354,
            "endLine": 358
          }
        ],
        "sample": "          stop: vi.fn(),\n          state: 'inactive',\n          ondataavailable: null,\n          onstop: null,\n        };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8401fd3e626309caf6984d817312bdd6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 692,
            "endLine": 696
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 753,
            "endLine": 757
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 355,
            "endLine": 359
          }
        ],
        "sample": "          state: 'inactive',\n          ondataavailable: null,\n          onstop: null,\n        };\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "31f955c77f0f8cad91d0ceb03eaaa74f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 205,
            "endLine": 209
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 237,
            "endLine": 241
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 332,
            "endLine": 336
          }
        ],
        "sample": "        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });\n      \n      // Should have processed frames\n      expect(mockEngine.process).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1aaf113566b94c050e718926c341539f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 268,
            "endLine": 272
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 299,
            "endLine": 303
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 300,
            "endLine": 304
          }
        ],
        "sample": "      \n      // Should have attenuated the output\n      const avgOutput = outputBuffer.reduce((a, b) => a + Math.abs(b), 0) / outputBuffer.length;\n      const avgInput = inputBuffer.reduce((a, b) => a...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f2d38865505fe4378dcd4a2d43a6283",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 409,
            "endLine": 413
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 444,
            "endLine": 448
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 332,
            "endLine": 336
          }
        ],
        "sample": "      \n      await act(async () => {\n        await result.current.processStream(mockStream);\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "827b674843dac94f6b5dd8276ccea2bf",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 462,
            "endLine": 466
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 494,
            "endLine": 498
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 526,
            "endLine": 530
          }
        ],
        "sample": "      \n      const inputBuffer = new Float32Array(4096);\n      inputBuffer.fill(0.5);\n      \n      const outputBuffer = new Float32Array(4096);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ebdce6cd3e7754917196de4443dd284f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 182,
            "endLine": 186
          }
        ],
        "sample": "\n      // Verify status is displayed\n      expect(screen.getByTestId('engine-status')).toHaveTextContent('uninitialized')\n      \n      // AudioDemo doesn't log this message - test was based on incorre...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0599d5e9f3476bdbf86c67a6af2862c7",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "\n      // Wait for at least 2 periodic checks (500ms intervals)\n      await waitFor(() => {\n        expect(mockGetEngineStatus).toHaveBeenCalledTimes(3)\n      }, { timeout: 1500 })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "018d857204cb3b72e96e250aa3313769",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 304,
            "endLine": 308
          }
        ],
        "sample": "      // Based on log: \"🌟 [LIFECYCLE] Component mounted, setting up cleanup handler\"\n      mockGetEngineStatus.mockReturnValue('ready')\n      mockProcessFile.mockResolvedValue(new ArrayBuffer(1000))\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79cae4d5c03d52f355182ce2b83b2a20",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "\n      // Wait for URLs to be created (from auto-processing)\n      await waitFor(() => {\n        expect(URL.createObjectURL).toHaveBeenCalled()\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6bcad2999c82e4ebb516cfe5314f1950",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 292,
            "endLine": 296
          }
        ],
        "sample": "\n      // Count calls before unmount\n      const callsBeforeUnmount = mockGetEngineStatus.mock.calls.length\n\n      unmount()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0d1d3901f98b7b94b90a6f27bc6bdf7",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 318,
            "endLine": 322
          }
        ],
        "sample": "          \n          await new Promise(resolve => setTimeout(resolve, 5));\n        });\n      }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a7235583ddcd6cedd811647fffc6dfaf",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 247,
            "endLine": 251
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 256,
            "endLine": 260
          }
        ],
        "sample": "\n      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "353002edfd49347ac354ff488488ed2f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 248,
            "endLine": 252
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 96,
            "endLine": 100
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 257,
            "endLine": 261
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "812c5e7beff9f57383841aad8301432e",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "    });\n\n    await engine.initialize();\n\n    expect(engine.isUsingAudioWorklet()).toBe(false);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e3c24daf2839179713b84f69be0b1d18",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "\n    engine = new MurmubaraEngine({\n      useAudioWorklet: true,\n      logLevel: 'none'\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c32677a4525455000bd4335eff093f38",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "          algorithm: 'rnnoise',\n        }));\n\n        await act(async () => {\n          await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "110735fc17c9da98f4851d5a17957a32",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 204,
            "endLine": 208
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 205,
            "endLine": 209
          }
        ],
        "sample": "\n        // Simulate quality metric for each chunk\n        const quality = 0.8 + Math.random() * 0.15; // 80-95% quality\n        chunkQualities.push(quality);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c06eb21bced0f802f79fd8223b34d499",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "    \n    // Audio methods\n    play: vi.fn().mockResolvedValue(undefined),\n    pause: vi.fn(),\n    load: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2ce2860f0aa213644e79dcef8259579",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "        inputLevel: 0,\n        outputLevel: 0,\n        timestamp: Date.now(),\n        frameCount: 0,\n        droppedFrames: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d8275a3b398497b0224b5fb24fec76e",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 841,
            "endLine": 845
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 842,
            "endLine": 846
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 875,
            "endLine": 879
          }
        ],
        "sample": "\n      // Get the audio processing callback\n      const processor = mockAudioContext.createScriptProcessor.mock.results[0].value;\n      const audioCallback = processor.onaudioprocess;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d6b8451334ea997e2c482dfedf6faaf8",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1083,
            "endLine": 1087
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1125,
            "endLine": 1129
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1126,
            "endLine": 1130
          }
        ],
        "sample": "        mockStateManager.isInState.mockReturnValue(true);\n        \n        // Trigger processing end\n        engine.emit('processing-end', 'test-stream');\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e82399303dfeeb6fb059cfd8a8440ef7",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "      \n      // Start playing chunk 1\n      await playbackManager.toggleChunkPlayback(mockChunk, 'processed', onPlayStateChange);\n      onPlayStateChange.mockClear();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2115929c4f1cd7e158f496cdfcca809a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 888,
            "endLine": 892
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 904,
            "endLine": 908
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initialize();\n      });\n\n      unmount();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "414f05d5c649a9d4eb8d745888d2e68f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 276,
            "endLine": 280
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 287,
            "endLine": 291
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 391,
            "endLine": 395
          }
        ],
        "sample": "\n      await act(async () => {\n        await result.current.destroy();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d3298b7729f96f6a4e5ca9dadf702e1",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 393,
            "endLine": 397
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 432,
            "endLine": 436
          }
        ],
        "sample": "      (global.MediaRecorder as any).mockImplementation(() => mockMediaRecorder);\n      \n      const { result } = renderHook(() => useMurmubaraEngine());\n\n      await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd640eccee008d5cd0c6786296abd403",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 637,
            "endLine": 641
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 683,
            "endLine": 687
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 734,
            "endLine": 738
          }
        ],
        "sample": "        audioContextState: 'running',\n        processingLatency: 10,\n        memoryUsage: 1000000,\n        streamCount: 1,\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4096e98335237923bc709b86a961852d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "\n      // Process multiple times to accumulate\n      for (let i = 0; i < 5; i++) {\n        mockScriptProcessor.onaudioprocess(event);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b88500536f6448ad16e5bdcaaadfc28",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 51,
            "endLine": 55
          }
        ],
        "sample": "      // Mock fetch to return non-webm blob\n      global.fetch = vi.fn().mockResolvedValue({\n        blob: vi.fn().mockResolvedValue(mockBlob)\n      } as any);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fec492b8a66d5dd20ed66668db083082",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "      \n      // Simular inicialización\n      const state = mockCreate()\n      expect(state).toBe(123)\n      expect(mockCreate).toHaveBeenCalledTimes(1)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6b87b8da77d919e6e7bd10389441bab5",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/api.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 86,
            "endLine": 90
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 70,
            "endLine": 74
          }
        ],
        "sample": "  \n  if (gain < 0) {\n    throw new RangeError('Input gain cannot be negative');\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6270fc5d2e662ca6ffccaa81396b872a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "    render(\n      <SyncedWaveforms\n        originalAudioUrl={mockAudioUrl1}\n        processedAudioUrl={mockAudioUrl2}\n      />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51a0e4cd7487e9a0b34d3b4b9f172231",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "      <SyncedWaveforms\n        originalAudioUrl={mockAudioUrl1}\n        processedAudioUrl={mockAudioUrl2}\n      />\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "da86fcb707b97d754ee3b4d4508b8595",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 84,
            "endLine": 88
          }
        ],
        "sample": "        originalAudioUrl={mockAudioUrl1}\n        processedAudioUrl={mockAudioUrl2}\n      />\n    );\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd778ffb19b6fe2903e537114096e6f3",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/audio-player/audio-player.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/audio-player/audio-player.tsx",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "packages/murmuraba/src/components/audio-player/audio-player.tsx",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "packages/murmuraba/src/components/audio-player/audio-player.tsx",
            "startLine": 215,
            "endLine": 219
          }
        ],
        "sample": "\n    // Clear existing timeout\n    if (seekTimeoutRef.current) {\n      clearTimeout(seekTimeoutRef.current);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "07afa247735fd164b37f8e0918241802",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 314,
            "endLine": 318
          }
        ],
        "sample": "          averageNoiseReduction={0}\n          selectedChunk={null}\n          {...mockHandlers}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52f9fed2049b565cce23da8d2b273f18",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 403,
            "endLine": 407
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 438,
            "endLine": 442
          }
        ],
        "sample": "      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={30}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e47f6823d43fc5721ceb1ee6f19e163",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 316,
            "endLine": 320
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 489,
            "endLine": 493
          }
        ],
        "sample": "          {...mockHandlers}\n        />\n      );\n\n      const playButton = screen.getByRole('button', { name: /Play processed chunk 1/i });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6b26f14efdec68a533b3a22824173f83",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={25}\n          selectedChunk=\"chunk-0\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9083b2c313c86ca8e22709013770567",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "        chunkIndex={0}\n      />\n    );\n\n    const vadDisplay = screen.getByText('Voice Activity Detection').closest('.vad-display');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b2a0a77a93023e0b4e73c3fd12b98ad",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 298,
            "endLine": 302
          }
        ],
        "sample": "          const y = v * canvas.height / 2;\n\n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d5ad52df3b36c672b336f6e9b2452513",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 299,
            "endLine": 303
          }
        ],
        "sample": "\n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab3657bb2a4532bd2c882e26b5f969a9",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 300,
            "endLine": 304
          }
        ],
        "sample": "          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc5bd8a252a17dc4bc40b162a978cdbc",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 305,
            "endLine": 309
          }
        ],
        "sample": "          x += sliceWidth;\n        }\n\n        ctx.lineTo(canvas.width, canvas.height / 2);\n        ctx.stroke();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "162bedd19d2a2dc25acd01e278a3fdcc",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 325,
            "endLine": 329
          }
        ],
        "sample": "        ctx.strokeStyle = '#2E3039';\n        ctx.strokeRect(10, 10, 100, 10);\n        \n        // Level text\n        ctx.fillStyle = '#CACBDA';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "897af3bdfb1403a0359855ab2e944e9c",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 268,
            "endLine": 272
          }
        ],
        "sample": "    // Clear canvas with gradient background\n    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n    gradient.addColorStop(0, '#0A0B0E');\n    gradient.addColorStop(1, '#13141A');\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52e840947182a27a1ca3f085bf2957fe",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 269,
            "endLine": 273
          }
        ],
        "sample": "    const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\n    gradient.addColorStop(0, '#0A0B0E');\n    gradient.addColorStop(1, '#13141A');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db94d8d692ceb3f653dd5adf7e176f19",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 270,
            "endLine": 274
          }
        ],
        "sample": "    gradient.addColorStop(0, '#0A0B0E');\n    gradient.addColorStop(1, '#13141A');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "585d907f79a8940874f5e33644cb2829",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c133d37ab7e3bfc392d21b5fb3a4a7dc",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 530,
            "endLine": 534
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 619,
            "endLine": 623
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "    \n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = 0;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e8afad76d1f96257d0d8b6a729278ab",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 531,
            "endLine": 535
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 620,
            "endLine": 624
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = 0;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1b2e2be09b2a4c6f2d0eb25fa3f34eb9",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "      createMediaStreamSource: vi.fn(),\n      createMediaStreamDestination: vi.fn(() => ({\n        stream: new MediaStream()\n      })),\n      createScriptProcessor: vi.fn(() => ({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d19e8ac95c53c871c750ddc261e27eaf",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 129,
            "endLine": 133
          }
        ],
        "sample": "      createMediaStreamDestination: vi.fn(() => ({\n        stream: new MediaStream()\n      })),\n      createScriptProcessor: vi.fn(() => ({\n        connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb2d57b203713a811adafad4a4dc7927",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "        stream: new MediaStream()\n      })),\n      createScriptProcessor: vi.fn(() => ({\n        connect: vi.fn(),\n        disconnect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7cf18002680bde47486ef3ce1edbcda7",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 131,
            "endLine": 135
          }
        ],
        "sample": "      })),\n      createScriptProcessor: vi.fn(() => ({\n        connect: vi.fn(),\n        disconnect: vi.fn(),\n        onaudioprocess: null...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65669fe07337a735129a52be679d1115",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "      createScriptProcessor: vi.fn(() => ({\n        connect: vi.fn(),\n        disconnect: vi.fn(),\n        onaudioprocess: null\n      })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f27c7690308c56d747cc8ff341871300",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 141,
            "endLine": 145
          }
        ],
        "sample": "      })),\n      createBiquadFilter: vi.fn(() => ({\n        type: 'notch',\n        frequency: { value: 1000 },\n        Q: { value: 30 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a415d553399f89065f317922b755cf1d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 142,
            "endLine": 146
          }
        ],
        "sample": "      createBiquadFilter: vi.fn(() => ({\n        type: 'notch',\n        frequency: { value: 1000 },\n        Q: { value: 30 },\n        gain: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b410f13d0eca733111218c488bd6893",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 143,
            "endLine": 147
          }
        ],
        "sample": "        type: 'notch',\n        frequency: { value: 1000 },\n        Q: { value: 30 },\n        gain: { value: 0 },\n        connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "735b6649f844c3fbc25db3bd5acbd09d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 144,
            "endLine": 148
          }
        ],
        "sample": "        frequency: { value: 1000 },\n        Q: { value: 30 },\n        gain: { value: 0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8a2599d2f30024b4e7482a59ecca5721",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "        Q: { value: 30 },\n        gain: { value: 0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc472aa511adb0c5d0360a510323423a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 146,
            "endLine": 150
          }
        ],
        "sample": "        gain: { value: 0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),\n      sampleRate: 48000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "289b254cfdf311a5854782df33d772b8",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 147,
            "endLine": 151
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),\n      sampleRate: 48000,\n      state: 'running',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9dd8902fbb66f32c4f3d9932228f6eb2",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 148,
            "endLine": 152
          }
        ],
        "sample": "        disconnect: vi.fn()\n      })),\n      sampleRate: 48000,\n      state: 'running',\n      destination: { maxChannelCount: 2 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef3e66b6b5b9013c4e1dc3483348a49b",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "      })),\n      sampleRate: 48000,\n      state: 'running',\n      destination: { maxChannelCount: 2 },\n      close: vi.fn().mockResolvedValue(undefined)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fb9688462ca8e9304946a5f391aeec4d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 213,
            "endLine": 217
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "        loadRNNoiseModule: vi.fn().mockResolvedValue({\n          _rnnoise_create: vi.fn().mockReturnValue(1),\n          _rnnoise_destroy: vi.fn(),\n          _rnnoise_process_frame: vi.fn().mockReturnV...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97a8d20f9bafe27f2c41cb4a64b32e7e",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "          _rnnoise_create: vi.fn().mockReturnValue(1),\n          _rnnoise_destroy: vi.fn(),\n          _rnnoise_process_frame: vi.fn().mockReturnValue(0.5),\n          _malloc: vi.fn().mockReturnValue(1...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bdadc6cca6d7ec46afd2606430a586c6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "          _rnnoise_destroy: vi.fn(),\n          _rnnoise_process_frame: vi.fn().mockReturnValue(0.5),\n          _malloc: vi.fn().mockReturnValue(1000),\n          _free: vi.fn(),\n          HEAPF32: new ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c943928c904dd4c2b3c1ba1445c01050",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "          _rnnoise_process_frame: vi.fn().mockReturnValue(0.5),\n          _malloc: vi.fn().mockReturnValue(1000),\n          _free: vi.fn(),\n          HEAPF32: new Float32Array(10000)\n        })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2372c101bc45d70ff6413a10cf340b3",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "          _malloc: vi.fn().mockReturnValue(1000),\n          _free: vi.fn(),\n          HEAPF32: new Float32Array(10000)\n        })\n      }));...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "62634c4b0d4ff366f4548a4660500947",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "      \n      // Check environment support first\n      if (!this.checkEnvironmentSupport()) {\n        throw new Error('Environment not supported: Missing required APIs');\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2e948f4a54819df4613b364b0a72e6d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 418,
            "endLine": 422
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 419,
            "endLine": 423
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 420,
            "endLine": 424
          }
        ],
        "sample": "      \n      // Fake VAD for degraded mode\n      const vad = Math.min(1.0, voiceActivity / frame.length / 0.1);\n      return { output, vad };\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bbdcb05ddb8cbd145e2d34d30f06c28a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 423,
            "endLine": 427
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 424,
            "endLine": 428
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 425,
            "endLine": 429
          }
        ],
        "sample": "    \n    // Normal WASM processing\n    if (!this.inputPtr || !this.outputPtr) {\n      throw new Error('WASM module not properly initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f12c85d47cf6ecaa103519145d73e87f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 733,
            "endLine": 737
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 734,
            "endLine": 738
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 735,
            "endLine": 739
          }
        ],
        "sample": "      \n      // Update AGC if enabled\n      if (agc && !isPaused && !isStopped) {\n        agc.updateGain();\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "828990fbd5658e754deab7de403c116d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 738,
            "endLine": 742
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 739,
            "endLine": 743
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 740,
            "endLine": 744
          }
        ],
        "sample": "      \n      // Add to buffer\n      for (let i = 0; i < input.length; i++) {\n        inputBuffer.push(input[i]);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "13e88eb66e0570bdf83fcf15a3412688",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 743,
            "endLine": 747
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 744,
            "endLine": 748
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 745,
            "endLine": 749
          }
        ],
        "sample": "      \n      // If using chunk processing, add samples to chunk processor with VAD data\n      if (chunkProcessor && !isPaused && !isStopped) {\n        chunkProcessor.addSamples(input);\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e57d675eafbe89c902355069a1c85854",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 776,
            "endLine": 780
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 777,
            "endLine": 781
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 778,
            "endLine": 782
          }
        ],
        "sample": "        \n        // Log significant VAD activity for debugging\n        if (vad > 0.01) {\n          this.logger.debug(`📊 VAD Update: current=${vad.toFixed(3)}, avg=${this.metricsManager.getAverageVAD(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00118aa5ef0015eceee408c33b64c8f4",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1035,
            "endLine": 1039
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1036,
            "endLine": 1040
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1037,
            "endLine": 1041
          }
        ],
        "sample": "      \n      // Clear timers\n      if (this.cleanupTimer) {\n        clearTimeout(this.cleanupTimer);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c4274a169e8d20ce985d79b430e484f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1377,
            "endLine": 1381
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1378,
            "endLine": 1382
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1379,
            "endLine": 1383
          }
        ],
        "sample": "      \n      // Convert PCM16 to Float32\n      for (let i = 0; i < 480; i++) {\n        frame[i] = pcmData[frameStart + i] / 32768.0;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "440e55e4ce308467439e34378940679c",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "      \n      // Check if AudioWorklet class exists\n      if (!(window as any).AudioWorklet) {\n        return false;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5a48c4226defa1506cf563376092d9ae",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 395,
            "endLine": 399
          }
        ],
        "sample": "    if (!this.isInitialized || !this.audioContext) {\n      throw new Error('AudioWorkletEngine not initialized');\n    }\n    \n    // Create the AudioWorkletNode...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee06a71595e42a8befeb5786321a9e4a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 389,
            "endLine": 393
          }
        ],
        "sample": "        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      act(() => {\n        result.current.setInputGain(1.5);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "231f0e141dbb28b9dc4f8832c18d9c35",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 172,
            "endLine": 176
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 390,
            "endLine": 394
          }
        ],
        "sample": "      });\n      \n      act(() => {\n        result.current.setInputGain(1.5);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "754d160a7904d22c544e0cd2cf877465",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 156,
            "endLine": 160
          }
        ],
        "sample": "    // Trigger download\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b60d71bad5011df28138ec0a13852e53",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "    // Revoke all URLs before clearing\n    chunks.forEach(chunk => {\n      this.urlManager.revokeChunkUrls(chunk.id);\n    });\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "be93e52de462f3b2d3d44eeaac629eaf",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "\n// Recording quality settings\nexport const MIN_VALID_BLOB_SIZE = 100; // 100 bytes minimum for valid audio\nexport const DEFAULT_CHUNK_DURATION = 8; // seconds\nexport const RECORDING_UPDATE_INTERVAL =...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f35068d2941d2478ddab817c48ce3ae",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 211,
            "endLine": 215
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 213,
            "endLine": 217
          }
        ],
        "sample": "    \n    // Stop any ongoing recording\n    if (recordingState.isRecording) {\n      stopRecording();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46b2aca9b8ac440455947be82adf1d92",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "\n    // Try metrics provider\n    if (this.metricsProvider) {\n      return this.metricsProvider.getAggregatedMetrics(startTime, endTime);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00c2466fd6ed7d6a4f372562c99743ad",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "      totalInputEnergy: 0,\n      totalOutputEnergy: 0,\n      peakInput: 0,\n      peakOutput: 0,\n      startTime: Date.now(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b38ac5d08d74167bc38c4a1fef9d4105",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "      totalOutputEnergy: 0,\n      peakInput: 0,\n      peakOutput: 0,\n      startTime: Date.now(),\n      totalFrames: 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6207573f3317911754e6d780183e2658",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "      peakInput: 0,\n      peakOutput: 0,\n      startTime: Date.now(),\n      totalFrames: 0\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "051d8c045af9c449d0069be05765f2c6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 288,
            "endLine": 292
          },
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 289,
            "endLine": 293
          }
        ],
        "sample": "\n      chunks.forEach(chunk => chunk.data.fill(Math.random()));\n\n      const results = await processor.processBatch(chunks);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b90990ee5f370a717968207a222fe35",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 372,
            "endLine": 376
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 373,
            "endLine": 377
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 374,
            "endLine": 378
          }
        ],
        "sample": "\n    // Accumulate metrics\n    this.accumulatedMetrics.totalNoiseReduction += Math.max(0, Math.min(100, frameNoiseReduction));\n    this.accumulatedMetrics.frameCount++;\n    this.accumulatedMetrics.tot...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9dea092973edf40cd2921439ef489d3",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "  \n  // Remove from queue\n  private removeFromQueue(resource: PreloadResource) {\n    this.preloadQueue = this.preloadQueue.filter(r => r.url !== resource.url);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9a73360e6de635afcc7c6414b38a5dd1",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 117,
            "endLine": 121
          }
        ],
        "sample": "\n      // Extract engine status logs\n      if (msg.text().includes('Engine') || msg.text().includes('engine')) {\n        logs.engineStatus.push(logEntry);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa21c9132b0670a99a7bf68e736515f5",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 48,
            "endLine": 52
          }
        ],
        "sample": "                \n                // Check WebAssembly.instantiateStreaming support\n                if ('instantiateStreaming' in WebAssembly) {\n                    log('WebAssembly.instantiateStreamin...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10fb52cc787aebf7a2df37ab4b9b93ac",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "      \n      // Track initial listeners\n      const initialListeners = (window as any).eventListeners?.length || 0\n      \n      unmount()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8fb4b02ef2c46d3ad1aa4f3ad5eae4a0",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "      \n      // 2. Upload or select audio file\n      const fileInput = screen.getByLabelText(/upload|select/i)\n      const file = new File(['audio data'], 'test.wav', { type: 'audio/wav' })\n      fire...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0fae40bdfd0dc1f30c089a14f4b5767f",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "public/sw.js",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "public/sw.js",
            "startLine": 137,
            "endLine": 141
          }
        ],
        "sample": "        \n        // Return offline page for navigation requests\n        if (request.mode === 'navigate') {\n          return caches.match('/index.html');\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9512c0a6562640926b3f9a07afba1d50",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 248,
            "endLine": 252
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "        console.log(`   Fix: ${issue.fix}`);\n        console.log('');\n      });\n    }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9db2e52a647b34a25c2128e8a00a5648",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/App.tsx",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "src/App.tsx",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "src/App.tsx",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "    \n    // Export Actions\n    exportChunkAsWav,\n    exportChunkAsMp3,\n    downloadAllChunksAsZip,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6072564ce89c9538ccee3a4f2c55d877",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 67,
            "endLine": 71
          }
        ],
        "sample": "      processFile: vi.fn(),\n      startRecording: vi.fn(),\n      stopRecording: vi.fn(),\n      pauseRecording: vi.fn(),\n      resumeRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3eedf1643bb08a2f187ec2a6b6c3e093",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 228,
            "endLine": 232
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 69,
            "endLine": 73
          }
        ],
        "sample": "      stopRecording: vi.fn(),\n      pauseRecording: vi.fn(),\n      resumeRecording: vi.fn(),\n      clearRecordings: vi.fn(),\n      toggleChunkPlayback: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "607eb4c682ffeffec37a3db94d5fa678",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 229,
            "endLine": 233
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 270,
            "endLine": 274
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 70,
            "endLine": 74
          }
        ],
        "sample": "      pauseRecording: vi.fn(),\n      resumeRecording: vi.fn(),\n      clearRecordings: vi.fn(),\n      toggleChunkPlayback: vi.fn(),\n      toggleChunkExpansion: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0cf04bd6f9d8a9e0a479941482e7d491",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 271,
            "endLine": 275
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 71,
            "endLine": 75
          }
        ],
        "sample": "      resumeRecording: vi.fn(),\n      clearRecordings: vi.fn(),\n      toggleChunkPlayback: vi.fn(),\n      toggleChunkExpansion: vi.fn(),\n      exportChunkAsWav: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d00d387c035dd369b483f73998f1e6eb",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 272,
            "endLine": 276
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "      clearRecordings: vi.fn(),\n      toggleChunkPlayback: vi.fn(),\n      toggleChunkExpansion: vi.fn(),\n      exportChunkAsWav: vi.fn(),\n      exportChunkAsMp3: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cf8aeb1526b648ceb1a799ac984bc543",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/App.startup.test.tsx",
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 232,
            "endLine": 236
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 273,
            "endLine": 277
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "      toggleChunkPlayback: vi.fn(),\n      toggleChunkExpansion: vi.fn(),\n      exportChunkAsWav: vi.fn(),\n      exportChunkAsMp3: vi.fn(),\n      downloadAllChunksAsZip: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "571a71a8481a707a2eac13b5b4967465",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 170,
            "endLine": 174
          }
        ],
        "sample": "    mockEngineReturn.isLoading = false;\n\n    await act(async () => {\n      render(<TestEngineComponent />);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae1af533a23b89e9cac7008c24fb636d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 79,
            "endLine": 83
          }
        ],
        "sample": "    \n    // Log significant activity\n    if (currentVad > 0.01) {\n      console.log(`🎯 RealTimeVad: VAD Update: current=${currentVad.toFixed(3)}, avg=${vadHistoryRef.current.length > 0 ? (vadHistoryR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd9171d39bb9368562b4d88fc4d115e6",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "\n    // Start periodic flush\n    if (this.config.enableRemote) {\n      this.startPeriodicFlush();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10ea1a1c2896bfaf30fbea8126e437c7",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "\n          // Handle DOM nodes\n          if (value.nodeType) {\n            return `[DOM Node: ${value.nodeName}]`;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4de0fc910f375fb98cb07479906edbec",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "\n          // Handle functions\n          if (typeof value === 'function') {\n            return `[Function: ${value.name || 'anonymous'}]`;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee694ac6a4d3180c8f8da7481d1f351d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/core/services/__tests__/Logger.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "    }).not.toThrow();\n    \n    expect(consoleSpy).toHaveBeenCalled();\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "382d7f84fd939d59da55dbe52fbd09a8",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "\n  // Handle DOM nodes\n  if (isDOMNode(value)) {\n    return `[DOM Node: ${value.nodeName}]`;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "882e37ef77f79ab6f521f7379c2380af",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "        \n        // Size metrics\n        originalSize: chunk.originalSize || 0,\n        processedSize: chunk.processedSize || 0,\n        noiseRemoved: chunk.noiseRemoved || 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e5616d03431a227923764fa0ea3ad970",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 400,
            "endLine": 404
          }
        ],
        "sample": "      render(<AudioRecorder {...defaultProps} />);\n      \n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      \n      // Initially hidden...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "150c4067738c975f33b367122a81369d",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "          isPaused: true\n        }\n      };\n      \n      render(<AudioRecorder {...pausedProps} />);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9d4ca60166ec13dd5d111f822b14a6e",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 403,
            "endLine": 407
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 404,
            "endLine": 408
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 405,
            "endLine": 409
          }
        ],
        "sample": "      \n      // Rapidly toggle multiple times\n      for (let i = 0; i < 10; i++) {\n        await userEvent.click(gainButton);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a4418ea292387db1e83e45e316b9119a",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 140,
            "endLine": 144
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "    const recordingProps = {\n      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        isRecording: true...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1e32f84045356a498bd5bd277d59a08",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 160,
            "endLine": 164
          }
        ],
        "sample": "      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        isRecording: true\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c75ba9bf89053ca0192be5a39e178572",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 161,
            "endLine": 165
          }
        ],
        "sample": "      recordingState: {\n        ...mockRecordingState,\n        isRecording: true\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "957b341653c3816d48e42875983e5f40",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "      </ErrorBoundary>\n    );\n    \n    expect(screen.getByText('Component Error')).toBeInTheDocument();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d16751a65a6559f2c0d3f34be2f19f87",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 173,
            "endLine": 177
          }
        ],
        "sample": "    );\n    \n    expect(screen.getByText('Component Error')).toBeInTheDocument();\n    \n    // Update to not throw...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7a659b31ee8e5580d754b72bd3a4551",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 202,
            "endLine": 206
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 210,
            "endLine": 214
          }
        ],
        "sample": "        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>\n    );\n    \n    // First error...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a68eba386c114d70423f0cd41032112",
        "severity": "low",
        "occurrences": 3,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "    \n    // Try to start recording\n    const recordButton = page.locator('button:has-text(\"Start Recording\")');\n    await expect(recordButton).toBeVisible();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d0cc76600cc8fe6a4dc9f26bf414c53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "  // Find all source files\n  findSourceFiles(dir, extensions = ['.ts', '.tsx', '.js', '.jsx']) {\n    if (dir.includes('node_modules') || dir.includes('coverage') || dir.includes('dist')) {\n      retur...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eae88f0bd8c79a66e163af4314b708d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 136,
            "endLine": 140
          }
        ],
        "sample": "\n  // Find similar code blocks using Levenshtein distance\n  findSimilarBlocks(content, filePath) {\n    const lines = content.split('\\n');\n    const blockSize = 5; // Minimum block size to consider...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "423e3f5a8af2e126dcc58e088e2367b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "      \n      if (!this.patterns.has || typeof this.patterns.has !== 'function') {\n        if (!this.patterns.find) {\n          this.patterns = [];\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8414f91b74e3510eae03790781c3addb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 199,
            "endLine": 203
          }
        ],
        "sample": "      \n    } catch (error) {\n      console.error(`Error analyzing ${filePath}:`, error.message);\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e727427c5f5e13a4624061734905048",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 228,
            "endLine": 232
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 251,
            "endLine": 255
          }
        ],
        "sample": "      if (occurrences.length > 1) {\n        const severity = this.calculateSeverity(\n          occurrences.length, \n          occurrences[0].lines, \n          new Set(occurrences.map(o => o.file)).siz...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c36d01d60ef8dae7ac82589ea553c882",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 229,
            "endLine": 233
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "        const severity = this.calculateSeverity(\n          occurrences.length, \n          occurrences[0].lines, \n          new Set(occurrences.map(o => o.file)).size\n        );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "da046c235a6af3428e6e28b6eb753ef5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 253,
            "endLine": 257
          }
        ],
        "sample": "          occurrences.length, \n          occurrences[0].lines, \n          new Set(occurrences.map(o => o.file)).size\n        );\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa0f08b107b01fb3d4726f0006064979",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 236,
            "endLine": 240
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 259,
            "endLine": 263
          }
        ],
        "sample": "          hash,\n          severity,\n          occurrences: occurrences.length,\n          files: [...new Set(occurrences.map(o => path.relative('/workspaces/murburaba', o.file)))],\n          linesOfCod...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "522a1ead4e63dedb49044e2fd90dee06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 237,
            "endLine": 241
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "          severity,\n          occurrences: occurrences.length,\n          files: [...new Set(occurrences.map(o => path.relative('/workspaces/murburaba', o.file)))],\n          linesOfCode: occurrences[0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "501fc2ee3d6adeef5eeb9192a6bdb800",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 359,
            "endLine": 363
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 360,
            "endLine": 364
          }
        ],
        "sample": "    // Generate high-level recommendations\n    report.recommendations = this.generateHighLevelRecommendations(report);\n\n    return report;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c74caebd55ef9c0cdace445af7617c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 440,
            "endLine": 444
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 441,
            "endLine": 445
          }
        ],
        "sample": "    // Generate summary\n    this.generateSummaryReport(report);\n    \n    return report;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "676ec6529b234a920b0dfba25efa52b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "analyze-duplication.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "analyze-duplication.js",
            "startLine": 488,
            "endLine": 492
          },
          {
            "file": "analyze-duplication.js",
            "startLine": 489,
            "endLine": 493
          }
        ],
        "sample": "\n    console.log(`\\n📄 Detailed report saved to: duplication-analysis-report.json`);\n  }\n}\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "44dc773e8e788a3b1694c6019a67b109",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 1,
            "endLine": 5
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 1,
            "endLine": 5
          }
        ],
        "sample": "var Sk=Object.defineProperty;var _k=(e,t,n)=>t in e?Sk(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var ji=(e,t,n)=>_k(e,typeof t!=\"symbol\"?t+\"\":t,n);(function(){const t=document.cr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6a037b74ba26959f0822b7ebbf6ff80c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 2,
            "endLine": 6
          }
        ],
        "sample": "* @vue/shared v3.5.16\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**//*! #__NO_SIDE_EFFECTS__ */function Jh(e){const t=Object.create(null);for(const n of e.split(\",\"))t[n]=1...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2737f79b16242ed5d1e61b937800a263",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**//*! #__NO_SIDE_EFFECTS__ */function Jh(e){const t=Object.create(null);for(const n of e.split(\",\"))t[n]=1;return n=>n in t}cons...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad54360e9caa0a9276f62870bed06d36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 4,
            "endLine": 8
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "* @license MIT\n**//*! #__NO_SIDE_EFFECTS__ */function Jh(e){const t=Object.create(null);for(const n of e.split(\",\"))t[n]=1;return n=>n in t}const vt={},Ps=[],Yr=()=>{},kk=()=>!1,Bu=e=>e.charCodeAt(0)=...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d54a54b0472470a18d8140db3a3dfdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 5,
            "endLine": 9
          }
        ],
        "sample": "**//*! #__NO_SIDE_EFFECTS__ */function Jh(e){const t=Object.create(null);for(const n of e.split(\",\"))t[n]=1;return n=>n in t}const vt={},Ps=[],Yr=()=>{},kk=()=>!1,Bu=e=>e.charCodeAt(0)===111&&e.charCo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b71f6e768ed7131c8e2e0fe399d8abd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 6,
            "endLine": 10
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "* @vue/reactivity v3.5.16\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/let yn;class zk{constructor(t=!1){this.detached=t,this._active=!0,this._on=0,this.effects=[],this.cl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "248aea38d9d25c650495a9f8ec665f56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 7,
            "endLine": 11
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 7,
            "endLine": 11
          }
        ],
        "sample": "* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/let yn;class zk{constructor(t=!1){this.detached=t,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f3374583efd27d519c235fb0b2b88e77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 8,
            "endLine": 12
          }
        ],
        "sample": "* @license MIT\n**/let yn;class zk{constructor(t=!1){this.detached=t,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=yn,!t&&yn&&(this.index=(yn.scopes||(yn.sco...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "100673973d7c19f2033289861d171ae4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "**/let yn;class zk{constructor(t=!1){this.detached=t,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=yn,!t&&yn&&(this.index=(yn.scopes||(yn.scopes=[])).push(t...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f8603ae7eab57d91fc27628451123365",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "* @vue/runtime-core v3.5.16\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/function za(e,t,n,i){try{return i?e(...i):e()}catch(s){Da(s,t,n)}}function Ir(e,t,n,i){if(Ge(e)){c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "39a08de72e31f696d47e1fee2244400b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/function za(e,t,n,i){try{return i?e(...i):e()}catch(s){Da(s,t,n)}}function Ir(e,t,n,i){if(Ge(e)){const s=za(e,t,n,i);return s&...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "641d54165967b5f2c0003465f8baa969",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 12,
            "endLine": 16
          }
        ],
        "sample": "* @license MIT\n**/function za(e,t,n,i){try{return i?e(...i):e()}catch(s){Da(s,t,n)}}function Ir(e,t,n,i){if(Ge(e)){const s=za(e,t,n,i);return s&&eb(s)&&s.catch(l=>{Da(l,t,n)}),s}if(Fe(e)){const s=[];f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ab6c2aa3656dde369ddbb94530f9c86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 13,
            "endLine": 17
          }
        ],
        "sample": "**/function za(e,t,n,i){try{return i?e(...i):e()}catch(s){Da(s,t,n)}}function Ir(e,t,n,i){if(Ge(e)){const s=za(e,t,n,i);return s&&eb(s)&&s.catch(l=>{Da(l,t,n)}),s}if(Fe(e)){const s=[];for(let l=0;l<e....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d58390552409db3e7f8f5a2cddd3a2b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "* @vue/runtime-dom v3.5.16\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/let fh;const pv=typeof window<\"u\"&&window.trustedTypes;if(pv)try{fh=pv.createPolicy(\"vue\",{createHT...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c362b4ffef12925d96890c8fa93058ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/let fh;const pv=typeof window<\"u\"&&window.trustedTypes;if(pv)try{fh=pv.createPolicy(\"vue\",{createHTML:e=>e})}catch{}const yw=f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6d195e1d31ff8543b1c1108fb9ee9b46",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "* @license MIT\n**/let fh;const pv=typeof window<\"u\"&&window.trustedTypes;if(pv)try{fh=pv.createPolicy(\"vue\",{createHTML:e=>e})}catch{}const yw=fh?e=>fh.createHTML(e):e=>e,TC=\"http://www.w3.org/2000/sv...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee5d758fc52a8f897f837d86dd7a4664",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "**/let fh;const pv=typeof window<\"u\"&&window.trustedTypes;if(pv)try{fh=pv.createPolicy(\"vue\",{createHTML:e=>e})}catch{}const yw=fh?e=>fh.createHTML(e):e=>e,TC=\"http://www.w3.org/2000/svg\",CC=\"http://w...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d3eec2aa1122a946e51b3eb2ade8fe3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "`)}function NA(e,t){switch(e.nodeType){case 1:return Gw(e,t);case 3:return t.inspect(e.data,t);default:return t.inspect(e,t)}}function Gw(e,t){const n=e.getAttributeNames(),i=e.tagName.toLowerCase(),s...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4230e2e889def9056860ce6b890e763",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "`).map(t=>rx(t)).filter(Xw)}function PL(e){return e.split(`\n`).map(t=>ox(t)).filter(Xw)}function kp(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var Nd,x0;f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3693aece71957624afa01cd8365252e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "`).map(t=>ox(t)).filter(Xw)}function kp(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var Nd,x0;function OL(){if(x0)return Nd;x0=1;var e,t,n,i,s,l,u,f,h,p,g,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5060dc587c0da3cab89db24515e910ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "`).map(s=>s.split(\"|\"))[0],i=[];for(let s=0;s<Math.floor(t.length/n.length);s++){const l={};for(let u=0;u<n.length;u++)l[n[u]]=t[s*n.length+u];i.push(l)}return i}function u$(e){const t=r$(),n=e.split(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e33514db5f9a71fd227d644efc2032af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "`).slice(1);for(const i of n){const s=ix(i);if(s&&s.file===t)return{line:s.line,column:s.column}}}function f$(e){let t=0;if(e.length===0)return`${t}`;for(let n=0;n<e.length;n++){const i=e.charCodeAt(n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "939aa0610f2bffb1fecdea26ba3863a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "`)[v],w=ix(y);return w&&(p={file:w.file,line:w.line,column:w.column}),typeof f==\"object\"?L0(e,l(u,p,void 0,f)):L0(e,l(u,p,f,h))},i.onTestFailed=(u,f)=>{e.onFailed||(e.onFailed=[]),e.onFailed.push(xh(u...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eb6008aa5eecce0842ae3a2085f95fd3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "If this is a long-running ${e?\"hook\":\"test\"}, pass a timeout value as the last argument or configure it globally with \"${e?\"hookTimeout\":\"testTimeout\"}\".`,s=new Error(i);return n!=null&&n.stack&&(s.st...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef3cb3f0d85af8ca71ac24fad2db3b1a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "`,k9=\"∄\",T9=\"∄\",C9=\"𝔑\",E9=\"𝔫\",A9=\"≧̸\",L9=\"≱\",$9=\"≱\",M9=\"≧̸\",N9=\"⩾̸\",I9=\"⩾̸\",P9=\"⋙̸\",O9=\"≵\",R9=\"≫⃒\",z9=\"≯\",D9=\"≯\",F9=\"≫̸\",H9=\"↮\",B9=\"⇎\",W9=\"⫲\",j9=\"∋\",q9=\"⋼\",U9=\"⋺\",V9=\"∋\",G9=\"Њ\",X9=\"њ\",K9=\"↚\",J9=\"⇍\",...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6fa40fa1891fe918b0f4a0c0917c36f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var B=!0,oe=!1,ue;return{s:function(){I=I.call(C)},n:function(){var Pe=I.next();return B=Pe.done,Pe},e:function(Pe)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9dfd43828e60ab1577190dd83908c70d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 27,
            "endLine": 31
          }
        ],
        "sample": "\nb`.split(/\\n/).length!=3?function(r){for(var o=0,c=[],a=r.length;o<=a;){var d=r.indexOf(`\n`,o);d==-1&&(d=r.length);var m=r.slice(o,r.charAt(d-1)==\"\\r\"?d-1:d),b=m.indexOf(\"\\r\");b!=-1?(c.push(m.slice(0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09c015a0fa2fd8d20a367a4f24583e60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "b`.split(/\\n/).length!=3?function(r){for(var o=0,c=[],a=r.length;o<=a;){var d=r.indexOf(`\n`,o);d==-1&&(d=r.length);var m=r.slice(o,r.charAt(d-1)==\"\\r\"?d-1:d),b=m.indexOf(\"\\r\");b!=-1?(c.push(m.slice(0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27577e14b5e453dd682af9c0cc6ab11a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "`,o);d==-1&&(d=r.length);var m=r.slice(o,r.charAt(d-1)==\"\\r\"?d-1:d),b=m.indexOf(\"\\r\");b!=-1?(c.push(m.slice(0,b)),o+=b+1):(c.push(m),o=d+1)}return c}:function(r){return r.split(/\\r\\n?|\\n/)},Ni=window....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0af022e90ffe5cb56d4fdd602b66623",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "`?(me=H.appendChild(S(\"span\",re[0]==\"\\r\"?\"␍\":\"␤\",\"cm-invalidchar\")),me.setAttribute(\"cm-text\",re[0]),r.col+=1):(me=r.cm.options.specialCharPlaceholder(re[0]),me.setAttribute(\"cm-text\",re[0]),h&&p<9?H....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e41fe12e3df2f704a2b76cfe796a540",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 31,
            "endLine": 35
          }
        ],
        "sample": "                             top: `+Ne+\"px; width: \"+(Be??_-Te)+`px;\n                             height: `+(ze-Ne)+\"px\"))}function X(Te,Ne,Be){var ze=Oe(d,Te),Qe=ze.text.length,xt,Qt;function $t(Wt,E...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b711610f92929a2df100e572de0ea6b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "                             height: `+(ze-Ne)+\"px\"))}function X(Te,Ne,Be){var ze=Oe(d,Te),Qe=ze.text.length,xt,Qt;function $t(Wt,En){return cc(r,le(Te,Wt),\"div\",ze,En)}function Wn(Wt,En,sn){var Vt=zg...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ccf9200ec96360835fe038cc150bc646",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "                         top: `+(o.top-c.viewOffset-lc(r.display))+`px;\n                         height: `+(o.bottom-o.top+jr(r)+c.barHeight)+`px;\n                         left: `+o.left+\"px; width: \"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d901b4d16a13e0ec85a5f565c1c9a863",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "                         height: `+(o.bottom-o.top+jr(r)+c.barHeight)+`px;\n                         left: `+o.left+\"px; width: \"+Math.max(2,o.right-o.left)+\"px;\");r.display.lineSpace.appendChild(b),b....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "665310bee37be67f6248478ddbf3e883",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "                         left: `+o.left+\"px; width: \"+Math.max(2,o.right-o.left)+\"px;\");r.display.lineSpace.appendChild(b),b.scrollIntoView(d),r.display.lineSpace.removeChild(b)}}}function f_(r,o,c,a)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3b96bc3bd17c94fbfafe6cb2e87cd8a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "`},setDirection:Zt(function(r){r!=\"rtl\"&&(r=\"ltr\"),r!=this.direction&&(this.direction=r,this.iter(function(o){return o.order=null}),this.cm&&L_(this.cm))})}),Tn.prototype.eachLine=Tn.prototype.iter;va...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2370eecfe408cd31ca03b309c0a4dd3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "`,\"start\")},toggleOverwrite:function(r){return r.toggleOverwrite()}};function Im(r,o){var c=Oe(r.doc,o),a=xr(c);return a!=c&&(o=N(a)),id(!0,r,a,o,1)}function Y_(r,o){var c=Oe(r.doc,o),a=PS(c);return a...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f24b1c7ba00a37d86af6661b4e947a9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "`)==o){if(a.ranges.length%kr.text.length==0){T=[];for(var H=0;H<kr.text.length;H++)T.push(m.splitLines(kr.text[H]))}}else _.length==a.ranges.length&&r.options.pasteLinesPerSelection&&(T=be(_,function(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "afe4d9904b37fd20fa7e25bd9fdbeeea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 39,
            "endLine": 43
          }
        ],
        "sample": "`)==_.join(`\n`)&&(ce=me=le(ce.line,0)));var Se={from:ce,to:me,text:T?T[re%T.length]:_,origin:d||(x?\"paste\":r.state.cutIncoming>b?\"cut\":\"+input\")};gs(r.doc,Se),Jt(r,\"inputRead\",r,Se)}o&&!x&&Gm(r,o),fs(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1062f9eca4e0ee2164ab7dd6ce2dd573",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 40,
            "endLine": 44
          }
        ],
        "sample": "`)&&(ce=me=le(ce.line,0)));var Se={from:ce,to:me,text:T?T[re%T.length]:_,origin:d||(x?\"paste\":r.state.cutIncoming>b?\"cut\":\"+input\")};gs(r.doc,Se),Jt(r,\"inputRead\",r,Se)}o&&!x&&Gm(r,o),fs(r),r.curOp.up...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e17a6cf09493b474bd26a6831298ca6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "`,Se=st(me,Z)?\"w\":re&&me==`\n`?\"n\":!re||/\\s/.test(me)?null:\"p\";if(re&&!ce&&!Se&&(Se=\"s\"),X&&X!=Se){c<0&&(c=1,H(),o.sticky=\"after\");break}if(Se&&(X=Se),c>0&&!H(!ce))break}var ke=xc(r,o,m,b,!0);return pt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e737b9a0fded2b7b3b09b79e19145e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "`?\"n\":!re||/\\s/.test(me)?null:\"p\";if(re&&!ce&&!Se&&(Se=\"s\"),X&&X!=Se){c<0&&(c=1,H(),o.sticky=\"after\");break}if(Se&&(X=Se),c>0&&!H(!ce))break}var ke=xc(r,o,m,b,!0);return pt(m,ke)&&(ke.hitSide=!0),ke}f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e49adf1d363f976d543fd954438f03ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "`);if(x.clipboardData.setData(\"Text\",T),x.clipboardData.getData(\"Text\")==T){x.preventDefault();return}}var H=Km(),X=H.firstChild;ud(X),a.display.lineSpace.insertBefore(H,a.display.lineSpace.firstChild...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efb5be8fa73f1eeb2de1637a95698d74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "`);var re=ue(Je(d));qe(X),setTimeout(function(){a.display.lineSpace.removeChild(H),re.focus(),re==d&&c.showPrimarySelection()},50)}}He(d,\"copy\",b),He(d,\"cut\",b)},yt.prototype.screenReaderLabelChanged=...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19866887fb0ee4fb6aeefa38a3e6f151",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 45,
            "endLine": 49
          }
        ],
        "sample": "`),qe(d))}else return;b.type==\"cut\"&&(a.state.cutIncoming=+new Date)}}He(d,\"cut\",m),He(d,\"copy\",m),He(r.scroller,\"paste\",function(b){if(!(ci(r,b)||Ot(a,b))){if(!d.dispatchEvent){a.state.pasteIncoming=...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc0aaa43d4f04ce4a2a4c850d0ec5fa5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 46,
            "endLine": 50
          }
        ],
        "sample": "`)>-1?c.value=r.prevInput=\"\":r.prevInput=d,r.composing&&(r.composing.range.clear(),r.composing.range=o.markText(r.composing.start,o.getCursor(\"to\"),{className:\"CodeMirror-composing\"}))}),!0},Ht.protot...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3917f838a9c44252a9fda5fe2b51eed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 47,
            "endLine": 51
          }
        ],
        "sample": "      top: `+(r.clientY-H.top-5)+\"px; left: \"+(r.clientX-H.left-5)+`px;\n      z-index: 1000; background: `+(h?\"rgba(255, 255, 255, .05)\":\"transparent\")+`;\n      outline: none; border-width: 0; outline...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa67d9fa56cc003a560f318ff2b8b8a4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 48,
            "endLine": 52
          }
        ],
        "sample": "      z-index: 1000; background: `+(h?\"rgba(255, 255, 255, .05)\":\"transparent\")+`;\n      outline: none; border-width: 0; outline: none; overflow: hidden; opacity: .05; filter: alpha(opacity=5);`;var X...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d3641c9eb6e10f83288c746180cd9514",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 49,
            "endLine": 53
          }
        ],
        "sample": "      outline: none; border-width: 0; outline: none; overflow: hidden; opacity: .05; filter: alpha(opacity=5);`;var X;g&&(X=d.ownerDocument.defaultView.scrollY),a.input.focus(),g&&d.ownerDocument.defa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0df07ea603e1cc148c8a43a4669b508",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 50,
            "endLine": 54
          }
        ],
        "sample": "`),P.append(I,S),C.append(P);const R=W.attachment;if(R!=null&&R.path||R!=null&&R.body)if((oe=R.contentType)!=null&&oe.startsWith(\"image/\")){const ue=document.createElement(\"a\"),we=document.createEleme...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9c61b83d535d303b0963f29802f39f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 51,
            "endLine": 55
          }
        ],
        "sample": "          L${n.x},${n.y}`}function l0e(e){const{start:t,end:n}=nS(e),i=n.subtract(t).multiply(.5),s=t.add(i);return`translate(${s.x-8},${s.y-4})`}function a0e({config:e,source:t,target:n}){const{s:i,t...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7c879955528dd98048d8a99f9e6cbec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "          A${v},${v},0,0,1,${g.x},${g.y}`}function c0e({center:e,config:t,node:n}){const{n:i,c:s}=tS({center:e,node:n}),l=yo(t,n),u=i.subtract(s),f=u.multiply(1/u.length()),h=f.rotateByDegrees(40).mul...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5dc375fd650466ab1cbfcd3702b51a64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 53,
            "endLine": 57
          }
        ],
        "sample": "          A${l},${l},0,1,0,${p.x},${p.y}`}function u0e({config:e,source:t,target:n}){const{t:i,dist:s,endNorm:l}=Xp({source:t,target:n}),u=l.rotateByDegrees(10).multiply(.5*s).add(i);return`translate(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c945fbd829d9c5e903ea083a17eece6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 54,
            "endLine": 58
          }
        ],
        "sample": "In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function xbe(e){var t;return typeof e==\"function\"?t={callback:e}:t=e,t}function Sbe(e,t){var n=arguments.length>2&&...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "646bf5bdcaa79b8c2d08e18aaace29d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "html/assets/index-D_ryMEPs.js",
          "packages/murmuraba/html/assets/index-D_ryMEPs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "html/assets/index-D_ryMEPs.js",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/html/assets/index-D_ryMEPs.js",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "  * vue-router v4.5.1\n  * (c) 2025 Eduardo San Martin Morote\n  * @license MIT\n  */const Ls=typeof document<\"u\";function uS(e){return typeof e==\"object\"||\"displayName\"in e||\"props\"in e||\"__vccOpts\"in e...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7be437dd7bd7e3f6c27bd8aa656d0c07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "\n  // Mock audio processing\n  const processAudio = async (file: File) => {\n    try {\n      setEngineStatus('processing')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a30635e55fe77dde876e0a620f9278f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "\n  return (\n    <ErrorBoundary>\n      <div className=\"app\">\n        <h1>Murmuraba Audio Processor</h1>...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00f4483346c4bc33900d3d2f9c572aef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "            \n            <WaveformAnalyzer\n              audioData={processedAudio}\n              sampleRate={48000}\n            />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6e7951c7f79437dc87d1d31f39adc55e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "\ndescribe('React App with Murmuraba Integration', () => {\n  const user = userEvent.setup()\n\n  beforeEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e5aa54d075f16cc3e06cc800d788be5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "    // Mock browser APIs\n    global.AudioContext = vi.fn().mockImplementation(() => ({\n      state: 'running',\n      sampleRate: 48000,\n      createGain: vi.fn(() => ({ connect: vi.fn() })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e05b95b8f7a3b8b893a9de52a244fd02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "      destination: {}\n    }))\n\n    global.URL.createObjectURL = vi.fn(() => 'blob:mock-url')\n    global.URL.revokeObjectURL = vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6da46af16358a2ad5f09962a60f1ce71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "\n  describe('Initial Render Health Checks', () => {\n    it('should render without errors', () => {\n      const consoleSpy = vi.spyOn(console, 'error')\n      render(<ExampleApp />)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78023dbd91da5604a44cf71e89bf3ec6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 139,
            "endLine": 143
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 140,
            "endLine": 144
          }
        ],
        "sample": "      \n      expect(screen.getByText('Murmuraba Audio Processor')).toBeInTheDocument()\n      expect(consoleSpy).not.toHaveBeenCalled()\n      consoleSpy.mockRestore()\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c55052a1252ff021e46a3eeeb51d10f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 154,
            "endLine": 158
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "      \n      // BuildInfo should display version info\n      expect(screen.getByText(/version/i)).toBeInTheDocument()\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e9f103db10556b5a6b4cc89c433a07ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 175,
            "endLine": 179
          }
        ],
        "sample": "      render(<ExampleApp />)\n      \n      const file = new File(['audio content'], 'test.wav', { type: 'audio/wav' })\n      const input = screen.getByLabelText('Upload audio file')\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1db82461e2cada19b7d74c21268e816",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "      \n      // Process button should be enabled\n      const processButton = screen.getByText('Process Audio')\n      expect(processButton).not.toBeDisabled()\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef3dc93d1246548e7ff627063953005e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 181,
            "endLine": 185
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 182,
            "endLine": 186
          }
        ],
        "sample": "      \n      // Click process\n      const processButton = screen.getByText('Process Audio')\n      await user.click(processButton)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b4e706c1c9270a736959ff6709bc6b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 199,
            "endLine": 203
          }
        ],
        "sample": "\n  describe('Component Integration', () => {\n    it('should render AudioPlayer after processing', async () => {\n      render(<ExampleApp />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a017887c469f77334aef3e8e7acd261",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 228,
            "endLine": 232
          }
        ],
        "sample": "      render(<ExampleApp />)\n      \n      const file = new File(['audio'], 'test.wav', { type: 'audio/wav' })\n      await user.upload(screen.getByLabelText('Upload audio file'), file)\n      await user...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1a158241cfa9da45fa00eda3918a9a4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 243,
            "endLine": 247
          }
        ],
        "sample": "\n  describe('Error Handling', () => {\n    it('should handle errors gracefully', async () => {\n      // Mock processing error\n      const { rerender } = render(<ExampleApp />)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e0e68a5261e46fa0845018ab41a6f2f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 245,
            "endLine": 249
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 246,
            "endLine": 250
          }
        ],
        "sample": "      // Mock processing error\n      const { rerender } = render(<ExampleApp />)\n      \n      // Trigger an error by simulating failed processing\n      const errorMessage = 'Failed to process audio'...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4f41083c62dff1c8630e51d01c60f4b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 251,
            "endLine": 255
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "      // You would typically trigger this through user interaction\n      // For this example, we'll check error boundary behavior\n      const ThrowError = () => {\n        throw new Error(errorMessage)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "76e2770402088564c9924af547cca286",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx",
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 48,
            "endLine": 52
          }
        ],
        "sample": "          <ThrowError />\n        </ErrorBoundary>\n      )\n      \n      expect(screen.getByText(/something went wrong/i)).toBeInTheDocument()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2b8afe210fa4153f6f0a994192d9ecd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 265,
            "endLine": 269
          }
        ],
        "sample": "      \n      expect(screen.getByText(/something went wrong/i)).toBeInTheDocument()\n      consoleSpy.mockRestore()\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75dbfc4fcb59e645adf7bd208bdbb318",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 270,
            "endLine": 274
          }
        ],
        "sample": "\n  describe('Performance and Memory', () => {\n    it('should clean up resources on unmount', async () => {\n      const { unmount } = render(<ExampleApp />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dbc37cf1a002a685f12cdbcadd231ae7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 292,
            "endLine": 296
          }
        ],
        "sample": "\n    it('should not have memory leaks with repeated processing', async () => {\n      render(<ExampleApp />)\n      \n      const file = new File(['audio'], 'test.wav', { type: 'audio/wav' })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "40832ab0a87a87cfcf2b6209e8bf0323",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 297,
            "endLine": 301
          }
        ],
        "sample": "      \n      // Process multiple times\n      for (let i = 0; i < 3; i++) {\n        await user.upload(screen.getByLabelText('Upload audio file'), file)\n        await user.click(screen.getByText('Proces...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4feb91e6a9d3ae3ff9c368a6f84e1c90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 301,
            "endLine": 305
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 302,
            "endLine": 306
          }
        ],
        "sample": "        \n        await waitFor(() => {\n          expect(screen.getByTestId('engine-status')).toHaveTextContent('ready')\n        })\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce390947e2908809f5c9e4e59570e4ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 307,
            "endLine": 311
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 308,
            "endLine": 312
          }
        ],
        "sample": "      // Should handle multiple processes without issues\n      expect(screen.getByRole('button', { name: /play/i })).toBeInTheDocument()\n    })\n  })\n})...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a492bcc730cd25d627bbb946661b2dac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 313,
            "endLine": 317
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 314,
            "endLine": 318
          }
        ],
        "sample": "// Browser-specific tests\ndescribe('Browser Compatibility Checks', () => {\n  it('should handle missing AudioWorklet gracefully', () => {\n    const originalAudioWorklet = (window as any).AudioWorklet\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2012badbb56741a938eabded5b34f7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 318,
            "endLine": 322
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 319,
            "endLine": 323
          }
        ],
        "sample": "    \n    render(<ExampleApp />)\n    \n    // Should still render without crashing\n    expect(screen.getByText('Murmuraba Audio Processor')).toBeInTheDocument()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd8e1fd05a0599350553165a09eadc77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 336,
            "endLine": 340
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 337,
            "endLine": 341
          }
        ],
        "sample": "    \n    global.AudioContext = vi.fn(() => mockContext)\n    \n    render(<ExampleApp />)\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73cc0beb218338f5fb453cc83b67bd38",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/example-app-test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 338,
            "endLine": 342
          },
          {
            "file": "packages/murmuraba/example-app-test.tsx",
            "startLine": 339,
            "endLine": 343
          }
        ],
        "sample": "    \n    render(<ExampleApp />)\n    \n    // User interaction should resume context\n    await user.click(screen.getByText('Process Audio'))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c3c6473c1227a5fb7cc121049dafb64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "\nasync function runAudioWorkletExample() {\n  // Create AudioWorklet engine instance\n  const engine = new AudioWorkletEngine({\n    enableRNNoise: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "12b11784fec17a15fcf7314fdfc1901b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "  // Check if AudioWorklet is supported\n  if (!engine.isAudioWorkletSupported()) {\n    console.error('AudioWorklet is not supported in this browser');\n    return;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a920da7097a340d285f6d845602947f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "  // Example 1: Process a single audio buffer\n  const testBuffer = new Float32Array(480); // RNNoise frame size\n  for (let i = 0; i < 480; i++) {\n    testBuffer[i] = Math.sin(2 * Math.PI * 440 * i / 4...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "17d2563daf50a47a7610faff5c481d03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 67,
            "endLine": 71
          }
        ],
        "sample": "    \n  } catch (error) {\n    console.error('Failed to create processing pipeline:', error);\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b138da43da0ed2a960094e6026fa71cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 84,
            "endLine": 88
          }
        ],
        "sample": "  \n  const numFrames = 1000;\n  const frameSize = 480;\n  const testData = new Float32Array(frameSize);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5428018a32049eaa0bf5aa65f762bd89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/examples/audioworklet-example.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/examples/audioworklet-example.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "  \n  // Fill with noise\n  for (let i = 0; i < frameSize; i++) {\n    testData[i] = (Math.random() - 0.5) * 0.1;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea9416079e02ec80036927ea8d94606f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/jest-puppeteer.config.js",
          "packages/murmuraba/tests/e2e/setup.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/jest-puppeteer.config.js",
            "startLine": 1,
            "endLine": 5
          },
          {
            "file": "packages/murmuraba/tests/e2e/setup.js",
            "startLine": 5,
            "endLine": 9
          }
        ],
        "sample": "module.exports = {\n  launch: {\n    headless: true,\n    args: ['--no-sandbox', '--disable-setuid-sandbox']\n  },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "372c525e24608cb98e4d2b480cdcfcba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/jest-puppeteer.config.js",
          "packages/murmuraba/tests/e2e/setup.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/jest-puppeteer.config.js",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "packages/murmuraba/tests/e2e/setup.js",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "  launch: {\n    headless: true,\n    args: ['--no-sandbox', '--disable-setuid-sandbox']\n  },\n  server: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9a6b4b094813f0bc0e03694a4037da8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "      sourcemap: true,\n      inlineDynamicImports: true,\n      exports: 'named',\n    },\n    external,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "86fe0e5d9f62a936c8dce622b61bd53f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "      inlineDynamicImports: true,\n      exports: 'named',\n    },\n    external,\n    onwarn,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a69a287248141b79b9dd74b49e663e43",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "    external,\n    onwarn,\n    plugins: [\n      postcss({\n        modules: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "86d7f79268099ecc8b75790155096a95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "    onwarn,\n    plugins: [\n      postcss({\n        modules: false,\n        extract: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95b5615178c6cb38753f94e4d3e5f498",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 87,
            "endLine": 91
          }
        ],
        "sample": "    plugins: [\n      postcss({\n        modules: false,\n        extract: false,\n        minimize: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "04ff5d7a2de5cb1a5eaa43eb2f3c2083",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "      postcss({\n        modules: false,\n        extract: false,\n        minimize: true,\n        inject: true...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "158091d7667a1a410b96b01ad8e1ad10",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "        modules: false,\n        extract: false,\n        minimize: true,\n        inject: true\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7e9853053a3476d2935827d70d05b070",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "        extract: false,\n        minimize: true,\n        inject: true\n      }),\n      resolve({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "830dda998e56a17211d45c298db4874d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "        minimize: true,\n        inject: true\n      }),\n      resolve({\n        preferBuiltins: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "163a94bad772c40de2c31a620c153d97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "      }),\n      resolve({\n        preferBuiltins: false,\n        // Evitar bundlear React internals\n        dedupe: ['react', 'react-dom']...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55c771934eaa7a506c103255af25ccf2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "      resolve({\n        preferBuiltins: false,\n        // Evitar bundlear React internals\n        dedupe: ['react', 'react-dom']\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "60248a658e7253b923289407e0812c64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "        preferBuiltins: false,\n        // Evitar bundlear React internals\n        dedupe: ['react', 'react-dom']\n      }),\n      commonjs({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aa491a723dbb71f223c9ea89fb458201",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "        dedupe: ['react', 'react-dom']\n      }),\n      commonjs({\n        // Excluir React del bundling\n        exclude: ['node_modules/react/**', 'node_modules/react-dom/**']...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c885c6e0eb7afb28dfcae248fa24150",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "      }),\n      commonjs({\n        // Excluir React del bundling\n        exclude: ['node_modules/react/**', 'node_modules/react-dom/**']\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "43cefcfcbccf13672a2aab408a73b2c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "      commonjs({\n        // Excluir React del bundling\n        exclude: ['node_modules/react/**', 'node_modules/react-dom/**']\n      }),\n      typescript({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1b2b9504ab4c36efda04a6691ac9045a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "        // Excluir React del bundling\n        exclude: ['node_modules/react/**', 'node_modules/react-dom/**']\n      }),\n      typescript({\n        tsconfig: './tsconfig.json',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "249edd32dd40940181522db0927710c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/rollup.config.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/rollup.config.js",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "        exclude: ['node_modules/react/**', 'node_modules/react-dom/**']\n      }),\n      typescript({\n        tsconfig: './tsconfig.json',\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e63b7838f370ddd7f1e037d4cc88599b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "import { readFileSync, existsSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport { dirname, join } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d4014d70c16ba8e4e7cfa578861c1e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "import { fileURLToPath } from 'url';\nimport { dirname, join } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2b8f8dc8ab14e2dcd0d92ba588d770d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "import { dirname, join } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nconst packageRoot = join(__dirname, '..');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "49a4e10be64be293badf20337b68451f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nconst packageRoot = join(__dirname, '..');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98128f5b8ca9a8a758d9334dece828ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "const __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nconst packageRoot = join(__dirname, '..');\n\nconst MINIMUM_COVERAGE = 90;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cdf1f4872327e2737869f75733a7741c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "const __dirname = dirname(__filename);\nconst packageRoot = join(__dirname, '..');\n\nconst MINIMUM_COVERAGE = 90;\nconst COVERAGE_THRESHOLDS = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3af58deebf8332f72ad446af7530aaca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "const packageRoot = join(__dirname, '..');\n\nconst MINIMUM_COVERAGE = 90;\nconst COVERAGE_THRESHOLDS = {\n  statements: MINIMUM_COVERAGE,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e725a72cfb0c155aacd0b0fce37a4b81",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "\nconst MINIMUM_COVERAGE = 90;\nconst COVERAGE_THRESHOLDS = {\n  statements: MINIMUM_COVERAGE,\n  branches: 85, // Slightly lower for branches as per config...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "17b3e125b8dbc4cfb4ce1ba5ca1448d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "const MINIMUM_COVERAGE = 90;\nconst COVERAGE_THRESHOLDS = {\n  statements: MINIMUM_COVERAGE,\n  branches: 85, // Slightly lower for branches as per config\n  functions: MINIMUM_COVERAGE,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50d4e62bfab7fea31c7f31b51fa0599c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "const COVERAGE_THRESHOLDS = {\n  statements: MINIMUM_COVERAGE,\n  branches: 85, // Slightly lower for branches as per config\n  functions: MINIMUM_COVERAGE,\n  lines: MINIMUM_COVERAGE...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6682edaa91a14ada7b35f571cc42e9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "  statements: MINIMUM_COVERAGE,\n  branches: 85, // Slightly lower for branches as per config\n  functions: MINIMUM_COVERAGE,\n  lines: MINIMUM_COVERAGE\n};...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2354d7cbb253e61c57cebb1c6df55f44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "  branches: 85, // Slightly lower for branches as per config\n  functions: MINIMUM_COVERAGE,\n  lines: MINIMUM_COVERAGE\n};\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "916f61e357a410e074a6a47a163bf24f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "  functions: MINIMUM_COVERAGE,\n  lines: MINIMUM_COVERAGE\n};\n\nconsole.log('🔍 ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c778d2f442ce548533c6334c71f0ac4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "  // Parsear coverage-final.json para obtener totales\n  const coverageFinal = JSON.parse(readFileSync(coverageFinalPath, 'utf8'));\n  \n  // Calcular totales de coverage-final.json (versión simplificada...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e06a3bbaf30bc468273f8e5603102659",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "  const coverageFinal = JSON.parse(readFileSync(coverageFinalPath, 'utf8'));\n  \n  // Calcular totales de coverage-final.json (versión simplificada)\n  let totalStatements = 0, coveredStatements = 0;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "853f4a3c5f3a34840cc8e97f3350d854",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "  \n  // Calcular totales de coverage-final.json (versión simplificada)\n  let totalStatements = 0, coveredStatements = 0;\n  let totalBranches = 0, coveredBranches = 0;\n  let totalFunctions = 0, covered...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cf5cc5c8fba565cc365d67c93e1f20a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 59,
            "endLine": 63
          }
        ],
        "sample": "  // Calcular totales de coverage-final.json (versión simplificada)\n  let totalStatements = 0, coveredStatements = 0;\n  let totalBranches = 0, coveredBranches = 0;\n  let totalFunctions = 0, coveredFun...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "582fbdb4591248fd0056ffbfd4227595",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "  let totalStatements = 0, coveredStatements = 0;\n  let totalBranches = 0, coveredBranches = 0;\n  let totalFunctions = 0, coveredFunctions = 0;\n  let totalLines = 0, coveredLines = 0;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a8dd9715c5ec904dd3a247f0eaa131da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "  let totalBranches = 0, coveredBranches = 0;\n  let totalFunctions = 0, coveredFunctions = 0;\n  let totalLines = 0, coveredLines = 0;\n  \n  for (const [filePath, fileData] of Object.entries(coverageFin...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e0dda44ff8439d15d4adacea78be24d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "  let totalFunctions = 0, coveredFunctions = 0;\n  let totalLines = 0, coveredLines = 0;\n  \n  for (const [filePath, fileData] of Object.entries(coverageFinal)) {\n    const { s, b, f, l } = fileData;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22fb7b0be30c0d0cd87a548ce5c8ca48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "  let totalLines = 0, coveredLines = 0;\n  \n  for (const [filePath, fileData] of Object.entries(coverageFinal)) {\n    const { s, b, f, l } = fileData;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "26cf0a802fb6655ff45dfaa0cc5337d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "  \n  for (const [filePath, fileData] of Object.entries(coverageFinal)) {\n    const { s, b, f, l } = fileData;\n    \n    // Statements...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "830bf1b9884409173f4912030fe256f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "  for (const [filePath, fileData] of Object.entries(coverageFinal)) {\n    const { s, b, f, l } = fileData;\n    \n    // Statements\n    totalStatements += Object.keys(s).length;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2d774ffc7f62abda80f007c5431b1d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "    const { s, b, f, l } = fileData;\n    \n    // Statements\n    totalStatements += Object.keys(s).length;\n    coveredStatements += Object.values(s).filter(count => count > 0).length;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c1b760824d73053c06ad9b3f30326725",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 59,
            "endLine": 63
          }
        ],
        "sample": "    // Branches (cada branch puede tener múltiples rutas)\n    for (const branchArray of Object.values(b)) {\n      totalBranches += branchArray.length;\n      coveredBranches += branchArray.filter(count...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de8fbc7556bd70ba5e3f0108f1ad9981",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "    totalFunctions += Object.keys(f).length;\n    coveredFunctions += Object.values(f).filter(count => count > 0).length;\n    \n    // Lines\n    totalLines += Object.keys(l).length;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d165e72abe9e9921e6c4063035615ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "    coveredFunctions += Object.values(f).filter(count => count > 0).length;\n    \n    // Lines\n    totalLines += Object.keys(l).length;\n    coveredLines += Object.values(l).filter(count => count > 0).l...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ee3c95223cf0f048cde257a525d49d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "\n  console.log('📊 RESULTADOS DE COVERAGE:');\n  console.log('================================');\n  console.log(`📈 Statements: ${totals.statements.pct}%`);\n  console.log(`🌿 Branches:   ${totals.branc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd2ceeada54708e208bf5d29c0883d84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "  console.log('📊 RESULTADOS DE COVERAGE:');\n  console.log('================================');\n  console.log(`📈 Statements: ${totals.statements.pct}%`);\n  console.log(`🌿 Branches:   ${totals.branch...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61655d0cff7f50425fb1e0e5df585f30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "  console.log('================================');\n  console.log(`📈 Statements: ${totals.statements.pct}%`);\n  console.log(`🌿 Branches:   ${totals.branches.pct}%`);\n  console.log(`⚡ Functions:  ${to...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f92c552626617a04559e62d00099f22",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "  console.log(`📈 Statements: ${totals.statements.pct}%`);\n  console.log(`🌿 Branches:   ${totals.branches.pct}%`);\n  console.log(`⚡ Functions:  ${totals.functions.pct}%`);\n  console.log(`📝 Lines:   ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c7eeb085ac5fc29cbd5c32cc841c800",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "  console.log(`🌿 Branches:   ${totals.branches.pct}%`);\n  console.log(`⚡ Functions:  ${totals.functions.pct}%`);\n  console.log(`📝 Lines:      ${totals.lines.pct}%`);\n  console.log('');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7efd7eb37e19811225e896a197811880",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "  console.log(`⚡ Functions:  ${totals.functions.pct}%`);\n  console.log(`📝 Lines:      ${totals.lines.pct}%`);\n  console.log('');\n\n  // Validar cada métrica...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aa14fb155c14f0afc630e9f7da88be6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "  console.log(`📝 Lines:      ${totals.lines.pct}%`);\n  console.log('');\n\n  // Validar cada métrica\n  const failures = [];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae49e3769b221eccf98f495e0e47ee51",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 105,
            "endLine": 109
          }
        ],
        "sample": "\n  // Validar cada métrica\n  const failures = [];\n  \n  if (totals.statements.pct < COVERAGE_THRESHOLDS.statements) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b21d27cbff10961b57254fba5001925",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 106,
            "endLine": 110
          }
        ],
        "sample": "  // Validar cada métrica\n  const failures = [];\n  \n  if (totals.statements.pct < COVERAGE_THRESHOLDS.statements) {\n    failures.push(`Statements: ${totals.statements.pct}% < ${COVERAGE_THRESHOLDS.sta...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3dbb3d48cd2b7c4bb7534453cef986a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "  const failures = [];\n  \n  if (totals.statements.pct < COVERAGE_THRESHOLDS.statements) {\n    failures.push(`Statements: ${totals.statements.pct}% < ${COVERAGE_THRESHOLDS.statements}%`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d2819fdbc32daa6d717bd2028027c14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "  \n  if (totals.statements.pct < COVERAGE_THRESHOLDS.statements) {\n    failures.push(`Statements: ${totals.statements.pct}% < ${COVERAGE_THRESHOLDS.statements}%`);\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "898b0edd799d5f93ad4e73ae23e33040",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 109,
            "endLine": 113
          }
        ],
        "sample": "  if (totals.statements.pct < COVERAGE_THRESHOLDS.statements) {\n    failures.push(`Statements: ${totals.statements.pct}% < ${COVERAGE_THRESHOLDS.statements}%`);\n  }\n  \n  if (totals.branches.pct < COVE...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2edaeae4d605f083ed81ab87f4df069",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "    failures.push(`Statements: ${totals.statements.pct}% < ${COVERAGE_THRESHOLDS.statements}%`);\n  }\n  \n  if (totals.branches.pct < COVERAGE_THRESHOLDS.branches) {\n    failures.push(`Branches: ${total...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "60617473cec8409fb6c5e6139b02e91a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 111,
            "endLine": 115
          }
        ],
        "sample": "  }\n  \n  if (totals.branches.pct < COVERAGE_THRESHOLDS.branches) {\n    failures.push(`Branches: ${totals.branches.pct}% < ${COVERAGE_THRESHOLDS.branches}%`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c5d7c1b7896c8bde68223629b52cfa79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 112,
            "endLine": 116
          }
        ],
        "sample": "  \n  if (totals.branches.pct < COVERAGE_THRESHOLDS.branches) {\n    failures.push(`Branches: ${totals.branches.pct}% < ${COVERAGE_THRESHOLDS.branches}%`);\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e2a1c6f5b5e3bb1af543946c93336292",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "  if (totals.branches.pct < COVERAGE_THRESHOLDS.branches) {\n    failures.push(`Branches: ${totals.branches.pct}% < ${COVERAGE_THRESHOLDS.branches}%`);\n  }\n  \n  if (totals.functions.pct < COVERAGE_THRE...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b4cc28f68ceb16d52a7226e1503a823e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 96,
            "endLine": 100
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 114,
            "endLine": 118
          }
        ],
        "sample": "    failures.push(`Branches: ${totals.branches.pct}% < ${COVERAGE_THRESHOLDS.branches}%`);\n  }\n  \n  if (totals.functions.pct < COVERAGE_THRESHOLDS.functions) {\n    failures.push(`Functions: ${totals.f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb575446c6241efb9fef763bf384bb25",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "  }\n  \n  if (totals.functions.pct < COVERAGE_THRESHOLDS.functions) {\n    failures.push(`Functions: ${totals.functions.pct}% < ${COVERAGE_THRESHOLDS.functions}%`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b9d61f9ca32ecd7952e076fbbf4fc06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 116,
            "endLine": 120
          }
        ],
        "sample": "  \n  if (totals.functions.pct < COVERAGE_THRESHOLDS.functions) {\n    failures.push(`Functions: ${totals.functions.pct}% < ${COVERAGE_THRESHOLDS.functions}%`);\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4feb155456df72d95871b8a8fb8db2d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 117,
            "endLine": 121
          }
        ],
        "sample": "  if (totals.functions.pct < COVERAGE_THRESHOLDS.functions) {\n    failures.push(`Functions: ${totals.functions.pct}% < ${COVERAGE_THRESHOLDS.functions}%`);\n  }\n  \n  if (totals.lines.pct < COVERAGE_THR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e8d1f7e03835e1e5a3da7a1a4231ee37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "    failures.push(`Functions: ${totals.functions.pct}% < ${COVERAGE_THRESHOLDS.functions}%`);\n  }\n  \n  if (totals.lines.pct < COVERAGE_THRESHOLDS.lines) {\n    failures.push(`Lines: ${totals.lines.pct}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "deb29bf775cfd9c490c8ca53d7a5521e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "  }\n  \n  if (totals.lines.pct < COVERAGE_THRESHOLDS.lines) {\n    failures.push(`Lines: ${totals.lines.pct}% < ${COVERAGE_THRESHOLDS.lines}%`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aba8906dd1dc1fa8256d832858d71aa4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "  \n  if (totals.lines.pct < COVERAGE_THRESHOLDS.lines) {\n    failures.push(`Lines: ${totals.lines.pct}% < ${COVERAGE_THRESHOLDS.lines}%`);\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f67d25a32b12c34e5c743c714c1a0679",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 121,
            "endLine": 125
          }
        ],
        "sample": "  if (totals.lines.pct < COVERAGE_THRESHOLDS.lines) {\n    failures.push(`Lines: ${totals.lines.pct}% < ${COVERAGE_THRESHOLDS.lines}%`);\n  }\n\n  if (failures.length > 0) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e039199722e4c16ecfeeb22e430fc48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 122,
            "endLine": 126
          }
        ],
        "sample": "    failures.push(`Lines: ${totals.lines.pct}% < ${COVERAGE_THRESHOLDS.lines}%`);\n  }\n\n  if (failures.length > 0) {\n    console.log('💀 ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fbeea9d8229a9a4533db44ebafd9ecf9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 123,
            "endLine": 127
          }
        ],
        "sample": "  }\n\n  if (failures.length > 0) {\n    console.log('💀 ========================================');\n    console.log('❌ QUALITY GATE FAILED - BUILD BLOCKED!');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c46366d65e3ac2e1f5830bd2cd98048",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "\n  if (failures.length > 0) {\n    console.log('💀 ========================================');\n    console.log('❌ QUALITY GATE FAILED - BUILD BLOCKED!');\n    console.log('💀 ===========================...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fb3c67617d0d05863ef545e266c6e9ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "  if (failures.length > 0) {\n    console.log('💀 ========================================');\n    console.log('❌ QUALITY GATE FAILED - BUILD BLOCKED!');\n    console.log('💀 ============================...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c5847c09abf61184edab604ee4a8ebb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "    console.log('💀 ========================================');\n    console.log('❌ QUALITY GATE FAILED - BUILD BLOCKED!');\n    console.log('💀 ========================================');\n    console.l...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45d88d7dc6f08ab1d2e103459d26d060",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 127,
            "endLine": 131
          }
        ],
        "sample": "    console.log('❌ QUALITY GATE FAILED - BUILD BLOCKED!');\n    console.log('💀 ========================================');\n    console.log('');\n    console.log('🚫 Coverage insuficiente detectado:');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bb71f3b674cfddc51fa3fa3d3681f633",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "    console.log('💀 ========================================');\n    console.log('');\n    console.log('🚫 Coverage insuficiente detectado:');\n    failures.forEach(failure => console.log(`   • ${failure...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1631b6eff4a31ed5c3e4aacc0d3a056e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 129,
            "endLine": 133
          }
        ],
        "sample": "    console.log('');\n    console.log('🚫 Coverage insuficiente detectado:');\n    failures.forEach(failure => console.log(`   • ${failure}`));\n    console.log('');\n    console.log('💡 Para desbloquear ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e33f512e5e5619e7896b7005b0a3d4c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "    console.log('🚫 Coverage insuficiente detectado:');\n    failures.forEach(failure => console.log(`   • ${failure}`));\n    console.log('');\n    console.log('💡 Para desbloquear el build:');\n    cons...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "269554ccc95efa6478359f6ebd869a95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 131,
            "endLine": 135
          }
        ],
        "sample": "    failures.forEach(failure => console.log(`   • ${failure}`));\n    console.log('');\n    console.log('💡 Para desbloquear el build:');\n    console.log('   1. Escribe más tests');\n    console.log('   ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1270a858da01c63d7a0da589a377f146",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "    console.log('');\n    console.log('💡 Para desbloquear el build:');\n    console.log('   1. Escribe más tests');\n    console.log('   2. Mejora la cobertura existente');\n    console.log('   3. Ejecut...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a7f5598ae15bccd83065fe44744655dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "    console.log('💡 Para desbloquear el build:');\n    console.log('   1. Escribe más tests');\n    console.log('   2. Mejora la cobertura existente');\n    console.log('   3. Ejecuta: npm run test:cover...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05c3c4857406140e44d8360b3742fa88",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "    console.log('   1. Escribe más tests');\n    console.log('   2. Mejora la cobertura existente');\n    console.log('   3. Ejecuta: npm run test:coverage');\n    console.log('   4. Repite hasta alcanza...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd700ae424c2c59cc96cc6e1bded56bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "    console.log('   2. Mejora la cobertura existente');\n    console.log('   3. Ejecuta: npm run test:coverage');\n    console.log('   4. Repite hasta alcanzar el 90% mínimo');\n    console.log('');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "931f65bd1868952f73badc82e079c4e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 136,
            "endLine": 140
          }
        ],
        "sample": "    console.log('   3. Ejecuta: npm run test:coverage');\n    console.log('   4. Repite hasta alcanzar el 90% mínimo');\n    console.log('');\n    console.log('🔥 \"Sin test no hay commit. Sin commit no h...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d1296811abc5e86bf9867c8a953f4968",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 137,
            "endLine": 141
          }
        ],
        "sample": "    console.log('   4. Repite hasta alcanzar el 90% mínimo');\n    console.log('');\n    console.log('🔥 \"Sin test no hay commit. Sin commit no hay sueldo.\" - Agents.md');\n    console.log('');\n    proce...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc94bf4bf577a40832ebbe7cf47d142c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 138,
            "endLine": 142
          }
        ],
        "sample": "    console.log('');\n    console.log('🔥 \"Sin test no hay commit. Sin commit no hay sueldo.\" - Agents.md');\n    console.log('');\n    process.exit(1);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b30d246809d6b1be9b04a14566fbb355",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "    console.log('🔥 \"Sin test no hay commit. Sin commit no hay sueldo.\" - Agents.md');\n    console.log('');\n    process.exit(1);\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18817bcf7fdebc3516b905f2e48de0b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 122,
            "endLine": 126
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 140,
            "endLine": 144
          }
        ],
        "sample": "    console.log('');\n    process.exit(1);\n  }\n\n  console.log('✅ ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f351b7a4fe2628aa52aefe93e0166b35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 141,
            "endLine": 145
          }
        ],
        "sample": "    process.exit(1);\n  }\n\n  console.log('✅ ========================================');\n  console.log('🎉 QUALITY GATE PASSED - BUILD ALLOWED!');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2631229ed7fa62509113a2fa3b948387",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 142,
            "endLine": 146
          }
        ],
        "sample": "  }\n\n  console.log('✅ ========================================');\n  console.log('🎉 QUALITY GATE PASSED - BUILD ALLOWED!');\n  console.log('✅ ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d6ad387be199edb01cd1766fb68b13b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 143,
            "endLine": 147
          }
        ],
        "sample": "\n  console.log('✅ ========================================');\n  console.log('🎉 QUALITY GATE PASSED - BUILD ALLOWED!');\n  console.log('✅ ========================================');\n  console.log('');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bdb923c1076234ff7d285263ed20b76c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 144,
            "endLine": 148
          }
        ],
        "sample": "  console.log('✅ ========================================');\n  console.log('🎉 QUALITY GATE PASSED - BUILD ALLOWED!');\n  console.log('✅ ========================================');\n  console.log('');\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73f8ff31c201c498d76f01537074430b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "  console.log('🎉 QUALITY GATE PASSED - BUILD ALLOWED!');\n  console.log('✅ ========================================');\n  console.log('');\n  console.log('🏆 ¡Coverage cumple con los estándares de calid...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea58a7b95c1931a799ba8147f0414e47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 128,
            "endLine": 132
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 146,
            "endLine": 150
          }
        ],
        "sample": "  console.log('✅ ========================================');\n  console.log('');\n  console.log('🏆 ¡Coverage cumple con los estándares de calidad!');\n  console.log('🚀 Procediendo con el build...');\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d7055e8540c4dbd25b92542e9ec9a05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 147,
            "endLine": 151
          }
        ],
        "sample": "  console.log('');\n  console.log('🏆 ¡Coverage cumple con los estándares de calidad!');\n  console.log('🚀 Procediendo con el build...');\n  console.log('');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3892215340f238669209c4dc782a1999",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 148,
            "endLine": 152
          }
        ],
        "sample": "  console.log('🏆 ¡Coverage cumple con los estándares de calidad!');\n  console.log('🚀 Procediendo con el build...');\n  console.log('');\n\n} catch (error) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a753bd85c61e578662b074bcd34e1883",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "  console.log('🚀 Procediendo con el build...');\n  console.log('');\n\n} catch (error) {\n  console.error('💥 ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d24c4b671f3ee7218132d2f4c7957422",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 150,
            "endLine": 154
          }
        ],
        "sample": "  console.log('');\n\n} catch (error) {\n  console.error('💥 ========================================');\n  console.error('❌ ERROR AL EJECUTAR COVERAGE CHECK');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7011e51c5fc64b54fd5affa72a3e72cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 151,
            "endLine": 155
          }
        ],
        "sample": "\n} catch (error) {\n  console.error('💥 ========================================');\n  console.error('❌ ERROR AL EJECUTAR COVERAGE CHECK');\n  console.error('💥 ========================================')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34eae1c5a8bf692c21b45cf14a878b6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "} catch (error) {\n  console.error('💥 ========================================');\n  console.error('❌ ERROR AL EJECUTAR COVERAGE CHECK');\n  console.error('💥 ========================================');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "56c163591918bd3c7631ddbf883f644d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "  console.error('💥 ========================================');\n  console.error('❌ ERROR AL EJECUTAR COVERAGE CHECK');\n  console.error('💥 ========================================');\n  console.error('...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce0f39e89a57faa370530ba31e05b269",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage-simple.js",
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage-simple.js",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "  console.error('❌ ERROR AL EJECUTAR COVERAGE CHECK');\n  console.error('💥 ========================================');\n  console.error('');\n  console.error('🚨 Error:', error.message);\n  console.error...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b7df4cf75dec9bf43fc2ac3f581fdea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/check-coverage.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/scripts/check-coverage.js",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "      \n      // Branches\n      totalBranches += Object.keys(b).length * 2; // Cada branch tiene 2 rutas\n      coveredBranches += Object.values(b).flat().filter(count => count > 0).length;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9e081b5822af5b4152248f18dff471af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/embed-wasm.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/embed-wasm.js",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/scripts/embed-wasm.js",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\n// Read WASM file\nconst wasmPath = path.join(__dirname, '../node_modules/@jitsi/rnnoise-wasm/dist/rnnoise.wasm');\nconst wasmBuffer = fs.readFileSync(wasmPath);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "93c953675133897696622750f7f8a264",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/scripts/embed-wasm.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/scripts/embed-wasm.js",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/scripts/embed-wasm.js",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "// Convert to base64\nconst wasmBase64 = wasmBuffer.toString('base64');\n\n// Create embedded module\nconst embeddedModule = `...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad6e229de9c99279463646be72db6d20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "    });\n\n    it('should handle multiple consecutive calls', async () => {\n      await initializeAudioEngine();\n      const engine = getEngine();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de12d9e288daef47d5eab24ec1bf3841",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "\n    it('should handle multiple consecutive calls', async () => {\n      await initializeAudioEngine();\n      const engine = getEngine();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "282a32224bbeeaaccd1f30d9d31e2660",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 313,
            "endLine": 317
          }
        ],
        "sample": "      await initializeAudioEngine();\n      const engine = getEngine();\n      \n      engine.getInputGain = vi.fn().mockReturnValue(1.5);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35cc016c590019a60d1cb70d66df83b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 175,
            "endLine": 179
          }
        ],
        "sample": "\n    it('should return different types of numeric values', async () => {\n      await initializeAudioEngine();\n      const engine = getEngine();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2baeeb5cc8e857adac0bc148c96b283",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "      \n      // Integer value\n      engine.getInputGain = vi.fn().mockReturnValue(2);\n      expect(getInputGain()).toBe(2);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb2233c0e31c8b1453730e849529cbf0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 183,
            "endLine": 187
          }
        ],
        "sample": "      \n      // Float value\n      engine.getInputGain = vi.fn().mockReturnValue(1.234567);\n      expect(getInputGain()).toBe(1.234567);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "23a11adc8dc5b27f19811a83980f17d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 187,
            "endLine": 191
          }
        ],
        "sample": "      \n      // Very small value\n      engine.getInputGain = vi.fn().mockReturnValue(0.00001);\n      expect(getInputGain()).toBe(0.00001);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "82c40d44df371fc82f86b45c621bbcb0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 206,
            "endLine": 210
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "      \n      // Set initial gain\n      setInputGain(1.5);\n      expect(getInputGain()).toBe(1.5);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "564f4420e9764bcd9104c0c0efef12e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 211,
            "endLine": 215
          }
        ],
        "sample": "      \n      // Simulate some operations\n      engine.processStream = vi.fn();\n      engine.processStream(new MediaStream());\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd65269b230bccb22b7f5b36d75379f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "      await initializeAudioEngine();\n      const engine = getEngine();\n      \n      let currentGain = 1.0;\n      engine.setInputGain = vi.fn((gain) => { currentGain = gain; });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73bd0a7c60d17acbaf262a42d0446265",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 353,
            "endLine": 357
          }
        ],
        "sample": "      const engine = getEngine();\n      \n      let currentGain = 1.0;\n      engine.setInputGain = vi.fn((gain) => { currentGain = gain; });\n      engine.getInputGain = vi.fn(() => currentGain);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8b68ca203274b2ef9d1deb5f97aea537",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.gain.test.ts",
            "startLine": 242,
            "endLine": 246
          }
        ],
        "sample": "      \n      // Update gain during processing\n      setInputGain(2.5);\n      expect(getInputGain()).toBe(2.5);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4faa61238eaf6e139bb6e8d192a6304e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts",
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "  initializeAudioEngine,\n  getEngine,\n  processStream,\n  processStreamChunked,\n  destroyEngine,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22692594514575dd045221a918a8a1ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts",
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 27,
            "endLine": 31
          }
        ],
        "sample": "  getEngine,\n  processStream,\n  processStreamChunked,\n  destroyEngine,\n  getEngineStatus,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6d85a99589d34636f9427d0c120af73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts",
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "  processStream,\n  processStreamChunked,\n  destroyEngine,\n  getEngineStatus,\n  getDiagnostics,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a56246b1f8dc45266ebcea742a91da6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "        maxChunksInMemory: 100,\n        noiseReductionLevel: 'high',\n        algorithm: 'rnnoise',\n        errors: [],\n        warnings: []...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18fac0e07b4db7352a0c6b28f8d9c509",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "    // Mock the constructor\n    (MurmubaraEngine as vi.MockedClass<typeof MurmubaraEngine>).mockImplementation(() => mockEngine);\n  });\n  \n  afterEach(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6402f04f049b3f5b8ba3dbd13832ec5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "      const mockController = { \n        stop: vi.fn(),\n        stream: mockStream,\n        processor: {} as any,\n        pause: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8273519bacd1e82e4451d396082333ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 160,
            "endLine": 164
          }
        ],
        "sample": "        stop: vi.fn(),\n        stream: mockStream,\n        processor: {} as any,\n        pause: vi.fn(),\n        resume: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "459b4ff373e39383d88423572a35272f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 128,
            "endLine": 132
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 161,
            "endLine": 165
          }
        ],
        "sample": "        stream: mockStream,\n        processor: {} as any,\n        pause: vi.fn(),\n        resume: vi.fn(),\n        getState: vi.fn().mockReturnValue('processing')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "887f28b3cc597bb63f9964ad873c84dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "        processor: {} as any,\n        pause: vi.fn(),\n        resume: vi.fn(),\n        getState: vi.fn().mockReturnValue('processing')\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "657c4cfc0b676e3071add56c37158416",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "        pause: vi.fn(),\n        resume: vi.fn(),\n        getState: vi.fn().mockReturnValue('processing')\n      };\n      mockEngine.processStream!.mockResolvedValueOnce(mockController);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fe68bb7b37cf9816539e31a818a6ff9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "        resume: vi.fn(),\n        getState: vi.fn().mockReturnValue('processing')\n      };\n      mockEngine.processStream!.mockResolvedValueOnce(mockController);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8a87decc10bdd849a41841155516a5fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "        getState: vi.fn().mockReturnValue('processing')\n      };\n      mockEngine.processStream!.mockResolvedValueOnce(mockController);\n      \n      await initializeAudioEngine();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "df04402aaee908b12e6a4bb442c97861",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 306,
            "endLine": 310
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 307,
            "endLine": 311
          }
        ],
        "sample": "      \n      // Process stream\n      const mockStream = {} as any;\n      await processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50cb0f7a6c9c27cb03c1c9583c0e45ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 311,
            "endLine": 315
          }
        ],
        "sample": "      \n      // Get diagnostics\n      const diag = getDiagnostics();\n      expect(diag.engineState).toBe('ready');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "66977e53ed80a37e0c729907a6963dd7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 314,
            "endLine": 318
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 315,
            "endLine": 319
          }
        ],
        "sample": "      \n      // Register callback\n      const callback = vi.fn();\n      onMetricsUpdate(callback);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ec3e4a58f7d17e7e01cffe0b097ae67",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/api.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/__tests__/api.test.ts",
            "startLine": 329,
            "endLine": 333
          }
        ],
        "sample": "      \n      // Destroy\n      await destroyEngine();\n      expect(getEngineStatus()).toBe('uninitialized');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6bba0f644ad303b59c2b44ff98931c4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 7,
            "endLine": 11
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 168,
            "endLine": 172
          }
        ],
        "sample": "    // Simple mock for getBoundingClientRect\n    Element.prototype.getBoundingClientRect = vi.fn(() => ({\n      left: 0,\n      top: 0,\n      right: 200,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c7ff2bf19efb2ee7efbfeb60eff8325",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "    Element.prototype.getBoundingClientRect = vi.fn(() => ({\n      left: 0,\n      top: 0,\n      right: 200,\n      bottom: 20,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7e8acd2cbd0bd7313a0d7ac31626883",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 170,
            "endLine": 174
          }
        ],
        "sample": "      left: 0,\n      top: 0,\n      right: 200,\n      bottom: 20,\n      width: 200,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c507aeff59603f52e618361e56dcb06a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "      top: 0,\n      right: 200,\n      bottom: 20,\n      width: 200,\n      height: 20,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b8d3313f5db9cf3fffc3d21fb3e7db5c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "      right: 200,\n      bottom: 20,\n      width: 200,\n      height: 20,\n      x: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61625ac9699d7d1f4314a17e1b131576",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "      width: 200,\n      height: 20,\n      x: 0,\n      y: 0,\n      toJSON: () => {},...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf7e5bc5b0d4b04d752da6f1747d7976",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 106,
            "endLine": 110
          }
        ],
        "sample": "      const mockOnPlayStateChange = vi.fn();\n      \n      render(\n        <AudioPlayer\n          src=\"test.mp3\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "23222db4eb743c77147a204e504f0387",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "        />\n      );\n      \n      const audio = document.querySelector('audio');\n      expect(audio).toHaveAttribute('src', 'test.mp3');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6a789d05033e8629d73e4a3ad0fba226",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "      );\n      \n      const audio = document.querySelector('audio');\n      expect(audio).toHaveAttribute('src', 'test.mp3');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9cbba98b28b18698f4429d157e41ae15",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 79,
            "endLine": 83
          }
        ],
        "sample": "      \n      const audio = document.querySelector('audio');\n      expect(audio).toHaveAttribute('src', 'test.mp3');\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9cd22c9cf57c09cbbf81453ec857eaf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "\n  describe('Time Formatting and Display', () => {\n    it('should show initial time display', () => {\n      render(<AudioPlayer src=\"test.mp3\" label=\"Test\" />);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bacd6cc79a5768c07ea3076a988b15a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 184,
            "endLine": 188
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "      const { unmount } = render(<AudioPlayer src=\"test.mp3\" label=\"Test\" />);\n      \n      expect(() => {\n        unmount();\n      }).not.toThrow();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2fecdfd694aebb5ca6943ad08f605724",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 270,
            "endLine": 274
          }
        ],
        "sample": "      const { rerender } = render(<AudioPlayer src=\"test1.mp3\" label=\"Test\" />);\n      \n      expect(() => {\n        rerender(<AudioPlayer src=\"test2.mp3\" label=\"Test\" />);\n      }).not.toThrow();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0025b7a18d0fcc65aa80c40a3a8d5ed5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 271,
            "endLine": 275
          }
        ],
        "sample": "      \n      expect(() => {\n        rerender(<AudioPlayer src=\"test2.mp3\" label=\"Test\" />);\n      }).not.toThrow();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6e90cd242c9c75e2fbbb56a96b749192",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 272,
            "endLine": 276
          }
        ],
        "sample": "      expect(() => {\n        rerender(<AudioPlayer src=\"test2.mp3\" label=\"Test\" />);\n      }).not.toThrow();\n    });\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc38f6ba4d7bae46dd2432baa0ea7f0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 195,
            "endLine": 199
          },
          {
            "file": "packages/murmuraba/src/__tests__/components/AudioPlayer.test.tsx",
            "startLine": 273,
            "endLine": 277
          }
        ],
        "sample": "        rerender(<AudioPlayer src=\"test2.mp3\" label=\"Test\" />);\n      }).not.toThrow();\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78960390ad9c66ac48eeca050140ccd3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 5,
            "endLine": 9
          }
        ],
        "sample": "  _rnnoise_create: vi.fn().mockReturnValue(123),\n  _rnnoise_destroy: vi.fn(),\n  _rnnoise_process_frame: vi.fn().mockReturnValue(1),\n  _malloc: vi.fn().mockReturnValue(1000),\n  _free: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "147080dfe310c35866bfa91b106a2907",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "  _rnnoise_destroy: vi.fn(),\n  _rnnoise_process_frame: vi.fn().mockReturnValue(1),\n  _malloc: vi.fn().mockReturnValue(1000),\n  _free: vi.fn(),\n  HEAPF32: new Float32Array(10000),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "15ed8f9b4160ebc023140c9bc1407c4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "  _malloc: vi.fn().mockReturnValue(1000),\n  _free: vi.fn(),\n  HEAPF32: new Float32Array(10000),\n  HEAP32: new Int32Array(10000)\n};...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d3794178b37870070843f90c8cce8ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "  _free: vi.fn(),\n  HEAPF32: new Float32Array(10000),\n  HEAP32: new Int32Array(10000)\n};\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3266f6f04b55ac5295017a21f19f2772",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "  HEAPF32: new Float32Array(10000),\n  HEAP32: new Int32Array(10000)\n};\n\n// Mock rnnoise-loader...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b0c16e35ea13431ff3c55d5449f7e37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 45,
            "endLine": 49
          }
        ],
        "sample": "// Mock rnnoise-loader\nvi.mock('../../utils/rnnoise-loader', () => ({\n  loadRNNoiseModule: vi.fn().mockResolvedValue(mockWasmModule)\n}));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fcaf3c9ebc42559e9e54ba462914da31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "let mockAudioContext: any;\nlet mockScriptProcessor: any;\nlet mockMediaStreamSource: any;\nlet mockMediaStreamDestination: any;\nlet mockBiquadFilter: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "736b5982476bf6a6f5b62d6ad2752506",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 53,
            "endLine": 57
          }
        ],
        "sample": "let mockScriptProcessor: any;\nlet mockMediaStreamSource: any;\nlet mockMediaStreamDestination: any;\nlet mockBiquadFilter: any;\nlet mockHighPassFilter: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b75843f70861a613a3648e02b804adc1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 54,
            "endLine": 58
          }
        ],
        "sample": "let mockMediaStreamSource: any;\nlet mockMediaStreamDestination: any;\nlet mockBiquadFilter: any;\nlet mockHighPassFilter: any;\nlet mockNotchFilter1: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f97bd9de0fd89b4a8b74cf14ff90316",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "let mockMediaStreamDestination: any;\nlet mockBiquadFilter: any;\nlet mockHighPassFilter: any;\nlet mockNotchFilter1: any;\nlet mockNotchFilter2: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab0af257504efafd8d04879baa2c7a22",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "let mockBiquadFilter: any;\nlet mockHighPassFilter: any;\nlet mockNotchFilter1: any;\nlet mockNotchFilter2: any;\nlet mockLowShelfFilter: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a7b8dc29c313a7ecf4c84de69bcae9e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "let mockHighPassFilter: any;\nlet mockNotchFilter1: any;\nlet mockNotchFilter2: any;\nlet mockLowShelfFilter: any;\nlet mockStream: any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "59eb0f1a8bb5eec5924d9806eb5e2925",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "  \n  // Reset the loader mock to its default behavior\n  const { loadRNNoiseModule } = await import('../../utils/rnnoise-loader');\n  (loadRNNoiseModule as any).mockResolvedValue(mockWasmModule);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "64cf7d74ccaf97ae1bdb066600390d9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "  // Create fresh mock nodes\n  mockScriptProcessor = {\n    connect: vi.fn(),\n    disconnect: vi.fn(),\n    onaudioprocess: null as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7501872491ad7d58b24f7e4d1a75d3a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "  mockScriptProcessor = {\n    connect: vi.fn(),\n    disconnect: vi.fn(),\n    onaudioprocess: null as any,\n    addEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35be885b4d24e0553d0ffa11a67dbc26",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn(),\n    onaudioprocess: null as any,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f47fd4ffd548af1768aadbecb919e045",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "    disconnect: vi.fn(),\n    onaudioprocess: null as any,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f0aa181f9135a5a0e59f179a4af36ca2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 182,
            "endLine": 186
          }
        ],
        "sample": "    onaudioprocess: null as any,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "099efc2eede7745527ea55474b86c704",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 183,
            "endLine": 187
          }
        ],
        "sample": "    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };\n\n  mockMediaStreamSource = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1adf2b7e32f4a85dc12cfda9e8bc2fca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "    removeEventListener: vi.fn()\n  };\n\n  mockMediaStreamSource = {\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1a2f25c6d60be35dcdda174bd1dafeb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 185,
            "endLine": 189
          }
        ],
        "sample": "  };\n\n  mockMediaStreamSource = {\n    connect: vi.fn(),\n    disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e67bb1cbddeb362684f12dda6c25be62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 186,
            "endLine": 190
          }
        ],
        "sample": "\n  mockMediaStreamSource = {\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10335d204937f527e8283377ab095af9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 187,
            "endLine": 191
          }
        ],
        "sample": "  mockMediaStreamSource = {\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45dd2b87ef2737b88549c9ba97e72362",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 188,
            "endLine": 192
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockMediaStreamDestination = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ec2bd1a197f0f8bb12f9fe7fb3a4b6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 189,
            "endLine": 193
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockMediaStreamDestination = {\n    stream: { ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2fd12449dde61abfa12290254a21ab0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 190,
            "endLine": 194
          }
        ],
        "sample": "  };\n\n  mockMediaStreamDestination = {\n    stream: { \n      id: 'mock-output-stream',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ed5c471432aef0d66d32f0a9f25ea73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 191,
            "endLine": 195
          }
        ],
        "sample": "\n  mockMediaStreamDestination = {\n    stream: { \n      id: 'mock-output-stream',\n      getTracks: vi.fn().mockReturnValue([]),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eb5fc2964d064ab47f64cdd55aa06d69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 192,
            "endLine": 196
          }
        ],
        "sample": "  mockMediaStreamDestination = {\n    stream: { \n      id: 'mock-output-stream',\n      getTracks: vi.fn().mockReturnValue([]),\n      getAudioTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f87cd40343e429a9b13b92ce13188be3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 193,
            "endLine": 197
          }
        ],
        "sample": "    stream: { \n      id: 'mock-output-stream',\n      getTracks: vi.fn().mockReturnValue([]),\n      getAudioTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      addEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "838a01b15dffcedb8cab4ab297a76fef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "      id: 'mock-output-stream',\n      getTracks: vi.fn().mockReturnValue([]),\n      getAudioTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      addEventListener: vi.fn(),\n      removeEventList...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8be61334af101abe534a8219bbed1551",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 86,
            "endLine": 90
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 195,
            "endLine": 199
          }
        ],
        "sample": "      getTracks: vi.fn().mockReturnValue([]),\n      getAudioTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      addEventListener: vi.fn(),\n      removeEventListener: vi.fn()\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55ebcbd8b24f3386552985b5c0c33338",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 196,
            "endLine": 200
          }
        ],
        "sample": "      getAudioTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      addEventListener: vi.fn(),\n      removeEventListener: vi.fn()\n    }\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f386b3b36ee80a2825e2a693f011d84c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "      addEventListener: vi.fn(),\n      removeEventListener: vi.fn()\n    }\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8cfcb3d578e0501d300229e3cc5c55a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 201,
            "endLine": 205
          }
        ],
        "sample": "\n  // Create mock stream\n  mockStream = {\n    id: 'mock-input-stream',\n    getTracks: vi.fn().mockReturnValue([{ kind: 'audio', stop: vi.fn() }]),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e94d4159dd96a45d9769f4eb4aed5216",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 202,
            "endLine": 206
          }
        ],
        "sample": "  // Create mock stream\n  mockStream = {\n    id: 'mock-input-stream',\n    getTracks: vi.fn().mockReturnValue([{ kind: 'audio', stop: vi.fn() }]),\n    addEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "332987f7adfb3c6033f55f1b7d994c2d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "  mockStream = {\n    id: 'mock-input-stream',\n    getTracks: vi.fn().mockReturnValue([{ kind: 'audio', stop: vi.fn() }]),\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff10912029f2e541571c043def853a5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 204,
            "endLine": 208
          }
        ],
        "sample": "    id: 'mock-input-stream',\n    getTracks: vi.fn().mockReturnValue([{ kind: 'audio', stop: vi.fn() }]),\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9fdf63305bcc5ee1bac44bec638a8e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 96,
            "endLine": 100
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 205,
            "endLine": 209
          }
        ],
        "sample": "    getTracks: vi.fn().mockReturnValue([{ kind: 'audio', stop: vi.fn() }]),\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00cdcddbe79e885e29b40f0d78bbb14d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 206,
            "endLine": 210
          }
        ],
        "sample": "    addEventListener: vi.fn(),\n    removeEventListener: vi.fn()\n  };\n\n  // Create multiple biquad filters for the chain...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "579bd2f2efb839475be32c41811af7f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "    removeEventListener: vi.fn()\n  };\n\n  // Create multiple biquad filters for the chain\n  mockHighPassFilter = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a3f187ab4554797f1fbe1520e1538410",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 208,
            "endLine": 212
          }
        ],
        "sample": "  };\n\n  // Create multiple biquad filters for the chain\n  mockHighPassFilter = {\n    type: '' as BiquadFilterType,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ece4351640d07504afcef409dc610d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 209,
            "endLine": 213
          }
        ],
        "sample": "\n  // Create multiple biquad filters for the chain\n  mockHighPassFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b70709abba2e32bf93fd152649e5ff00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 210,
            "endLine": 214
          }
        ],
        "sample": "  // Create multiple biquad filters for the chain\n  mockHighPassFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a9b1800a239bff2d32b7aea674ec5fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 211,
            "endLine": 215
          }
        ],
        "sample": "  mockHighPassFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    gain: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "85d1d4d185dc55d84a08ea456acc2672",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 216,
            "endLine": 220
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockNotchFilter1 = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61449c7ea698dce6fbc2a9ce9445f906",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 217,
            "endLine": 221
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockNotchFilter1 = {\n    type: '' as BiquadFilterType,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5643f8fc05f03d8cf6daf5fe7724441c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 218,
            "endLine": 222
          }
        ],
        "sample": "  };\n\n  mockNotchFilter1 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1d578e9cf625c7808d059dbe394cc95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 219,
            "endLine": 223
          }
        ],
        "sample": "\n  mockNotchFilter1 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "245fe2d506457bf47ac736de18438830",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 220,
            "endLine": 224
          }
        ],
        "sample": "  mockNotchFilter1 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ff871be13d85424f2f687c99aa29094",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 224,
            "endLine": 228
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockNotchFilter2 = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "074fd4bd16ee6181da1ee5a2fc6aef48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 225,
            "endLine": 229
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockNotchFilter2 = {\n    type: '' as BiquadFilterType,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c5902af1b388730b0eb5061d8cb0301f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 226,
            "endLine": 230
          }
        ],
        "sample": "  };\n\n  mockNotchFilter2 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96e50afde1c352034e349920dbfb947e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 227,
            "endLine": 231
          }
        ],
        "sample": "\n  mockNotchFilter2 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "29b965a4e986a115598f629ce93ff610",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 228,
            "endLine": 232
          }
        ],
        "sample": "  mockNotchFilter2 = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b34d8a1b4a0490236488d73d1c5f915c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 232,
            "endLine": 236
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockLowShelfFilter = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e79c14bffcf8bc981d72ac6e2a4450ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 233,
            "endLine": 237
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockLowShelfFilter = {\n    type: '' as BiquadFilterType,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a53ceed3560ddb1fa59bde28af7cfbe8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 234,
            "endLine": 238
          }
        ],
        "sample": "  };\n\n  mockLowShelfFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f9b2f95ce9865a0d1828c918ba48204c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 235,
            "endLine": 239
          }
        ],
        "sample": "\n  mockLowShelfFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a40a35b36bd84673639dfdee3134f6bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 236,
            "endLine": 240
          }
        ],
        "sample": "  mockLowShelfFilter = {\n    type: '' as BiquadFilterType,\n    frequency: { value: 0 },\n    Q: { value: 0 },\n    gain: { value: 0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ee4fe457de351d3a09c70bd951cb094",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 241,
            "endLine": 245
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockBiquadFilter = mockHighPassFilter; // Default to high pass for backward compatibility...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "76d52fd08762042e33df3836b6935aad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 242,
            "endLine": 246
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockBiquadFilter = mockHighPassFilter; // Default to high pass for backward compatibility\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b215c24476387316587a8f48ad71294b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 244,
            "endLine": 248
          }
        ],
        "sample": "\n  mockBiquadFilter = mockHighPassFilter; // Default to high pass for backward compatibility\n  \n  // Create a fresh mock AudioContext\n  const mockAnalyser = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45a4956dfcbf8534dae146ba563aebb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 136,
            "endLine": 140
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "  mockBiquadFilter = mockHighPassFilter; // Default to high pass for backward compatibility\n  \n  // Create a fresh mock AudioContext\n  const mockAnalyser = {\n    fftSize: 2048,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "896c92717f68b5bdfad6fec554480a3b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 137,
            "endLine": 141
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 246,
            "endLine": 250
          }
        ],
        "sample": "  \n  // Create a fresh mock AudioContext\n  const mockAnalyser = {\n    fftSize: 2048,\n    frequencyBinCount: 1024,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "053b23d884fc29259882037be385a73f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 247,
            "endLine": 251
          }
        ],
        "sample": "  // Create a fresh mock AudioContext\n  const mockAnalyser = {\n    fftSize: 2048,\n    frequencyBinCount: 1024,\n    getFloatFrequencyData: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1948bf66b31e5d3e0a4f8611923835d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 139,
            "endLine": 143
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 248,
            "endLine": 252
          }
        ],
        "sample": "  const mockAnalyser = {\n    fftSize: 2048,\n    frequencyBinCount: 1024,\n    getFloatFrequencyData: vi.fn(),\n    getByteFrequencyData: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b3f4b861f1ebe1b913a6aec420b24174",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 140,
            "endLine": 144
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 249,
            "endLine": 253
          }
        ],
        "sample": "    fftSize: 2048,\n    frequencyBinCount: 1024,\n    getFloatFrequencyData: vi.fn(),\n    getByteFrequencyData: vi.fn(),\n    getFloatTimeDomainData: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6c4ca5bdbc9fcb33bcf05f1882402be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 250,
            "endLine": 254
          }
        ],
        "sample": "    frequencyBinCount: 1024,\n    getFloatFrequencyData: vi.fn(),\n    getByteFrequencyData: vi.fn(),\n    getFloatTimeDomainData: vi.fn(),\n    getByteTimeDomainData: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cc7f6f9e5bc0e98acc5b77b112a416c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 251,
            "endLine": 255
          }
        ],
        "sample": "    getFloatFrequencyData: vi.fn(),\n    getByteFrequencyData: vi.fn(),\n    getFloatTimeDomainData: vi.fn(),\n    getByteTimeDomainData: vi.fn(),\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7cfd27ba23253007184ccd21eded8e35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "    getByteFrequencyData: vi.fn(),\n    getFloatTimeDomainData: vi.fn(),\n    getByteTimeDomainData: vi.fn(),\n    connect: vi.fn(),\n    disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "feb63623270421eeaf389358cb83a42e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 253,
            "endLine": 257
          }
        ],
        "sample": "    getFloatTimeDomainData: vi.fn(),\n    getByteTimeDomainData: vi.fn(),\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "08b11e6cab1691bd0b95caefe3a23ba6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 254,
            "endLine": 258
          }
        ],
        "sample": "    getByteTimeDomainData: vi.fn(),\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a75bbff0e53533a2e393232aad2007de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 255,
            "endLine": 259
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  const mockGainNode = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ddc044bac07b2e0fa7343f87f79194c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 256,
            "endLine": 260
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  const mockGainNode = {\n    gain: { ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "df008d30681753a385b67adbb04e8214",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "\n  const mockGainNode = {\n    gain: { \n      value: 1,\n      setTargetAtTime: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51e34e0f6924fdfdb100f00d22ca7236",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 259,
            "endLine": 263
          }
        ],
        "sample": "  const mockGainNode = {\n    gain: { \n      value: 1,\n      setTargetAtTime: vi.fn()\n    },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "262e1ce778e3d30ded353d4d9f5e3b8d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "    gain: { \n      value: 1,\n      setTargetAtTime: vi.fn()\n    },\n    connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19c2996cd6fed2cabf4fdec2cbf761f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 261,
            "endLine": 265
          }
        ],
        "sample": "      value: 1,\n      setTargetAtTime: vi.fn()\n    },\n    connect: vi.fn(),\n    disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d1c460582ae9267ce4b18d4880830138",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "      setTargetAtTime: vi.fn()\n    },\n    connect: vi.fn(),\n    disconnect: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f51a24fe9ada3d9a1af31a170bd6fb41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 155,
            "endLine": 159
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 264,
            "endLine": 268
          }
        ],
        "sample": "    connect: vi.fn(),\n    disconnect: vi.fn()\n  };\n\n  mockAudioContext = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27a47a284c6a326f1565f4b83d5bb162",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 265,
            "endLine": 269
          }
        ],
        "sample": "    disconnect: vi.fn()\n  };\n\n  mockAudioContext = {\n    state: 'running' as AudioContextState,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f4b34b4fcd526f75b45b12949b8176a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 266,
            "endLine": 270
          }
        ],
        "sample": "  };\n\n  mockAudioContext = {\n    state: 'running' as AudioContextState,\n    sampleRate: 48000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f805f90e804ea67e71c441b70b578ce0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 267,
            "endLine": 271
          }
        ],
        "sample": "\n  mockAudioContext = {\n    state: 'running' as AudioContextState,\n    sampleRate: 48000,\n    destination: { maxChannelCount: 2 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b988ba2a0784251cb2be3ebb2f3626b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 268,
            "endLine": 272
          }
        ],
        "sample": "  mockAudioContext = {\n    state: 'running' as AudioContextState,\n    sampleRate: 48000,\n    destination: { maxChannelCount: 2 },\n    createScriptProcessor: vi.fn().mockReturnValue(mockScriptProcessor...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f743b7424e366701a23863237f52c62f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 269,
            "endLine": 273
          }
        ],
        "sample": "    state: 'running' as AudioContextState,\n    sampleRate: 48000,\n    destination: { maxChannelCount: 2 },\n    createScriptProcessor: vi.fn().mockReturnValue(mockScriptProcessor),\n    createMediaStrea...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7513f5c886630356597a1c1609b89264",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 270,
            "endLine": 274
          }
        ],
        "sample": "    sampleRate: 48000,\n    destination: { maxChannelCount: 2 },\n    createScriptProcessor: vi.fn().mockReturnValue(mockScriptProcessor),\n    createMediaStreamSource: vi.fn().mockReturnValue(mockMediaS...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c5023cd7a38f3c06d45c27c2a661381f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 271,
            "endLine": 275
          }
        ],
        "sample": "    destination: { maxChannelCount: 2 },\n    createScriptProcessor: vi.fn().mockReturnValue(mockScriptProcessor),\n    createMediaStreamSource: vi.fn().mockReturnValue(mockMediaStreamSource),\n    creat...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2aa9513b828292e1e23f2fb8045e3cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 272,
            "endLine": 276
          }
        ],
        "sample": "    createScriptProcessor: vi.fn().mockReturnValue(mockScriptProcessor),\n    createMediaStreamSource: vi.fn().mockReturnValue(mockMediaStreamSource),\n    createMediaStreamDestination: vi.fn().mockRetu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0abb562c371a9e7722d780e35c29b1c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 273,
            "endLine": 277
          }
        ],
        "sample": "    createMediaStreamSource: vi.fn().mockReturnValue(mockMediaStreamSource),\n    createMediaStreamDestination: vi.fn().mockReturnValue(mockMediaStreamDestination),\n    createBiquadFilter: vi.fn()\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7ce3ad4313a57b2d40acebf3715f45a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 274,
            "endLine": 278
          }
        ],
        "sample": "    createMediaStreamDestination: vi.fn().mockReturnValue(mockMediaStreamDestination),\n    createBiquadFilter: vi.fn()\n      .mockReturnValueOnce(mockNotchFilter1)\n      .mockReturnValueOnce(mockNotch...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0190280d89082352b19527886426dab3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 275,
            "endLine": 279
          }
        ],
        "sample": "    createBiquadFilter: vi.fn()\n      .mockReturnValueOnce(mockNotchFilter1)\n      .mockReturnValueOnce(mockNotchFilter2)\n      .mockReturnValueOnce(mockHighPassFilter)\n      .mockReturnValueOnce(mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5964ca6fdd41534b0332a04677fb9d5d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 276,
            "endLine": 280
          }
        ],
        "sample": "      .mockReturnValueOnce(mockNotchFilter1)\n      .mockReturnValueOnce(mockNotchFilter2)\n      .mockReturnValueOnce(mockHighPassFilter)\n      .mockReturnValueOnce(mockLowShelfFilter)\n      .mockRetur...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50e9892200dea919781eb94658c57bb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 277,
            "endLine": 281
          }
        ],
        "sample": "      .mockReturnValueOnce(mockNotchFilter2)\n      .mockReturnValueOnce(mockHighPassFilter)\n      .mockReturnValueOnce(mockLowShelfFilter)\n      .mockReturnValue(mockBiquadFilter),\n    createAnalyser:...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "213d030fa8fea6772d5f4f5586048fb2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 278,
            "endLine": 282
          }
        ],
        "sample": "      .mockReturnValueOnce(mockHighPassFilter)\n      .mockReturnValueOnce(mockLowShelfFilter)\n      .mockReturnValue(mockBiquadFilter),\n    createAnalyser: vi.fn().mockReturnValue(mockAnalyser),\n    c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46c6cd6099c79979934a01cbd71ce64d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 279,
            "endLine": 283
          }
        ],
        "sample": "      .mockReturnValueOnce(mockLowShelfFilter)\n      .mockReturnValue(mockBiquadFilter),\n    createAnalyser: vi.fn().mockReturnValue(mockAnalyser),\n    createGain: vi.fn().mockReturnValue(mockGainNode...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8bbbe9c06857c527c33524c056b9d9c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 280,
            "endLine": 284
          }
        ],
        "sample": "      .mockReturnValue(mockBiquadFilter),\n    createAnalyser: vi.fn().mockReturnValue(mockAnalyser),\n    createGain: vi.fn().mockReturnValue(mockGainNode),\n    resume: vi.fn().mockResolvedValue(undefi...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7e6e5a39fb6cfb39e4c2cf875d9691da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 172,
            "endLine": 176
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 281,
            "endLine": 285
          }
        ],
        "sample": "    createAnalyser: vi.fn().mockReturnValue(mockAnalyser),\n    createGain: vi.fn().mockReturnValue(mockGainNode),\n    resume: vi.fn().mockResolvedValue(undefined),\n    close: vi.fn().mockResolvedValue...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dcd381400eac3ac718abc495e530910e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 282,
            "endLine": 286
          }
        ],
        "sample": "    createGain: vi.fn().mockReturnValue(mockGainNode),\n    resume: vi.fn().mockResolvedValue(undefined),\n    close: vi.fn().mockResolvedValue(undefined),\n    currentTime: 0,\n    baseLatency: 0.01,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c7e2f25a5021d763c2cd389c9294067",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 283,
            "endLine": 287
          }
        ],
        "sample": "    resume: vi.fn().mockResolvedValue(undefined),\n    close: vi.fn().mockResolvedValue(undefined),\n    currentTime: 0,\n    baseLatency: 0.01,\n    outputLatency: 0.02,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fb7eb4e66a14bbb06e0a50798102491b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 284,
            "endLine": 288
          }
        ],
        "sample": "    close: vi.fn().mockResolvedValue(undefined),\n    currentTime: 0,\n    baseLatency: 0.01,\n    outputLatency: 0.02,\n    addEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "192c11cfcfe4712b03e1218c2f25e2e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 285,
            "endLine": 289
          }
        ],
        "sample": "    currentTime: 0,\n    baseLatency: 0.01,\n    outputLatency: 0.02,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0565c419008381d7e112155d37cfacac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 286,
            "endLine": 290
          }
        ],
        "sample": "    baseLatency: 0.01,\n    outputLatency: 0.02,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f36425fe5bc14c806f5bce4f1a987e73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 287,
            "endLine": 291
          }
        ],
        "sample": "    outputLatency: 0.02,\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "67e71501157951a82d3afad4de718f16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 181,
            "endLine": 185
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 290,
            "endLine": 294
          }
        ],
        "sample": "    dispatchEvent: vi.fn()\n  };\n  \n  // Mock the global AudioContext constructor\n  global.AudioContext = vi.fn().mockImplementation(() => mockAudioContext);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae3742d25ee8eb7053601e75aa8a15a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 291,
            "endLine": 295
          }
        ],
        "sample": "  };\n  \n  // Mock the global AudioContext constructor\n  global.AudioContext = vi.fn().mockImplementation(() => mockAudioContext);\n  global.webkitAudioContext = global.AudioContext;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "16f62ec2765939d5b3f7c32e8c36fcb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 294,
            "endLine": 298
          }
        ],
        "sample": "  global.AudioContext = vi.fn().mockImplementation(() => mockAudioContext);\n  global.webkitAudioContext = global.AudioContext;\n  \n  // Mock window for checkEnvironmentSupport\n  global.window = Object....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7dc86b7ded2512921d56e6c4cf256db6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 295,
            "endLine": 299
          }
        ],
        "sample": "  global.webkitAudioContext = global.AudioContext;\n  \n  // Mock window for checkEnvironmentSupport\n  global.window = Object.assign(global.window || {}, {\n    AudioContext: global.AudioContext,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28e0fcab7afd21d14a9c92ae29bbe676",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 296,
            "endLine": 300
          }
        ],
        "sample": "  \n  // Mock window for checkEnvironmentSupport\n  global.window = Object.assign(global.window || {}, {\n    AudioContext: global.AudioContext,\n    webkitAudioContext: global.AudioContext,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a4982277f8d31e000d1f7a50d688ccb4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 297,
            "endLine": 301
          }
        ],
        "sample": "  // Mock window for checkEnvironmentSupport\n  global.window = Object.assign(global.window || {}, {\n    AudioContext: global.AudioContext,\n    webkitAudioContext: global.AudioContext,\n    WebAssembly:...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81c0fdea76103b6c0344e5c00115e25c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 298,
            "endLine": 302
          }
        ],
        "sample": "  global.window = Object.assign(global.window || {}, {\n    AudioContext: global.AudioContext,\n    webkitAudioContext: global.AudioContext,\n    WebAssembly: {},\n    AudioWorkletNode: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f0a08f81ebbfaacb779960c7bf158bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 299,
            "endLine": 303
          }
        ],
        "sample": "    AudioContext: global.AudioContext,\n    webkitAudioContext: global.AudioContext,\n    WebAssembly: {},\n    AudioWorkletNode: vi.fn(),\n    MediaStream: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2eb7aa14713086717ae1e207b081213a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 300,
            "endLine": 304
          }
        ],
        "sample": "    webkitAudioContext: global.AudioContext,\n    WebAssembly: {},\n    AudioWorkletNode: vi.fn(),\n    MediaStream: vi.fn(),\n    MediaRecorder: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4438dc862b3a9fe3b2a006ea51b88ac2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 318,
            "endLine": 322
          }
        ],
        "sample": "    memory: {\n      usedJSHeapSize: 1000000,\n      jsHeapSizeLimit: 2000000,\n      totalJSHeapSize: 1500000\n    },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b161dcd82c5c60565decfef7c932281",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 211,
            "endLine": 215
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 319,
            "endLine": 323
          }
        ],
        "sample": "      usedJSHeapSize: 1000000,\n      jsHeapSizeLimit: 2000000,\n      totalJSHeapSize: 1500000\n    },\n    now: vi.fn().mockReturnValue(0)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f9a8c8ceb65156d02de27fe993f073bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 326,
            "endLine": 330
          }
        ],
        "sample": "  \n  // Mock document\n  global.document = {\n    createElement: vi.fn().mockReturnValue({\n      onload: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "76a705cc750b6311e841c54b5daca102",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 327,
            "endLine": 331
          }
        ],
        "sample": "  // Mock document\n  global.document = {\n    createElement: vi.fn().mockReturnValue({\n      onload: null,\n      onerror: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9721eec2f8f94dc0b4a7ee4e9132819b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 219,
            "endLine": 223
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 328,
            "endLine": 332
          }
        ],
        "sample": "  global.document = {\n    createElement: vi.fn().mockReturnValue({\n      onload: null,\n      onerror: null,\n      src: ''...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e05a2781a5b90f40304476193774de01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 220,
            "endLine": 224
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 329,
            "endLine": 333
          }
        ],
        "sample": "    createElement: vi.fn().mockReturnValue({\n      onload: null,\n      onerror: null,\n      src: ''\n    }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "152dedf448dc7730ecbb1a30f7dec82a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 222,
            "endLine": 226
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 331,
            "endLine": 335
          }
        ],
        "sample": "      onerror: null,\n      src: ''\n    }),\n    head: {\n      appendChild: vi.fn().mockImplementation((script) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d920fb30c10abb7f905d87d9eadbb384",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 332,
            "endLine": 336
          }
        ],
        "sample": "      src: ''\n    }),\n    head: {\n      appendChild: vi.fn().mockImplementation((script) => {\n        // Simulate script loading by calling onload after a microtask...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a3b67a1c5fe6b308cf281be9c8bde5d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 333,
            "endLine": 337
          }
        ],
        "sample": "    }),\n    head: {\n      appendChild: vi.fn().mockImplementation((script) => {\n        // Simulate script loading by calling onload after a microtask\n        setTimeout(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7853b6de336067d9fcd05f669b82b32b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 334,
            "endLine": 338
          }
        ],
        "sample": "    head: {\n      appendChild: vi.fn().mockImplementation((script) => {\n        // Simulate script loading by calling onload after a microtask\n        setTimeout(() => {\n          if (script.onload) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00b7490659a7bfcfa297e1282be9bf18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 335,
            "endLine": 339
          }
        ],
        "sample": "      appendChild: vi.fn().mockImplementation((script) => {\n        // Simulate script loading by calling onload after a microtask\n        setTimeout(() => {\n          if (script.onload) {\n           ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c07af470203a38cd3426a8701d224d7d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 227,
            "endLine": 231
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 336,
            "endLine": 340
          }
        ],
        "sample": "        // Simulate script loading by calling onload after a microtask\n        setTimeout(() => {\n          if (script.onload) {\n            script.onload();\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19c0888ea41999f6bdadf5b1aa4dfb53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 228,
            "endLine": 232
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 337,
            "endLine": 341
          }
        ],
        "sample": "        setTimeout(() => {\n          if (script.onload) {\n            script.onload();\n          }\n        }, 0);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b81522a534d42b789dec157f1d08a3b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 248,
            "endLine": 252
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 47,
            "endLine": 51
          }
        ],
        "sample": "  let engine: MurmubaraEngine;\n  let mockStateManager: vi.Mocked<StateManager>;\n  let mockLogger: vi.Mocked<Logger>;\n  let mockWorkerManager: vi.Mocked<WorkerManager>;\n  let mockMetricsManager: vi.Moc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74fc53e46e3f84e391f7d85a6f206b79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 255,
            "endLine": 259
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 71,
            "endLine": 75
          }
        ],
        "sample": "    // Create fresh mocks for each test\n    mockStateManager = {\n      getState: vi.fn().mockReturnValue('uninitialized'),\n      canTransitionTo: vi.fn().mockReturnValue(true),\n      transitionTo: vi....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d70a23abfb28045de03bf432aab2700",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 256,
            "endLine": 260
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "    mockStateManager = {\n      getState: vi.fn().mockReturnValue('uninitialized'),\n      canTransitionTo: vi.fn().mockReturnValue(true),\n      transitionTo: vi.fn().mockReturnValue(true),\n      isInSt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "672aab4a584e0675f73c4821533bc476",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "      getState: vi.fn().mockReturnValue('uninitialized'),\n      canTransitionTo: vi.fn().mockReturnValue(true),\n      transitionTo: vi.fn().mockReturnValue(true),\n      isInState: vi.fn().mockReturnVa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2c1778ecb9ec6c8d65d767d8894995f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 258,
            "endLine": 262
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 74,
            "endLine": 78
          }
        ],
        "sample": "      canTransitionTo: vi.fn().mockReturnValue(true),\n      transitionTo: vi.fn().mockReturnValue(true),\n      isInState: vi.fn().mockReturnValue(false),\n      requireState: vi.fn(),\n      reset: vi.f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "250d7875245a7b1b835b770e41783545",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 75,
            "endLine": 79
          }
        ],
        "sample": "      transitionTo: vi.fn().mockReturnValue(true),\n      isInState: vi.fn().mockReturnValue(false),\n      requireState: vi.fn(),\n      reset: vi.fn(),\n      on: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55d6f704dc7fc7c0e9b2c01600dd4d50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "      isInState: vi.fn().mockReturnValue(false),\n      requireState: vi.fn(),\n      reset: vi.fn(),\n      on: vi.fn(),\n      off: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bff273e48f34216d766937d074dc6354",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "      requireState: vi.fn(),\n      reset: vi.fn(),\n      on: vi.fn(),\n      off: vi.fn(),\n      emit: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "552df4efe2ba84431084a0b5d7388b32",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "      reset: vi.fn(),\n      on: vi.fn(),\n      off: vi.fn(),\n      emit: vi.fn(),\n      once: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2ec7e76ace62099a41c3135000a3100",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "      removeAllListeners: vi.fn(),\n      listenerCount: vi.fn().mockReturnValue(0)\n    } as any;\n    \n    mockLogger = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba509614c8638e1bc2f6de8de7d5af69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 268,
            "endLine": 272
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 84,
            "endLine": 88
          }
        ],
        "sample": "      listenerCount: vi.fn().mockReturnValue(0)\n    } as any;\n    \n    mockLogger = {\n      debug: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7caba59a95283958378edca666c0eb5b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "    } as any;\n    \n    mockLogger = {\n      debug: vi.fn(),\n      info: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7227cdb1086297dfa3933d68fbcbd58b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 276,
            "endLine": 280
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "      setLevel: vi.fn(),\n      setLogHandler: vi.fn()\n    } as any;\n    \n    mockWorkerManager = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b5c61fa5ab96e3333b75293a2e5a3005",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 277,
            "endLine": 281
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "      setLogHandler: vi.fn()\n    } as any;\n    \n    mockWorkerManager = {\n      createWorker: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c208a85ee6bcab201e42519899db35c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 278,
            "endLine": 282
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "    } as any;\n    \n    mockWorkerManager = {\n      createWorker: vi.fn(),\n      getWorker: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f0fef931d7e5a48b28cc6265758a16a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 279,
            "endLine": 283
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "    \n    mockWorkerManager = {\n      createWorker: vi.fn(),\n      getWorker: vi.fn(),\n      sendMessage: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8ae92468fe483ea217cabede13fe57a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 96,
            "endLine": 100
          }
        ],
        "sample": "    mockWorkerManager = {\n      createWorker: vi.fn(),\n      getWorker: vi.fn(),\n      sendMessage: vi.fn(),\n      terminateWorker: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ea8bc21360817a896fa83424542b091",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 281,
            "endLine": 285
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "      createWorker: vi.fn(),\n      getWorker: vi.fn(),\n      sendMessage: vi.fn(),\n      terminateWorker: vi.fn(),\n      terminateAll: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9e2cfbbf94d00f444c50b1f5f6ab1dba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "      getWorker: vi.fn(),\n      sendMessage: vi.fn(),\n      terminateWorker: vi.fn(),\n      terminateAll: vi.fn(),\n      getActiveWorkerCount: vi.fn().mockReturnValue(0),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "29534da13c153a7081f98e2beec31676",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 288,
            "endLine": 292
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 106,
            "endLine": 110
          }
        ],
        "sample": "    } as any;\n    \n    mockMetricsManager = {\n      startAutoUpdate: vi.fn(),\n      stopAutoUpdate: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "85b77ccf2b641018eddf3a156324cc22",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 289,
            "endLine": 293
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "    \n    mockMetricsManager = {\n      startAutoUpdate: vi.fn(),\n      stopAutoUpdate: vi.fn(),\n      updateInputLevel: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9621303833ea760bd9392930a86454e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "    mockMetricsManager = {\n      startAutoUpdate: vi.fn(),\n      stopAutoUpdate: vi.fn(),\n      updateInputLevel: vi.fn(),\n      updateOutputLevel: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c03f8e308887f67fd036479743e3a28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 109,
            "endLine": 113
          }
        ],
        "sample": "      startAutoUpdate: vi.fn(),\n      stopAutoUpdate: vi.fn(),\n      updateInputLevel: vi.fn(),\n      updateOutputLevel: vi.fn(),\n      updateNoiseReduction: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d15c27b5b0638f633270829396ca11f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "      stopAutoUpdate: vi.fn(),\n      updateInputLevel: vi.fn(),\n      updateOutputLevel: vi.fn(),\n      updateNoiseReduction: vi.fn(),\n      updateVAD: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "853a394efa60aa1c7f31807535851917",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 111,
            "endLine": 115
          }
        ],
        "sample": "      updateInputLevel: vi.fn(),\n      updateOutputLevel: vi.fn(),\n      updateNoiseReduction: vi.fn(),\n      updateVAD: vi.fn(),\n      recordFrame: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0ba2502ca8a64bd83356309ac9ad683",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 112,
            "endLine": 116
          }
        ],
        "sample": "      updateOutputLevel: vi.fn(),\n      updateNoiseReduction: vi.fn(),\n      updateVAD: vi.fn(),\n      recordFrame: vi.fn(),\n      recordDroppedFrame: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "503f16049b69226eb5f11187fa3315d6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "      updateNoiseReduction: vi.fn(),\n      updateVAD: vi.fn(),\n      recordFrame: vi.fn(),\n      recordDroppedFrame: vi.fn(),\n      recordChunk: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "676f7662624ac785b36b79293f811077",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 296,
            "endLine": 300
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 114,
            "endLine": 118
          }
        ],
        "sample": "      updateVAD: vi.fn(),\n      recordFrame: vi.fn(),\n      recordDroppedFrame: vi.fn(),\n      recordChunk: vi.fn(),\n      getMetrics: vi.fn().mockReturnValue({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "154bbf8c1aa82e7c039e39cad45020eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 297,
            "endLine": 301
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "      recordFrame: vi.fn(),\n      recordDroppedFrame: vi.fn(),\n      recordChunk: vi.fn(),\n      getMetrics: vi.fn().mockReturnValue({\n        noiseReductionLevel: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc72e609c2ccddd2c125cfa83c180aa3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 298,
            "endLine": 302
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 116,
            "endLine": 120
          }
        ],
        "sample": "      recordDroppedFrame: vi.fn(),\n      recordChunk: vi.fn(),\n      getMetrics: vi.fn().mockReturnValue({\n        noiseReductionLevel: 0,\n        processingLatency: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc679acc938e4908bd01661ce2754d94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 303,
            "endLine": 307
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "        inputLevel: 0,\n        outputLevel: 0,\n        timestamp: Date.now(),\n        frameCount: 0,\n        droppedFrames: 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "58f921e0dcf0fdd2303096f95704d05d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 304,
            "endLine": 308
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "        outputLevel: 0,\n        timestamp: Date.now(),\n        frameCount: 0,\n        droppedFrames: 0\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "929fc8ae4c5e2c3af657ed364124b5cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 308,
            "endLine": 312
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 131,
            "endLine": 135
          }
        ],
        "sample": "      }),\n      reset: vi.fn(),\n      calculateRMS: vi.fn().mockReturnValue(0.5),\n      calculatePeak: vi.fn().mockReturnValue(0.8),\n      on: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d45af72174152ea503657d7330422a14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "      reset: vi.fn(),\n      calculateRMS: vi.fn().mockReturnValue(0.5),\n      calculatePeak: vi.fn().mockReturnValue(0.8),\n      on: vi.fn(),\n      off: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f6617ab3559dd3b668b8bd4931c80db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 310,
            "endLine": 314
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "      calculateRMS: vi.fn().mockReturnValue(0.5),\n      calculatePeak: vi.fn().mockReturnValue(0.8),\n      on: vi.fn(),\n      off: vi.fn(),\n      emit: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf4a0da02bf3f0e482f117bc496f138a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "      calculatePeak: vi.fn().mockReturnValue(0.8),\n      on: vi.fn(),\n      off: vi.fn(),\n      emit: vi.fn(),\n      once: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c934501889debe0531df7a0e3a5b7e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 316,
            "endLine": 320
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "      removeAllListeners: vi.fn(),\n      listenerCount: vi.fn().mockReturnValue(0)\n    } as any;\n    \n    // Mock constructors...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c0a40ff430a24d60c5fcc288cd63d4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 319,
            "endLine": 323
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 150,
            "endLine": 154
          }
        ],
        "sample": "    \n    // Mock constructors\n    (StateManager as vi.MockedClass<typeof StateManager>).mockImplementation(() => mockStateManager);\n    (Logger as vi.MockedClass<typeof Logger>).mockImplementation(() ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "760e6726dd907d495ccb4643adfe18b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 320,
            "endLine": 324
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 151,
            "endLine": 155
          }
        ],
        "sample": "    // Mock constructors\n    (StateManager as vi.MockedClass<typeof StateManager>).mockImplementation(() => mockStateManager);\n    (Logger as vi.MockedClass<typeof Logger>).mockImplementation(() => mo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2312db9637a315bb767457d9ae81e6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 321,
            "endLine": 325
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "    (StateManager as vi.MockedClass<typeof StateManager>).mockImplementation(() => mockStateManager);\n    (Logger as vi.MockedClass<typeof Logger>).mockImplementation(() => mockLogger);\n    (WorkerMan...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bebee1a7cea89e36e104f69dacb4783d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 322,
            "endLine": 326
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "    (Logger as vi.MockedClass<typeof Logger>).mockImplementation(() => mockLogger);\n    (WorkerManager as vi.MockedClass<typeof WorkerManager>).mockImplementation(() => mockWorkerManager);\n    (Metric...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a28d326424557c62dfb38dc805626c1b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 323,
            "endLine": 327
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "    (WorkerManager as vi.MockedClass<typeof WorkerManager>).mockImplementation(() => mockWorkerManager);\n    (MetricsManager as vi.MockedClass<typeof MetricsManager>).mockImplementation(() => mockMetr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35d5147be39b6ef7c47974f22bf3d86e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 324,
            "endLine": 328
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "    (MetricsManager as vi.MockedClass<typeof MetricsManager>).mockImplementation(() => mockMetricsManager);\n    \n    // Ensure ChunkProcessor is properly mocked if needed\n    (ChunkProcessor as vi.Moc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4ea2ff188433781be959a6df1d8a2ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 156,
            "endLine": 160
          }
        ],
        "sample": "    \n    // Ensure ChunkProcessor is properly mocked if needed\n    (ChunkProcessor as vi.MockedClass<typeof ChunkProcessor>).mockImplementation(\n      (sampleRate, config, logger, metrics) => ({\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "69809896284b08c7151b064135f9f00a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "    // Ensure ChunkProcessor is properly mocked if needed\n    (ChunkProcessor as vi.MockedClass<typeof ChunkProcessor>).mockImplementation(\n      (sampleRate, config, logger, metrics) => ({\n        ad...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "11533f4967e94777549a1135d56c36b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "    (ChunkProcessor as vi.MockedClass<typeof ChunkProcessor>).mockImplementation(\n      (sampleRate, config, logger, metrics) => ({\n        addSamples: vi.fn(),\n        flush: vi.fn(),\n        reset: ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00c60a3027e72a94fac225d23ebcd168",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "      (sampleRate, config, logger, metrics) => ({\n        addSamples: vi.fn(),\n        flush: vi.fn(),\n        reset: vi.fn(),\n        getStatus: vi.fn().mockReturnValue({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9c90fa6044875c0e211d66820f697289",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 329,
            "endLine": 333
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 160,
            "endLine": 164
          }
        ],
        "sample": "        addSamples: vi.fn(),\n        flush: vi.fn(),\n        reset: vi.fn(),\n        getStatus: vi.fn().mockReturnValue({\n          currentSampleCount: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e895edf2fdaa98492548aaa3b25f2d9e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 161,
            "endLine": 165
          }
        ],
        "sample": "        flush: vi.fn(),\n        reset: vi.fn(),\n        getStatus: vi.fn().mockReturnValue({\n          currentSampleCount: 0,\n          samplesPerChunk: 48000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db18544b284e3e2d0406abfe51c12a7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "        reset: vi.fn(),\n        getStatus: vi.fn().mockReturnValue({\n          currentSampleCount: 0,\n          samplesPerChunk: 48000,\n          chunkIndex: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a01dbd477d05fc8dcd766d7ff6bba4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 332,
            "endLine": 336
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "        getStatus: vi.fn().mockReturnValue({\n          currentSampleCount: 0,\n          samplesPerChunk: 48000,\n          chunkIndex: 0,\n          bufferFillPercentage: 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "792cffc48f0f38dd572894f966c0ca49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 333,
            "endLine": 337
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "          currentSampleCount: 0,\n          samplesPerChunk: 48000,\n          chunkIndex: 0,\n          bufferFillPercentage: 0\n        }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c16fe4becc6351135299b7697314202",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 334,
            "endLine": 338
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "          samplesPerChunk: 48000,\n          chunkIndex: 0,\n          bufferFillPercentage: 0\n        }),\n        on: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c646ac26e437451813bf45e49990e264",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 335,
            "endLine": 339
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 166,
            "endLine": 170
          }
        ],
        "sample": "          chunkIndex: 0,\n          bufferFillPercentage: 0\n        }),\n        on: vi.fn(),\n        off: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27bcf413e4f4ab2e50613224fee503ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 336,
            "endLine": 340
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "          bufferFillPercentage: 0\n        }),\n        on: vi.fn(),\n        off: vi.fn(),\n        emit: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f54aa144a75afdb8f938064541d6b12b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 337,
            "endLine": 341
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 168,
            "endLine": 172
          }
        ],
        "sample": "        }),\n        on: vi.fn(),\n        off: vi.fn(),\n        emit: vi.fn(),\n        once: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0dc880ff6b02daa2e635fd5b198cb9af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 340,
            "endLine": 344
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "        emit: vi.fn(),\n        once: vi.fn(),\n        removeAllListeners: vi.fn(),\n        listenerCount: vi.fn().mockReturnValue(0)\n      } as any)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ee3a149e8efb95e367851e7759d8a59",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 341,
            "endLine": 345
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "        once: vi.fn(),\n        removeAllListeners: vi.fn(),\n        listenerCount: vi.fn().mockReturnValue(0)\n      } as any)\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c5e62b32fe69a3326bac1468aad452ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 348,
            "endLine": 352
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 355,
            "endLine": 359
          }
        ],
        "sample": "  describe('Constructor', () => {\n    it('should create engine with default config', () => {\n      engine = new MurmubaraEngine();\n      \n      expect(StateManager).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b835bd3a1f9ed6a66dfd20345a79c13e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 356,
            "endLine": 360
          }
        ],
        "sample": "    it('should create engine with default config', () => {\n      engine = new MurmubaraEngine();\n      \n      expect(StateManager).toHaveBeenCalled();\n      expect(Logger).toHaveBeenCalledWith('[Murmu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "da0ff0f4d3ab30ef4b8b85817970364f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 357,
            "endLine": 361
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      \n      expect(StateManager).toHaveBeenCalled();\n      expect(Logger).toHaveBeenCalledWith('[Murmuraba]');\n      expect(WorkerManager).toHaveBeenCalledWith(m...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "26ec1a88020ec6bd4c40fda9243b60bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 358,
            "endLine": 362
          }
        ],
        "sample": "      \n      expect(StateManager).toHaveBeenCalled();\n      expect(Logger).toHaveBeenCalledWith('[Murmuraba]');\n      expect(WorkerManager).toHaveBeenCalledWith(mockLogger);\n      expect(MetricsManage...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f8020a2edb6a31dd6b2f4acc79accd0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 364,
            "endLine": 368
          }
        ],
        "sample": "    });\n    \n    it('should create engine with custom config', () => {\n      const config: MurmubaraConfig = {\n        logLevel: 'debug',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c158eeb1a5e911004b9fa04777240e81",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 365,
            "endLine": 369
          }
        ],
        "sample": "    \n    it('should create engine with custom config', () => {\n      const config: MurmubaraConfig = {\n        logLevel: 'debug',\n        noiseReductionLevel: 'high',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e056ff708e435abac9923560f17686f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 358,
            "endLine": 362
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 366,
            "endLine": 370
          }
        ],
        "sample": "    it('should create engine with custom config', () => {\n      const config: MurmubaraConfig = {\n        logLevel: 'debug',\n        noiseReductionLevel: 'high',\n        bufferSize: 2048,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9801975d7378d67344de378bfeb4bf9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 359,
            "endLine": 363
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 367,
            "endLine": 371
          }
        ],
        "sample": "      const config: MurmubaraConfig = {\n        logLevel: 'debug',\n        noiseReductionLevel: 'high',\n        bufferSize: 2048,\n        algorithm: 'rnnoise',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "59da80f66f13639e5fc5f57cbd4ae623",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 360,
            "endLine": 364
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 368,
            "endLine": 372
          }
        ],
        "sample": "        logLevel: 'debug',\n        noiseReductionLevel: 'high',\n        bufferSize: 2048,\n        algorithm: 'rnnoise',\n        autoCleanup: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d56ef418b9505cc7b416a72fd805632c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 361,
            "endLine": 365
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 369,
            "endLine": 373
          }
        ],
        "sample": "        noiseReductionLevel: 'high',\n        bufferSize: 2048,\n        algorithm: 'rnnoise',\n        autoCleanup: true,\n        cleanupDelay: 30000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "edc77c5407e7d8ece7665ba884c4767e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 370,
            "endLine": 374
          }
        ],
        "sample": "        bufferSize: 2048,\n        algorithm: 'rnnoise',\n        autoCleanup: true,\n        cleanupDelay: 30000,\n        useWorker: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45d3c8f06b0ac8cedf004cd42fbfd0a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 363,
            "endLine": 367
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 371,
            "endLine": 375
          }
        ],
        "sample": "        algorithm: 'rnnoise',\n        autoCleanup: true,\n        cleanupDelay: 30000,\n        useWorker: true,\n        workerPath: '/custom-worker.js',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74f6faac77dcc0c3bf90ceaac715be5e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 364,
            "endLine": 368
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 372,
            "endLine": 376
          }
        ],
        "sample": "        autoCleanup: true,\n        cleanupDelay: 30000,\n        useWorker: true,\n        workerPath: '/custom-worker.js',\n        allowDegraded: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a07fbd1c0668915cdd1b8218a629e75",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 365,
            "endLine": 369
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 373,
            "endLine": 377
          }
        ],
        "sample": "        cleanupDelay: 30000,\n        useWorker: true,\n        workerPath: '/custom-worker.js',\n        allowDegraded: true,\n        onLog: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2a4d85f5dcfdf2e112ae603ea934b83d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 366,
            "endLine": 370
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 374,
            "endLine": 378
          }
        ],
        "sample": "        useWorker: true,\n        workerPath: '/custom-worker.js',\n        allowDegraded: true,\n        onLog: vi.fn()\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d035cd18effbde34f9e41e099f77ed76",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 367,
            "endLine": 371
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 375,
            "endLine": 379
          }
        ],
        "sample": "        workerPath: '/custom-worker.js',\n        allowDegraded: true,\n        onLog: vi.fn()\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "87d71aae203d7dd7a0633f3746e0f806",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 368,
            "endLine": 372
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 376,
            "endLine": 380
          }
        ],
        "sample": "        allowDegraded: true,\n        onLog: vi.fn()\n      };\n      \n      engine = new MurmubaraEngine(config);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3b1ac0a87193c513898f9364b4395e3c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 369,
            "endLine": 373
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 377,
            "endLine": 381
          }
        ],
        "sample": "        onLog: vi.fn()\n      };\n      \n      engine = new MurmubaraEngine(config);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f087e43e2f6d6a6225d5fa23caf3cc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 370,
            "endLine": 374
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 378,
            "endLine": 382
          }
        ],
        "sample": "      };\n      \n      engine = new MurmubaraEngine(config);\n      \n      expect(mockLogger.setLevel).toHaveBeenCalledWith('debug');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ac73e4e2b9c1d8ef96893ebb13c520dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 371,
            "endLine": 375
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 379,
            "endLine": 383
          }
        ],
        "sample": "      \n      engine = new MurmubaraEngine(config);\n      \n      expect(mockLogger.setLevel).toHaveBeenCalledWith('debug');\n      expect(mockLogger.setLogHandler).toHaveBeenCalledWith(config.onLog);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "accf61ba8c748993d81b0bc4bfbc78c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 372,
            "endLine": 376
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 380,
            "endLine": 384
          }
        ],
        "sample": "      engine = new MurmubaraEngine(config);\n      \n      expect(mockLogger.setLevel).toHaveBeenCalledWith('debug');\n      expect(mockLogger.setLogHandler).toHaveBeenCalledWith(config.onLog);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d41cce79e32f15b6ac9bd2355e62bf02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 373,
            "endLine": 377
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 381,
            "endLine": 385
          }
        ],
        "sample": "      \n      expect(mockLogger.setLevel).toHaveBeenCalledWith('debug');\n      expect(mockLogger.setLogHandler).toHaveBeenCalledWith(config.onLog);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5d25347828dc7ef3f6958f0f05361da9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 374,
            "endLine": 378
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 382,
            "endLine": 386
          }
        ],
        "sample": "      expect(mockLogger.setLevel).toHaveBeenCalledWith('debug');\n      expect(mockLogger.setLogHandler).toHaveBeenCalledWith(config.onLog);\n    });\n    \n    it('should setup event forwarding', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6dae218fe7fb1bb3e58f5240a1e41955",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 375,
            "endLine": 379
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 383,
            "endLine": 387
          }
        ],
        "sample": "      expect(mockLogger.setLogHandler).toHaveBeenCalledWith(config.onLog);\n    });\n    \n    it('should setup event forwarding', () => {\n      engine = new MurmubaraEngine();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1bad61a49ce91a622cfbad71d632647b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 376,
            "endLine": 380
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 384,
            "endLine": 388
          }
        ],
        "sample": "    });\n    \n    it('should setup event forwarding', () => {\n      engine = new MurmubaraEngine();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c40ec834c557ee6befc5cc67f32e746a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 377,
            "endLine": 381
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 385,
            "endLine": 389
          }
        ],
        "sample": "    \n    it('should setup event forwarding', () => {\n      engine = new MurmubaraEngine();\n      \n      // Should forward state changes...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a1f577eefa8db398fa5a8ac2f4bcf512",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 386,
            "endLine": 390
          }
        ],
        "sample": "    it('should setup event forwarding', () => {\n      engine = new MurmubaraEngine();\n      \n      // Should forward state changes\n      expect(mockStateManager.on).toHaveBeenCalledWith('state-change'...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4bcb577bfd9d399c47bb10431bc75816",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 379,
            "endLine": 383
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 387,
            "endLine": 391
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      \n      // Should forward state changes\n      expect(mockStateManager.on).toHaveBeenCalledWith('state-change', expect.any(Function));\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "83fa2ede455709931e9d6c04275efcab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 380,
            "endLine": 384
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 388,
            "endLine": 392
          }
        ],
        "sample": "      \n      // Should forward state changes\n      expect(mockStateManager.on).toHaveBeenCalledWith('state-change', expect.any(Function));\n      \n      // Should forward metrics updates...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0f7625d11b19e94b665b564f41d0e43e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 381,
            "endLine": 385
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 389,
            "endLine": 393
          }
        ],
        "sample": "      // Should forward state changes\n      expect(mockStateManager.on).toHaveBeenCalledWith('state-change', expect.any(Function));\n      \n      // Should forward metrics updates\n      expect(mockMetr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4707dbc39a60b90a6bac3f79cb6ca918",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 382,
            "endLine": 386
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 390,
            "endLine": 394
          }
        ],
        "sample": "      expect(mockStateManager.on).toHaveBeenCalledWith('state-change', expect.any(Function));\n      \n      // Should forward metrics updates\n      expect(mockMetricsManager.on).toHaveBeenCalledWith('m...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "14687c96a6147862a18ac1ca7ddd3873",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 383,
            "endLine": 387
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 391,
            "endLine": 395
          }
        ],
        "sample": "      \n      // Should forward metrics updates\n      expect(mockMetricsManager.on).toHaveBeenCalledWith('metrics-update', expect.any(Function));\n      \n      // Test forwarding...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0a7c7b893a1e60367be19a9a153e816",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 384,
            "endLine": 388
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 392,
            "endLine": 396
          }
        ],
        "sample": "      // Should forward metrics updates\n      expect(mockMetricsManager.on).toHaveBeenCalledWith('metrics-update', expect.any(Function));\n      \n      // Test forwarding\n      const stateHandler = moc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7568037730181cca9f1f92e860e3f5a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 385,
            "endLine": 389
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 393,
            "endLine": 397
          }
        ],
        "sample": "      expect(mockMetricsManager.on).toHaveBeenCalledWith('metrics-update', expect.any(Function));\n      \n      // Test forwarding\n      const stateHandler = mockStateManager.on.mock.calls.find(c => c[...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2f977c6a0185170f91632b86dcdacbe0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 386,
            "endLine": 390
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 394,
            "endLine": 398
          }
        ],
        "sample": "      \n      // Test forwarding\n      const stateHandler = mockStateManager.on.mock.calls.find(c => c[0] === 'state-change')?.[1];\n      const metricsHandler = mockMetricsManager.on.mock.calls.find(c ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f3549274c858a1e509ec58ed12377f56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 387,
            "endLine": 391
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 395,
            "endLine": 399
          }
        ],
        "sample": "      // Test forwarding\n      const stateHandler = mockStateManager.on.mock.calls.find(c => c[0] === 'state-change')?.[1];\n      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0]...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3f6e6124b902d15daef681f5361aa134",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 388,
            "endLine": 392
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 396,
            "endLine": 400
          }
        ],
        "sample": "      const stateHandler = mockStateManager.on.mock.calls.find(c => c[0] === 'state-change')?.[1];\n      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0] === 'metrics-update')?.[...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3974a31d6e1ec9393c9ae56cedb2f78d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 389,
            "endLine": 393
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 397,
            "endLine": 401
          }
        ],
        "sample": "      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0] === 'metrics-update')?.[1];\n      \n      expect(stateHandler).toBeDefined();\n      expect(metricsHandler).toBeDefined();\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "053c65eea86504da122c200f492ecc10",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 390,
            "endLine": 394
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 398,
            "endLine": 402
          }
        ],
        "sample": "      \n      expect(stateHandler).toBeDefined();\n      expect(metricsHandler).toBeDefined();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6f9d0ff2d3ebf6abf1894f924039bbe9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 393,
            "endLine": 397
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 427,
            "endLine": 431
          }
        ],
        "sample": "    });\n    \n    it('should setup auto cleanup when enabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "617bef8e6a350de7646b7a4b2c4e779d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 394,
            "endLine": 398
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 428,
            "endLine": 432
          }
        ],
        "sample": "    \n    it('should setup auto cleanup when enabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: tr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c8627a8816fd38239e1ab4b4abe9e1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 429,
            "endLine": 433
          }
        ],
        "sample": "    it('should setup auto cleanup when enabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: true, c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "487fa86385a84f3075cf89b73b5a2c79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 396,
            "endLine": 400
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 430,
            "endLine": 434
          }
        ],
        "sample": "      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: true, cleanupDelay: 5000 });\n      \n      // Mock state as ready...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f43672a7acd330d010c6a7e6107dde3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 397,
            "endLine": 401
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 431,
            "endLine": 435
          }
        ],
        "sample": "      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: true, cleanupDelay: 5000 });\n      \n      // Mock state as ready\n      mockStateManager.is...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d734fcb1894aff61836caa377a682d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 398,
            "endLine": 402
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 432,
            "endLine": 436
          }
        ],
        "sample": "      engine = new MurmubaraEngine({ autoCleanup: true, cleanupDelay: 5000 });\n      \n      // Mock state as ready\n      mockStateManager.isInState.mockReturnValue(true);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f87d3de57dbb8f2b97b63108d2cdc25f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 402,
            "endLine": 406
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 436,
            "endLine": 440
          }
        ],
        "sample": "      \n      // Emit processing-end event to trigger cleanup timer\n      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).toHaveBeenCalledWith(expect.any(Function), 5000);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9673b0d1327c503f0202db9f88fbb04e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 403,
            "endLine": 407
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 437,
            "endLine": 441
          }
        ],
        "sample": "      // Emit processing-end event to trigger cleanup timer\n      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).toHaveBeenCalledWith(expect.any(Function), 5000);\n      vi.useRealTi...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ef7263318c30c9f55716adb3d9a23eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 404,
            "endLine": 408
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 438,
            "endLine": 442
          }
        ],
        "sample": "      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).toHaveBeenCalledWith(expect.any(Function), 5000);\n      vi.useRealTimers();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96f2b55ccf7fd52df808134c0da13f3b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 405,
            "endLine": 409
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "      \n      expect(setTimeoutSpy).toHaveBeenCalledWith(expect.any(Function), 5000);\n      vi.useRealTimers();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75395b71a25fa2a4363d7a1fb63a17a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 406,
            "endLine": 410
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 440,
            "endLine": 444
          }
        ],
        "sample": "      expect(setTimeoutSpy).toHaveBeenCalledWith(expect.any(Function), 5000);\n      vi.useRealTimers();\n    });\n    \n    it('should not setup auto cleanup when disabled', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a61055b81fd2c5f1bae3b69d6f1ff74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 407,
            "endLine": 411
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 441,
            "endLine": 445
          }
        ],
        "sample": "      vi.useRealTimers();\n    });\n    \n    it('should not setup auto cleanup when disabled', () => {\n      vi.useFakeTimers();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "563dbcb3a776166386858282409130d6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 408,
            "endLine": 412
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 442,
            "endLine": 446
          }
        ],
        "sample": "    });\n    \n    it('should not setup auto cleanup when disabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e47d55ad9eff3e2fa4b39244784e5f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 409,
            "endLine": 413
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 443,
            "endLine": 447
          }
        ],
        "sample": "    \n    it('should not setup auto cleanup when disabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "725ed138b06baccdffdaf5184ca3a53a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 410,
            "endLine": 414
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 444,
            "endLine": 448
          }
        ],
        "sample": "    it('should not setup auto cleanup when disabled', () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: fa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0046e799ab135f2420e72e7b4638378",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 411,
            "endLine": 415
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 445,
            "endLine": 449
          }
        ],
        "sample": "      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: false });\n      \n      // Mock state as ready...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aa3bd7d09eec16a5dce56a17dfca321f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 412,
            "endLine": 416
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 446,
            "endLine": 450
          }
        ],
        "sample": "      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      engine = new MurmubaraEngine({ autoCleanup: false });\n      \n      // Mock state as ready\n      mockStateManager.isInState.mockReturnV...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2dcb2ace04de678ba18c2cc60334d971",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 413,
            "endLine": 417
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 447,
            "endLine": 451
          }
        ],
        "sample": "      engine = new MurmubaraEngine({ autoCleanup: false });\n      \n      // Mock state as ready\n      mockStateManager.isInState.mockReturnValue(true);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c7071207f2f8a6e91b57ae4ce7c95eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 417,
            "endLine": 421
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 451,
            "endLine": 455
          }
        ],
        "sample": "      \n      // Emit processing-end event - should NOT trigger timer\n      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).not.toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c74d331caa4e17922e53cdae47535f53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 418,
            "endLine": 422
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 452,
            "endLine": 456
          }
        ],
        "sample": "      // Emit processing-end event - should NOT trigger timer\n      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).not.toHaveBeenCalled();\n      vi.useRealTimers();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3724903a8c3cb411175b2797065f8f34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 419,
            "endLine": 423
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 453,
            "endLine": 457
          }
        ],
        "sample": "      engine.emit('processing-end');\n      \n      expect(setTimeoutSpy).not.toHaveBeenCalled();\n      vi.useRealTimers();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "042917d908f219a21037ff473d52c288",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 430,
            "endLine": 434
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 438,
            "endLine": 442
          }
        ],
        "sample": "      \n      engine = new MurmubaraEngine();\n      \n      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f239b8bc8e9e8a0d8ab91e96546b649b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 431,
            "endLine": 435
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      \n      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "730e66d66e0b69b42c67c75b3e5477f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 432,
            "endLine": 436
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 477,
            "endLine": 481
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });\n    \n    it('should detect missing WebAssembly', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73c6522a2e0de81b87f738739e0768db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 433,
            "endLine": 437
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 478,
            "endLine": 482
          }
        ],
        "sample": "      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });\n    \n    it('should detect missing WebAssembly', async () => {\n      delete (global...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5a3dd4d8f922d27a5307d619cf67b875",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 434,
            "endLine": 438
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 479,
            "endLine": 483
          }
        ],
        "sample": "    });\n    \n    it('should detect missing WebAssembly', async () => {\n      delete (global.window as any).WebAssembly;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71bf63632f932a4b4f6e0b878ce9042a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 440,
            "endLine": 444
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 483,
            "endLine": 487
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });\n    \n    it('should use webkitAudioContext fallback', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6bd2f94d76eb2179e7e952ee1591f84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 441,
            "endLine": 445
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 484,
            "endLine": 488
          }
        ],
        "sample": "      await expect(engine.initialize()).rejects.toThrow('Environment not supported: Missing required APIs');\n    });\n    \n    it('should use webkitAudioContext fallback', async () => {\n      delete (g...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b56d477f353642934ec4ec02ecebe47b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 442,
            "endLine": 446
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 485,
            "endLine": 489
          }
        ],
        "sample": "    });\n    \n    it('should use webkitAudioContext fallback', async () => {\n      delete (global.window as any).AudioContext;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "722d1d96c150f2cd6dddbeae3c5ce267",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 455,
            "endLine": 459
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 504,
            "endLine": 508
          }
        ],
        "sample": "    beforeEach(() => {\n      engine = new MurmubaraEngine();\n    });\n    \n    it('should initialize successfully', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "835e6be7b9b381f4efa9d5224e650c9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 456,
            "endLine": 460
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 505,
            "endLine": 509
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n    });\n    \n    it('should initialize successfully', async () => {\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b78c6704f039282e07274dcc3538fb6f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 457,
            "endLine": 461
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 506,
            "endLine": 510
          }
        ],
        "sample": "    });\n    \n    it('should initialize successfully', async () => {\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "af22db6d11089969fa0e0ad8af2a5085",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 458,
            "endLine": 462
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 507,
            "endLine": 511
          }
        ],
        "sample": "    \n    it('should initialize successfully', async () => {\n      await engine.initialize();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('initializing');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d668a4c1972c9c678650a6d814625a27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 459,
            "endLine": 463
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 508,
            "endLine": 512
          }
        ],
        "sample": "    it('should initialize successfully', async () => {\n      await engine.initialize();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('initializing');\n      expect(global.win...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "92f3a6f7b37744a2288b912dae6cfef0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 460,
            "endLine": 464
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 509,
            "endLine": 513
          }
        ],
        "sample": "      await engine.initialize();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('initializing');\n      expect(global.window.AudioContext).toHaveBeenCalled();\n      expect(mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7dec6b88632ef989a7a2da55bc743261",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 461,
            "endLine": 465
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 510,
            "endLine": 514
          }
        ],
        "sample": "      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('initializing');\n      expect(global.window.AudioContext).toHaveBeenCalled();\n      expect(mockWasmModule._rnnoise_create).toHav...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee2776b951eb743c649696c3756cf726",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 462,
            "endLine": 466
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 511,
            "endLine": 515
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('initializing');\n      expect(global.window.AudioContext).toHaveBeenCalled();\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9d8bbfd547544c5ab8f477aa12eb9cf7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 463,
            "endLine": 467
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 512,
            "endLine": 516
          }
        ],
        "sample": "      expect(global.window.AudioContext).toHaveBeenCalled();\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCalled();\n      expect(mockWasmModule._malloc).toHaveBeenCalledTimes(2); // input an...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d94e39b2810de9f610aa4a34c6f2c483",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 464,
            "endLine": 468
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 513,
            "endLine": 517
          }
        ],
        "sample": "      expect(mockWasmModule._rnnoise_create).toHaveBeenCalled();\n      expect(mockWasmModule._malloc).toHaveBeenCalledTimes(2); // input and output buffers\n      expect(mockStateManager.transitionTo)....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "77e98c3a83aab8e33f3f2f0b78199804",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 465,
            "endLine": 469
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 514,
            "endLine": 518
          }
        ],
        "sample": "      expect(mockWasmModule._malloc).toHaveBeenCalledTimes(2); // input and output buffers\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('ready');\n      expect(mockMetricsManager.st...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bbb9359d5c5fc4f806763de5ab28b80b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 466,
            "endLine": 470
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 515,
            "endLine": 519
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('ready');\n      expect(mockMetricsManager.startAutoUpdate).toHaveBeenCalled();\n    });\n    \n    it('should handle concurrent initializa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6fcfe2a44d05a8b7d87fd98a460c71a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 467,
            "endLine": 471
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 516,
            "endLine": 520
          }
        ],
        "sample": "      expect(mockMetricsManager.startAutoUpdate).toHaveBeenCalled();\n    });\n    \n    it('should handle concurrent initialization', async () => {\n      const promise1 = engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7825436724211244c24c8213dd84a301",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 468,
            "endLine": 472
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 517,
            "endLine": 521
          }
        ],
        "sample": "    });\n    \n    it('should handle concurrent initialization', async () => {\n      const promise1 = engine.initialize();\n      const promise2 = engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc7ef66e1cae17be336a2ff26f507a61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 469,
            "endLine": 473
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 518,
            "endLine": 522
          }
        ],
        "sample": "    \n    it('should handle concurrent initialization', async () => {\n      const promise1 = engine.initialize();\n      const promise2 = engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8b981b99212c89e3536e8606197903c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 470,
            "endLine": 474
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 519,
            "endLine": 523
          }
        ],
        "sample": "    it('should handle concurrent initialization', async () => {\n      const promise1 = engine.initialize();\n      const promise2 = engine.initialize();\n      \n      await Promise.all([promise1, promis...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6fa1deadd6a04205434cfcc69f0d5676",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 471,
            "endLine": 475
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 520,
            "endLine": 524
          }
        ],
        "sample": "      const promise1 = engine.initialize();\n      const promise2 = engine.initialize();\n      \n      await Promise.all([promise1, promise2]);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65c758505f71048b22c89da13c26bad6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 472,
            "endLine": 476
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 521,
            "endLine": 525
          }
        ],
        "sample": "      const promise2 = engine.initialize();\n      \n      await Promise.all([promise1, promise2]);\n      \n      // Should only initialize once...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "652843b4525f0b6d42821befbb699d46",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 473,
            "endLine": 477
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 522,
            "endLine": 526
          }
        ],
        "sample": "      \n      await Promise.all([promise1, promise2]);\n      \n      // Should only initialize once\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCalledTimes(1);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e1791e9c1c087003eb4734439cfe22c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 474,
            "endLine": 478
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 523,
            "endLine": 527
          }
        ],
        "sample": "      await Promise.all([promise1, promise2]);\n      \n      // Should only initialize once\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCalledTimes(1);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f8ef52b3bc5b16b5c738628cf9b45a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 475,
            "endLine": 479
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 524,
            "endLine": 528
          }
        ],
        "sample": "      \n      // Should only initialize once\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCalledTimes(1);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2954f8ece37ec3180f4230adc0db30e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 476,
            "endLine": 480
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 525,
            "endLine": 529
          }
        ],
        "sample": "      // Should only initialize once\n      expect(mockWasmModule._rnnoise_create).toHaveBeenCalledTimes(1);\n    });\n    \n    it('should handle already initialized error', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4df8ff197f92c3fe733fa7aa3495abb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 477,
            "endLine": 481
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 526,
            "endLine": 530
          }
        ],
        "sample": "      expect(mockWasmModule._rnnoise_create).toHaveBeenCalledTimes(1);\n    });\n    \n    it('should handle already initialized error', async () => {\n      mockStateManager.canTransitionTo.mockReturnVal...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b93a4218544fa0fcaf075d1e1315d77c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 478,
            "endLine": 482
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 527,
            "endLine": 531
          }
        ],
        "sample": "    });\n    \n    it('should handle already initialized error', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      mockStateManager.getState.mockReturnValue('ready');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8cda9db282c7631c96d2351994e593b5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 479,
            "endLine": 483
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 528,
            "endLine": 532
          }
        ],
        "sample": "    \n    it('should handle already initialized error', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      mockStateManager.getState.mockReturnValue('ready');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c9cda933042772c02e1c5c77ae56b0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 480,
            "endLine": 484
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 529,
            "endLine": 533
          }
        ],
        "sample": "    it('should handle already initialized error', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      aw...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fda36b8ecba26e02fa8e7b0b907fb2dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 481,
            "endLine": 485
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 530,
            "endLine": 534
          }
        ],
        "sample": "      mockStateManager.canTransitionTo.mockReturnValue(false);\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      await expect(engine.initialize()).rejects.toThrow('Engine is alrea...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4c13b0cbc2656db26db176f67ffa57d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 482,
            "endLine": 486
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 531,
            "endLine": 535
          }
        ],
        "sample": "      mockStateManager.getState.mockReturnValue('ready');\n      \n      await expect(engine.initialize()).rejects.toThrow('Engine is already initialized or in an invalid state');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "845c89cfa5e6af0021f0a1eb065f948d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 490,
            "endLine": 494
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 539,
            "endLine": 543
          }
        ],
        "sample": "      (loadRNNoiseModule as any).mockRejectedValueOnce(new Error('WASM load failed'));\n      \n      await expect(engine.initialize()).rejects.toThrow('Initialization failed');\n      expect(mockStateMa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3678c94ad7a9546e4712b7263712f48b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 491,
            "endLine": 495
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 540,
            "endLine": 544
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Initialization failed');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9ce62c3647e3d26c5f224c552c521743",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 492,
            "endLine": 496
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 541,
            "endLine": 545
          }
        ],
        "sample": "      await expect(engine.initialize()).rejects.toThrow('Initialization failed');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    \n    it('should handle AudioCon...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "574c6f068e56a1e55cb9b12a0a59f408",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 493,
            "endLine": 497
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 542,
            "endLine": 546
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    \n    it('should handle AudioContext creation failure', async () => {\n      global.AudioContext = vi.fn().mockImpl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e7614a1de817848fd4f23cd78a18d92d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 494,
            "endLine": 498
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 543,
            "endLine": 547
          }
        ],
        "sample": "    });\n    \n    it('should handle AudioContext creation failure', async () => {\n      global.AudioContext = vi.fn().mockImplementation(() => {\n        throw new Error('AudioContext failed');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "baaaa5bab72cde924dfdfba497e2ede3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 495,
            "endLine": 499
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 544,
            "endLine": 548
          }
        ],
        "sample": "    \n    it('should handle AudioContext creation failure', async () => {\n      global.AudioContext = vi.fn().mockImplementation(() => {\n        throw new Error('AudioContext failed');\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c2c9cd448b9842c75cf73dfb610c04c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 496,
            "endLine": 500
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 545,
            "endLine": 549
          }
        ],
        "sample": "    it('should handle AudioContext creation failure', async () => {\n      global.AudioContext = vi.fn().mockImplementation(() => {\n        throw new Error('AudioContext failed');\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c4fd8dfd1cd7888d1daa884030a0837",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 497,
            "endLine": 501
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 546,
            "endLine": 550
          }
        ],
        "sample": "      global.AudioContext = vi.fn().mockImplementation(() => {\n        throw new Error('AudioContext failed');\n      });\n      \n      await expect(engine.initialize()).rejects.toThrow('Failed to creat...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e61b4815e6490919bc65597ab00f060",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 498,
            "endLine": 502
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 547,
            "endLine": 551
          }
        ],
        "sample": "        throw new Error('AudioContext failed');\n      });\n      \n      await expect(engine.initialize()).rejects.toThrow('Failed to create AudioContext');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a394e9b76cf07e9d96fcfc9e0899605",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 499,
            "endLine": 503
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 548,
            "endLine": 552
          }
        ],
        "sample": "      });\n      \n      await expect(engine.initialize()).rejects.toThrow('Failed to create AudioContext');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22c5cb3f28582be66e3e69f7812c276d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 500,
            "endLine": 504
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 549,
            "endLine": 553
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Failed to create AudioContext');\n    });\n    \n    it('should resume suspended audio context', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "45a11f43061ddc13ffd8be7bd52c4d82",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 501,
            "endLine": 505
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 550,
            "endLine": 554
          }
        ],
        "sample": "      await expect(engine.initialize()).rejects.toThrow('Failed to create AudioContext');\n    });\n    \n    it('should resume suspended audio context', async () => {\n      mockAudioContext.state = 'sus...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c4b453033a067d6cfc5b66056a9c202",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 502,
            "endLine": 506
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 551,
            "endLine": 555
          }
        ],
        "sample": "    });\n    \n    it('should resume suspended audio context', async () => {\n      mockAudioContext.state = 'suspended';\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41a1244555e984a09435e8353eda533a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 503,
            "endLine": 507
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 552,
            "endLine": 556
          }
        ],
        "sample": "    \n    it('should resume suspended audio context', async () => {\n      mockAudioContext.state = 'suspended';\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09ecdce48ac78496c17304298cb3d030",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 504,
            "endLine": 508
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 553,
            "endLine": 557
          }
        ],
        "sample": "    it('should resume suspended audio context', async () => {\n      mockAudioContext.state = 'suspended';\n      await engine.initialize();\n      \n      expect(mockAudioContext.resume).toHaveBeenCalled...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d345460f9125c3e6400f8767fc85dcb8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 505,
            "endLine": 509
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 554,
            "endLine": 558
          }
        ],
        "sample": "      mockAudioContext.state = 'suspended';\n      await engine.initialize();\n      \n      expect(mockAudioContext.resume).toHaveBeenCalled();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "91e584aa43026238b9f6b58fe8b01656",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 506,
            "endLine": 510
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 555,
            "endLine": 559
          }
        ],
        "sample": "      await engine.initialize();\n      \n      expect(mockAudioContext.resume).toHaveBeenCalled();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "726a95c0950fe4c2634fa6e0d20d7d31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 507,
            "endLine": 511
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 556,
            "endLine": 560
          }
        ],
        "sample": "      \n      expect(mockAudioContext.resume).toHaveBeenCalled();\n    });\n    \n    it('should handle degraded mode when allowed', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22630574a51f7952e9987c7de5e74214",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 508,
            "endLine": 512
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 557,
            "endLine": 561
          }
        ],
        "sample": "      expect(mockAudioContext.resume).toHaveBeenCalled();\n    });\n    \n    it('should handle degraded mode when allowed', async () => {\n      engine = new MurmubaraEngine({ allowDegraded: true });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8046d33c13cc3681b70a5e01dfb5893e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 509,
            "endLine": 513
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 558,
            "endLine": 562
          }
        ],
        "sample": "    });\n    \n    it('should handle degraded mode when allowed', async () => {\n      engine = new MurmubaraEngine({ allowDegraded: true });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c454b4f0d93fd1cef6046964598cac95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 510,
            "endLine": 514
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 559,
            "endLine": 563
          }
        ],
        "sample": "    \n    it('should handle degraded mode when allowed', async () => {\n      engine = new MurmubaraEngine({ allowDegraded: true });\n      \n      // Make WASM fail...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51ff1e0dea04f463d7f7f5bfa59fa89a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 516,
            "endLine": 520
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 565,
            "endLine": 569
          }
        ],
        "sample": "      (loadRNNoiseModule as any).mockRejectedValueOnce(new Error('WASM failed'));\n      \n      await engine.initialize();\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Attempting degraded...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ddec51037ec509d75429383c9ca2a72f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 517,
            "endLine": 521
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 566,
            "endLine": 570
          }
        ],
        "sample": "      \n      await engine.initialize();\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Attempting degraded mode initialization...');\n      expect(mockStateManager.transitionTo).toHaveBeenC...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e4b6f5c81b2cc35244cbc2245f48125",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 518,
            "endLine": 522
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 567,
            "endLine": 571
          }
        ],
        "sample": "      await engine.initialize();\n      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Attempting degraded mode initialization...');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWi...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "383c5a1239204b14a27a511c64aaa4cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 519,
            "endLine": 523
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 568,
            "endLine": 572
          }
        ],
        "sample": "      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Attempting degraded mode initialization...');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('degraded');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4300cc6ed3ee7292d5ffb3a1d65703f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 520,
            "endLine": 524
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 569,
            "endLine": 573
          }
        ],
        "sample": "      expect(mockLogger.warn).toHaveBeenCalledWith('Attempting degraded mode initialization...');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('degraded');\n    });\n    \n    it('sho...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5d2e7a6dbb9e73a5666c9d4c28db6397",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 521,
            "endLine": 525
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 570,
            "endLine": 574
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('degraded');\n    });\n    \n    it('should warm up WASM module', async () => {\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97c29620b2cc5dbce735ec6a7cd483ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 522,
            "endLine": 526
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 571,
            "endLine": 575
          }
        ],
        "sample": "    });\n    \n    it('should warm up WASM module', async () => {\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "771d2ed6183eba9accb3f2a1874f4ed7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 523,
            "endLine": 527
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 572,
            "endLine": 576
          }
        ],
        "sample": "    \n    it('should warm up WASM module', async () => {\n      await engine.initialize();\n      \n      // Should process frames during warmup...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9313f2668bfd15f74222bf158d807e09",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 524,
            "endLine": 528
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 573,
            "endLine": 577
          }
        ],
        "sample": "    it('should warm up WASM module', async () => {\n      await engine.initialize();\n      \n      // Should process frames during warmup\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ad9cb5aa0603380b675639e349558e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 525,
            "endLine": 529
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 574,
            "endLine": 578
          }
        ],
        "sample": "      await engine.initialize();\n      \n      // Should process frames during warmup\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalledTimes(10);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "121cabafa21e342e38d48c15822d9e82",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 526,
            "endLine": 530
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 575,
            "endLine": 579
          }
        ],
        "sample": "      \n      // Should process frames during warmup\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalledTimes(10);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "167168da8e3d2d8ddaacc8af75ca3c12",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 527,
            "endLine": 531
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 576,
            "endLine": 580
          }
        ],
        "sample": "      // Should process frames during warmup\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalledTimes(10);\n    });\n    \n    it('should handle rnnoise state creation failure', async ()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05ec08d6b9617c0468f7d81fe4cb60ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 528,
            "endLine": 532
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 577,
            "endLine": 581
          }
        ],
        "sample": "      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalledTimes(10);\n    });\n    \n    it('should handle rnnoise state creation failure', async () => {\n      mockWasmModule._rnnoise_create.mo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e644dbedd7f0a3bca4137003a1f9513a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 529,
            "endLine": 533
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 578,
            "endLine": 582
          }
        ],
        "sample": "    });\n    \n    it('should handle rnnoise state creation failure', async () => {\n      mockWasmModule._rnnoise_create.mockReturnValueOnce(0); // Return null/0\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e72ee96dcc6df26ca8cf0e8b5f0dfe52",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 530,
            "endLine": 534
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 579,
            "endLine": 583
          }
        ],
        "sample": "    \n    it('should handle rnnoise state creation failure', async () => {\n      mockWasmModule._rnnoise_create.mockReturnValueOnce(0); // Return null/0\n      \n      await expect(engine.initialize()).r...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9a86bdca5a1cd9d0d357bc7ca439f42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 531,
            "endLine": 535
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 580,
            "endLine": 584
          }
        ],
        "sample": "    it('should handle rnnoise state creation failure', async () => {\n      mockWasmModule._rnnoise_create.mockReturnValueOnce(0); // Return null/0\n      \n      await expect(engine.initialize()).reject...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8426d27262db9186f29fdc736f74fd4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 532,
            "endLine": 536
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 581,
            "endLine": 585
          }
        ],
        "sample": "      mockWasmModule._rnnoise_create.mockReturnValueOnce(0); // Return null/0\n      \n      await expect(engine.initialize()).rejects.toThrow('Failed to create RNNoise state');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c7d3ea8762b7899ba4e0c014696f544",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 533,
            "endLine": 537
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 534,
            "endLine": 538
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Failed to create RNNoise state');\n    });\n    \n    it('should load WASM module via dynamic import', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3207068d0a864f4dcaec484d5d74bd01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 544,
            "endLine": 548
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 545,
            "endLine": 549
          }
        ],
        "sample": "      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('ready');\n    });\n    \n    it('should handle dynamic import failure', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bab452a8cf7c7dd69f1a722b49c57911",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 558,
            "endLine": 562
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 614,
            "endLine": 618
          }
        ],
        "sample": "    let mockStream: MediaStream;\n    \n    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd3fb2b72d0e6facab7a928a0c62f843",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 559,
            "endLine": 563
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 615,
            "endLine": 619
          }
        ],
        "sample": "    \n    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "11e997251061fc9b677d75157cade11f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 560,
            "endLine": 564
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 616,
            "endLine": 620
          }
        ],
        "sample": "    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();\n      \n      mockStream = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "df4bec508b13e58440dbc31d009f0e1a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 561,
            "endLine": 565
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 617,
            "endLine": 621
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      await engine.initialize();\n      \n      mockStream = {\n        id: 'test-stream',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "655bc027564f31c21f4d5acd4b04e26a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 562,
            "endLine": 566
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 618,
            "endLine": 622
          }
        ],
        "sample": "      await engine.initialize();\n      \n      mockStream = {\n        id: 'test-stream',\n        getTracks: vi.fn().mockReturnValue([...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8053ac82b815b5bb9daebf9c615e3622",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 563,
            "endLine": 567
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 619,
            "endLine": 623
          }
        ],
        "sample": "      \n      mockStream = {\n        id: 'test-stream',\n        getTracks: vi.fn().mockReturnValue([\n          { stop: vi.fn(), addEventListener: vi.fn() }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "196277f4e349030f271fae72ecf4113c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 564,
            "endLine": 568
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 620,
            "endLine": 624
          }
        ],
        "sample": "      mockStream = {\n        id: 'test-stream',\n        getTracks: vi.fn().mockReturnValue([\n          { stop: vi.fn(), addEventListener: vi.fn() }\n        ]),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a47d1fdb485cb4993224129605378289",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 565,
            "endLine": 569
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 621,
            "endLine": 625
          }
        ],
        "sample": "        id: 'test-stream',\n        getTracks: vi.fn().mockReturnValue([\n          { stop: vi.fn(), addEventListener: vi.fn() }\n        ]),\n        addEventListener: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "810a7229914eb1cb8c3cd6d3077b2855",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 566,
            "endLine": 570
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 622,
            "endLine": 626
          }
        ],
        "sample": "        getTracks: vi.fn().mockReturnValue([\n          { stop: vi.fn(), addEventListener: vi.fn() }\n        ]),\n        addEventListener: vi.fn(),\n        removeEventListener: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a974cb73caab960da71390a4754f5653",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 567,
            "endLine": 571
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 623,
            "endLine": 627
          }
        ],
        "sample": "          { stop: vi.fn(), addEventListener: vi.fn() }\n        ]),\n        addEventListener: vi.fn(),\n        removeEventListener: vi.fn()\n      } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "965ccf79e1514bdc334dd533a569ff96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 568,
            "endLine": 572
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 624,
            "endLine": 628
          }
        ],
        "sample": "        ]),\n        addEventListener: vi.fn(),\n        removeEventListener: vi.fn()\n      } as any;\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "662507e5e51fc3acbd66a67078c8599e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 569,
            "endLine": 573
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 625,
            "endLine": 629
          }
        ],
        "sample": "        addEventListener: vi.fn(),\n        removeEventListener: vi.fn()\n      } as any;\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "335803de9cc25d95b30448c1cffa1d96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 570,
            "endLine": 574
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 626,
            "endLine": 630
          }
        ],
        "sample": "        removeEventListener: vi.fn()\n      } as any;\n    });\n    \n    it('should process stream successfully', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cdc52380cffc5aa57aade20471deb0b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 571,
            "endLine": 575
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 627,
            "endLine": 631
          }
        ],
        "sample": "      } as any;\n    });\n    \n    it('should process stream successfully', async () => {\n      mockStateManager.getState.mockReturnValue('ready');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "586a3073bad05a856e5baef59e5acea0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 572,
            "endLine": 576
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 628,
            "endLine": 632
          }
        ],
        "sample": "    });\n    \n    it('should process stream successfully', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff031a66a6e48c5c2aa26ef7466ba57c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 573,
            "endLine": 577
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 629,
            "endLine": 633
          }
        ],
        "sample": "    \n    it('should process stream successfully', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      const controller = await engine.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6136c6016daacff312ee9201c9aa4d7a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 574,
            "endLine": 578
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 630,
            "endLine": 634
          }
        ],
        "sample": "    it('should process stream successfully', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      const controller = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0064a19a8b535f988bc2d3617d92c984",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 575,
            "endLine": 579
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 631,
            "endLine": 635
          }
        ],
        "sample": "      mockStateManager.getState.mockReturnValue('ready');\n      \n      const controller = await engine.processStream(mockStream);\n      \n      expect(mockAudioContext.createMediaStreamSource).toHaveBe...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a4b0a4ae9d30e36273f99be51b981a25",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 576,
            "endLine": 580
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 632,
            "endLine": 636
          }
        ],
        "sample": "      \n      const controller = await engine.processStream(mockStream);\n      \n      expect(mockAudioContext.createMediaStreamSource).toHaveBeenCalledWith(mockStream);\n      expect(mockAudioContext.cr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81d26cec5193ec5de8df8b97ed6b2fe6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 577,
            "endLine": 581
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 633,
            "endLine": 637
          }
        ],
        "sample": "      const controller = await engine.processStream(mockStream);\n      \n      expect(mockAudioContext.createMediaStreamSource).toHaveBeenCalledWith(mockStream);\n      expect(mockAudioContext.createScr...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "675d9327a85659974d8b001b02d0ba69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 578,
            "endLine": 582
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 634,
            "endLine": 638
          }
        ],
        "sample": "      \n      expect(mockAudioContext.createMediaStreamSource).toHaveBeenCalledWith(mockStream);\n      expect(mockAudioContext.createScriptProcessor).toHaveBeenCalledWith(4096, 1, 1);\n      expect(mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b5ea1baf446dccb644b7a66a7c478f05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 579,
            "endLine": 583
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 635,
            "endLine": 639
          }
        ],
        "sample": "      expect(mockAudioContext.createMediaStreamSource).toHaveBeenCalledWith(mockStream);\n      expect(mockAudioContext.createScriptProcessor).toHaveBeenCalledWith(4096, 1, 1);\n      expect(mockAudioCo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68560cdcec2486dec01052f06ea2b922",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 580,
            "endLine": 584
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 636,
            "endLine": 640
          }
        ],
        "sample": "      expect(mockAudioContext.createScriptProcessor).toHaveBeenCalledWith(4096, 1, 1);\n      expect(mockAudioContext.createMediaStreamDestination).toHaveBeenCalled();\n      expect(mockScriptProcessor....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa9d587e729e33f9e684911efc60260c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 581,
            "endLine": 585
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 637,
            "endLine": 641
          }
        ],
        "sample": "      expect(mockAudioContext.createMediaStreamDestination).toHaveBeenCalled();\n      expect(mockScriptProcessor.connect).toHaveBeenCalled();\n      expect(controller).toHaveProperty('stop');\n      exp...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea98781e8502e78465bfd8216ecada19",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 582,
            "endLine": 586
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 638,
            "endLine": 642
          }
        ],
        "sample": "      expect(mockScriptProcessor.connect).toHaveBeenCalled();\n      expect(controller).toHaveProperty('stop');\n      expect(controller).toHaveProperty('pause');\n      expect(controller).toHaveProperty...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "04b8d3b5c2329b26094d80b38b19664e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 583,
            "endLine": 587
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 639,
            "endLine": 643
          }
        ],
        "sample": "      expect(controller).toHaveProperty('stop');\n      expect(controller).toHaveProperty('pause');\n      expect(controller).toHaveProperty('resume');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d1d632ebbbb0a3db60e169d74a9f808f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 584,
            "endLine": 588
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 640,
            "endLine": 644
          }
        ],
        "sample": "      expect(controller).toHaveProperty('pause');\n      expect(controller).toHaveProperty('resume');\n    });\n    \n    it('should handle invalid state', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c68d5abfba67b3bb86536b1042787da2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 585,
            "endLine": 589
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 641,
            "endLine": 645
          }
        ],
        "sample": "      expect(controller).toHaveProperty('resume');\n    });\n    \n    it('should handle invalid state', async () => {\n      mockStateManager.requireState.mockImplementation(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a643576ad6d756f4b6f22c053c9490e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 586,
            "endLine": 590
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 642,
            "endLine": 646
          }
        ],
        "sample": "    });\n    \n    it('should handle invalid state', async () => {\n      mockStateManager.requireState.mockImplementation(() => {\n        throw new Error('Invalid state: uninitialized. Required states: ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "54f809eebc96eb40d41d971718f706b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 587,
            "endLine": 591
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 643,
            "endLine": 647
          }
        ],
        "sample": "    \n    it('should handle invalid state', async () => {\n      mockStateManager.requireState.mockImplementation(() => {\n        throw new Error('Invalid state: uninitialized. Required states: ready, p...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e2ebf28b74610eec6741eeb72fd5b37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 588,
            "endLine": 592
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 644,
            "endLine": 648
          }
        ],
        "sample": "    it('should handle invalid state', async () => {\n      mockStateManager.requireState.mockImplementation(() => {\n        throw new Error('Invalid state: uninitialized. Required states: ready, proces...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70a588e99dd3f81a52e972e8f68c915a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 589,
            "endLine": 593
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 645,
            "endLine": 649
          }
        ],
        "sample": "      mockStateManager.requireState.mockImplementation(() => {\n        throw new Error('Invalid state: uninitialized. Required states: ready, processing');\n      });\n      \n      await expect(engine.p...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dae9c7010a2435578d9ca7e0bde6e3b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 590,
            "endLine": 594
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 646,
            "endLine": 650
          }
        ],
        "sample": "        throw new Error('Invalid state: uninitialized. Required states: ready, processing');\n      });\n      \n      await expect(engine.processStream(mockStream)).rejects.toThrow(\n        'Invalid sta...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "784dca3cfddee860ee7e5fc5fc03a3f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 591,
            "endLine": 595
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 647,
            "endLine": 651
          }
        ],
        "sample": "      });\n      \n      await expect(engine.processStream(mockStream)).rejects.toThrow(\n        'Invalid state'\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7c2a046ea3f09cca0eb4417870606858",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 592,
            "endLine": 596
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 648,
            "endLine": 652
          }
        ],
        "sample": "      \n      await expect(engine.processStream(mockStream)).rejects.toThrow(\n        'Invalid state'\n      );\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b64985533c78b1f9fcb291ec864a6e9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 593,
            "endLine": 597
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 649,
            "endLine": 653
          }
        ],
        "sample": "      await expect(engine.processStream(mockStream)).rejects.toThrow(\n        'Invalid state'\n      );\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "59f9501e7d290ba5da2609d2e32595f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 596,
            "endLine": 600
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 672,
            "endLine": 676
          }
        ],
        "sample": "    });\n    \n    it('should apply filters in chain', async () => {\n      await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6b7dff51328d8cfb1620e1015718c233",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 597,
            "endLine": 601
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 673,
            "endLine": 677
          }
        ],
        "sample": "    \n    it('should apply filters in chain', async () => {\n      await engine.processStream(mockStream);\n      \n      // Should create 4 filters...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7247ece3060efd72e39ee387a893462",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 598,
            "endLine": 602
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 674,
            "endLine": 678
          }
        ],
        "sample": "    it('should apply filters in chain', async () => {\n      await engine.processStream(mockStream);\n      \n      // Should create 4 filters\n      expect(mockAudioContext.createBiquadFilter).toHaveBeen...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c1d9d521ae50f904a0f08b0efd1359c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 599,
            "endLine": 603
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 675,
            "endLine": 679
          }
        ],
        "sample": "      await engine.processStream(mockStream);\n      \n      // Should create 4 filters\n      expect(mockAudioContext.createBiquadFilter).toHaveBeenCalledTimes(4);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7215d670488c8df9551cbc4712531cb4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 600,
            "endLine": 604
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 676,
            "endLine": 680
          }
        ],
        "sample": "      \n      // Should create 4 filters\n      expect(mockAudioContext.createBiquadFilter).toHaveBeenCalledTimes(4);\n      \n      // Check filter configurations...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f62cae8caf8996da658f89f418b17a3a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 601,
            "endLine": 605
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 677,
            "endLine": 681
          }
        ],
        "sample": "      // Should create 4 filters\n      expect(mockAudioContext.createBiquadFilter).toHaveBeenCalledTimes(4);\n      \n      // Check filter configurations\n      expect(mockNotchFilter1.type).toBe('notch...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0f25ea3766ba2ed416a47be642cd2ea2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 602,
            "endLine": 606
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 678,
            "endLine": 682
          }
        ],
        "sample": "      expect(mockAudioContext.createBiquadFilter).toHaveBeenCalledTimes(4);\n      \n      // Check filter configurations\n      expect(mockNotchFilter1.type).toBe('notch');\n      expect(mockNotchFilter1...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5fbea94ec32dbb21a59d65221e9c4a80",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 603,
            "endLine": 607
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 679,
            "endLine": 683
          }
        ],
        "sample": "      \n      // Check filter configurations\n      expect(mockNotchFilter1.type).toBe('notch');\n      expect(mockNotchFilter1.frequency.value).toBe(1000);\n      expect(mockNotchFilter1.Q.value).toBe(30...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9c89650d22ddf267c387ff1c41d11d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 604,
            "endLine": 608
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 680,
            "endLine": 684
          }
        ],
        "sample": "      // Check filter configurations\n      expect(mockNotchFilter1.type).toBe('notch');\n      expect(mockNotchFilter1.frequency.value).toBe(1000);\n      expect(mockNotchFilter1.Q.value).toBe(30);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3c6c3f4e657a6f11d6b1bfbbee3f9e93",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 605,
            "endLine": 609
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 681,
            "endLine": 685
          }
        ],
        "sample": "      expect(mockNotchFilter1.type).toBe('notch');\n      expect(mockNotchFilter1.frequency.value).toBe(1000);\n      expect(mockNotchFilter1.Q.value).toBe(30);\n      \n      expect(mockNotchFilter2.type...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd0c43d4ca492acd6b91c702ac79bbce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 606,
            "endLine": 610
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 682,
            "endLine": 686
          }
        ],
        "sample": "      expect(mockNotchFilter1.frequency.value).toBe(1000);\n      expect(mockNotchFilter1.Q.value).toBe(30);\n      \n      expect(mockNotchFilter2.type).toBe('notch');\n      expect(mockNotchFilter2.freq...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "49f2e2c43c5abda8bb1dcdd98d60efc3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 607,
            "endLine": 611
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 683,
            "endLine": 687
          }
        ],
        "sample": "      expect(mockNotchFilter1.Q.value).toBe(30);\n      \n      expect(mockNotchFilter2.type).toBe('notch');\n      expect(mockNotchFilter2.frequency.value).toBe(2000);\n      expect(mockNotchFilter2.Q.va...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "06b0865e004e2a148649e283ad9e4660",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 608,
            "endLine": 612
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 684,
            "endLine": 688
          }
        ],
        "sample": "      \n      expect(mockNotchFilter2.type).toBe('notch');\n      expect(mockNotchFilter2.frequency.value).toBe(2000);\n      expect(mockNotchFilter2.Q.value).toBe(30);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ee10dee97fc481797328f5261816db9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 609,
            "endLine": 613
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 685,
            "endLine": 689
          }
        ],
        "sample": "      expect(mockNotchFilter2.type).toBe('notch');\n      expect(mockNotchFilter2.frequency.value).toBe(2000);\n      expect(mockNotchFilter2.Q.value).toBe(30);\n      \n      expect(mockHighPassFilter.ty...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "393ee7674e9c96c2f33a6b0112e5e79a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 610,
            "endLine": 614
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 686,
            "endLine": 690
          }
        ],
        "sample": "      expect(mockNotchFilter2.frequency.value).toBe(2000);\n      expect(mockNotchFilter2.Q.value).toBe(30);\n      \n      expect(mockHighPassFilter.type).toBe('highpass');\n      expect(mockHighPassFilt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b1d01d63eb89226a9747bc2ecf321793",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 611,
            "endLine": 615
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 687,
            "endLine": 691
          }
        ],
        "sample": "      expect(mockNotchFilter2.Q.value).toBe(30);\n      \n      expect(mockHighPassFilter.type).toBe('highpass');\n      expect(mockHighPassFilter.frequency.value).toBe(80);\n      expect(mockHighPassFilt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6733928808438a9c380cfdbe85541003",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 612,
            "endLine": 616
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 688,
            "endLine": 692
          }
        ],
        "sample": "      \n      expect(mockHighPassFilter.type).toBe('highpass');\n      expect(mockHighPassFilter.frequency.value).toBe(80);\n      expect(mockHighPassFilter.Q.value).toBe(0.7);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0926813b0ee51c7ba91aafba9d56104",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 613,
            "endLine": 617
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 689,
            "endLine": 693
          }
        ],
        "sample": "      expect(mockHighPassFilter.type).toBe('highpass');\n      expect(mockHighPassFilter.frequency.value).toBe(80);\n      expect(mockHighPassFilter.Q.value).toBe(0.7);\n      \n      expect(mockLowShelfF...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28adcdca7ea6392fb67939d121f78128",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 614,
            "endLine": 618
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 690,
            "endLine": 694
          }
        ],
        "sample": "      expect(mockHighPassFilter.frequency.value).toBe(80);\n      expect(mockHighPassFilter.Q.value).toBe(0.7);\n      \n      expect(mockLowShelfFilter.type).toBe('lowshelf');\n      expect(mockLowShelfF...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0f7e9572104e98b1665d0d31b696f40",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 615,
            "endLine": 619
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 691,
            "endLine": 695
          }
        ],
        "sample": "      expect(mockHighPassFilter.Q.value).toBe(0.7);\n      \n      expect(mockLowShelfFilter.type).toBe('lowshelf');\n      expect(mockLowShelfFilter.frequency.value).toBe(200);\n      expect(mockLowShelf...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7bd69c1f1d9a71a4d51140298bef42fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 618,
            "endLine": 622
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 694,
            "endLine": 698
          }
        ],
        "sample": "      expect(mockLowShelfFilter.frequency.value).toBe(200);\n      expect(mockLowShelfFilter.gain.value).toBe(-3);\n      \n      // Check connections\n      expect(mockMediaStreamSource.connect).toHaveBe...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "49a46f069761afba22dd876494988595",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 619,
            "endLine": 623
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 695,
            "endLine": 699
          }
        ],
        "sample": "      expect(mockLowShelfFilter.gain.value).toBe(-3);\n      \n      // Check connections\n      expect(mockMediaStreamSource.connect).toHaveBeenCalledWith(mockHighPassFilter);\n      expect(mockHighPassF...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e935af4342cdef52c6b15e2a2fdce028",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 620,
            "endLine": 624
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 696,
            "endLine": 700
          }
        ],
        "sample": "      \n      // Check connections\n      expect(mockMediaStreamSource.connect).toHaveBeenCalledWith(mockHighPassFilter);\n      expect(mockHighPassFilter.connect).toHaveBeenCalledWith(mockNotchFilter1);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fdf76dd6999221b4456a2c2bbdebe8da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 621,
            "endLine": 625
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 697,
            "endLine": 701
          }
        ],
        "sample": "      // Check connections\n      expect(mockMediaStreamSource.connect).toHaveBeenCalledWith(mockHighPassFilter);\n      expect(mockHighPassFilter.connect).toHaveBeenCalledWith(mockNotchFilter1);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cf05ad3e05dd1907070b1931452cea61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 627,
            "endLine": 631
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 702,
            "endLine": 706
          }
        ],
        "sample": "      expect(mockLowShelfFilter.connect).toHaveBeenCalled();\n      expect(mockScriptProcessor.connect).toHaveBeenCalledWith(mockMediaStreamDestination);\n    });\n    \n    it('should process audio frame...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "44903badf0bd383f23829fea37afb6b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 628,
            "endLine": 632
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 703,
            "endLine": 707
          }
        ],
        "sample": "      expect(mockScriptProcessor.connect).toHaveBeenCalledWith(mockMediaStreamDestination);\n    });\n    \n    it('should process audio frames', async () => {\n      await engine.processStream(mockStream...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2c727ed9a18e6573243b030e511c718",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 629,
            "endLine": 633
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 704,
            "endLine": 708
          }
        ],
        "sample": "    });\n    \n    it('should process audio frames', async () => {\n      await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd9b03935fe151ce416f13588b3d966e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 630,
            "endLine": 634
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 705,
            "endLine": 709
          }
        ],
        "sample": "    \n    it('should process audio frames', async () => {\n      await engine.processStream(mockStream);\n      \n      // Create test audio data...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cabb3afb48466d860ff0eb54eadab9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 631,
            "endLine": 635
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 706,
            "endLine": 710
          }
        ],
        "sample": "    it('should process audio frames', async () => {\n      await engine.processStream(mockStream);\n      \n      // Create test audio data\n      const inputBuffer = new Float32Array(4096);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab0e35ab2ce748f7b833ed85d8af2d54",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 632,
            "endLine": 636
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 707,
            "endLine": 711
          }
        ],
        "sample": "      await engine.processStream(mockStream);\n      \n      // Create test audio data\n      const inputBuffer = new Float32Array(4096);\n      for (let i = 0; i < 4096; i++) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "399b8894d9625503f2db1f0174c9ce20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 633,
            "endLine": 637
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 708,
            "endLine": 712
          }
        ],
        "sample": "      \n      // Create test audio data\n      const inputBuffer = new Float32Array(4096);\n      for (let i = 0; i < 4096; i++) {\n        inputBuffer[i] = Math.sin(i * 0.01) * 0.5;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fb719d0839dfa4671fae21c0f158cc3c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 644,
            "endLine": 648
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 719,
            "endLine": 723
          }
        ],
        "sample": "        outputBuffer: { getChannelData: () => outputBuffer }\n      };\n      \n      // Process audio\n      mockScriptProcessor.onaudioprocess?.(mockEvent as any);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f76e403f2cef2bdca636a6ddca4ad5d6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 645,
            "endLine": 649
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 720,
            "endLine": 724
          }
        ],
        "sample": "      };\n      \n      // Process audio\n      mockScriptProcessor.onaudioprocess?.(mockEvent as any);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6daeac14eb3a4f02ea39bbfe2e4f16c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 646,
            "endLine": 650
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 721,
            "endLine": 725
          }
        ],
        "sample": "      \n      // Process audio\n      mockScriptProcessor.onaudioprocess?.(mockEvent as any);\n      \n      // Should have called WASM processing...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4da49d230368f9193fa748285f546553",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 647,
            "endLine": 651
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 722,
            "endLine": 726
          }
        ],
        "sample": "      // Process audio\n      mockScriptProcessor.onaudioprocess?.(mockEvent as any);\n      \n      // Should have called WASM processing\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "16084bc4c7ee3d03026e85d4017fdb1a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 648,
            "endLine": 652
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 723,
            "endLine": 727
          }
        ],
        "sample": "      mockScriptProcessor.onaudioprocess?.(mockEvent as any);\n      \n      // Should have called WASM processing\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalled();\n      expect(mo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81b792ae40564bbbd705f2c83bfa480d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 649,
            "endLine": 653
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 724,
            "endLine": 728
          }
        ],
        "sample": "      \n      // Should have called WASM processing\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalled();\n      expect(mockMetricsManager.recordFrame).toHaveBeenCalled();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e535cd88000a467d999377a69cae146d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 650,
            "endLine": 654
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 725,
            "endLine": 729
          }
        ],
        "sample": "      // Should have called WASM processing\n      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalled();\n      expect(mockMetricsManager.recordFrame).toHaveBeenCalled();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "457ce033c61185d66bc7f676b6899d00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 651,
            "endLine": 655
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 726,
            "endLine": 730
          }
        ],
        "sample": "      expect(mockWasmModule._rnnoise_process_frame).toHaveBeenCalled();\n      expect(mockMetricsManager.recordFrame).toHaveBeenCalled();\n    });\n    \n    it('should handle chunk processing', async () ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "02f550b52915e69f683bea44f9aa7e79",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 652,
            "endLine": 656
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 727,
            "endLine": 731
          }
        ],
        "sample": "      expect(mockMetricsManager.recordFrame).toHaveBeenCalled();\n    });\n    \n    it('should handle chunk processing', async () => {\n      const onChunkProcessed = vi.fn();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4cf519356a2d6cb42837ef8e2829ab4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 653,
            "endLine": 657
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 728,
            "endLine": 732
          }
        ],
        "sample": "    });\n    \n    it('should handle chunk processing', async () => {\n      const onChunkProcessed = vi.fn();\n      const controller = await engine.processStream(mockStream, {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "111370882437d66d1f3b947b441eb6a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 654,
            "endLine": 658
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 729,
            "endLine": 733
          }
        ],
        "sample": "    \n    it('should handle chunk processing', async () => {\n      const onChunkProcessed = vi.fn();\n      const controller = await engine.processStream(mockStream, {\n        chunkDuration: 1000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52d23c76c03dde27f1c00ded056d7734",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 655,
            "endLine": 659
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 730,
            "endLine": 734
          }
        ],
        "sample": "    it('should handle chunk processing', async () => {\n      const onChunkProcessed = vi.fn();\n      const controller = await engine.processStream(mockStream, {\n        chunkDuration: 1000,\n        on...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d9e34353b8a21d13e13d2af1ffe468c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 656,
            "endLine": 660
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 731,
            "endLine": 735
          }
        ],
        "sample": "      const onChunkProcessed = vi.fn();\n      const controller = await engine.processStream(mockStream, {\n        chunkDuration: 1000,\n        onChunkProcessed\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7307b189cccbfb081b7fe9631a47c877",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 657,
            "endLine": 661
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 732,
            "endLine": 736
          }
        ],
        "sample": "      const controller = await engine.processStream(mockStream, {\n        chunkDuration: 1000,\n        onChunkProcessed\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c45cb1cbd38d1aa5038ea401cdc635af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 658,
            "endLine": 662
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 733,
            "endLine": 737
          }
        ],
        "sample": "        chunkDuration: 1000,\n        onChunkProcessed\n      });\n      \n      expect(controller).toBeDefined();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "31e44db3ce4badee72c7609d659b91e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 659,
            "endLine": 663
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 734,
            "endLine": 738
          }
        ],
        "sample": "        onChunkProcessed\n      });\n      \n      expect(controller).toBeDefined();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a25394e66f20292dcaacb07df0c8f0d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 661,
            "endLine": 665
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 736,
            "endLine": 740
          }
        ],
        "sample": "      \n      expect(controller).toBeDefined();\n      \n      // ChunkProcessor should be created\n      expect(ChunkProcessor).toHaveBeenCalledWith(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "67a921c68e6131ed103b0a854961c4ba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 662,
            "endLine": 666
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 737,
            "endLine": 741
          }
        ],
        "sample": "      expect(controller).toBeDefined();\n      \n      // ChunkProcessor should be created\n      expect(ChunkProcessor).toHaveBeenCalledWith(\n        48000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09d23f130fa2acca2d9f8d7659450f7a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 663,
            "endLine": 667
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 738,
            "endLine": 742
          }
        ],
        "sample": "      \n      // ChunkProcessor should be created\n      expect(ChunkProcessor).toHaveBeenCalledWith(\n        48000,\n        expect.objectContaining({ chunkDuration: 1000 }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "915dadf6a158929daa313276a469b9a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 664,
            "endLine": 668
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 739,
            "endLine": 743
          }
        ],
        "sample": "      // ChunkProcessor should be created\n      expect(ChunkProcessor).toHaveBeenCalledWith(\n        48000,\n        expect.objectContaining({ chunkDuration: 1000 }),\n        mockLogger,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e8d40aeb3344c3ee4c1dd771f006adc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 665,
            "endLine": 669
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 740,
            "endLine": 744
          }
        ],
        "sample": "      expect(ChunkProcessor).toHaveBeenCalledWith(\n        48000,\n        expect.objectContaining({ chunkDuration: 1000 }),\n        mockLogger,\n        mockMetricsManager...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c78bce5c634301e2cc9f21fb2a064d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 666,
            "endLine": 670
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 741,
            "endLine": 745
          }
        ],
        "sample": "        48000,\n        expect.objectContaining({ chunkDuration: 1000 }),\n        mockLogger,\n        mockMetricsManager\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4dbf225f5f3577a7e0c9b544e996b6ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 667,
            "endLine": 671
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 742,
            "endLine": 746
          }
        ],
        "sample": "        expect.objectContaining({ chunkDuration: 1000 }),\n        mockLogger,\n        mockMetricsManager\n      );\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7fd57ca15350b41c5f05563d97847ffb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 669,
            "endLine": 673
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 744,
            "endLine": 748
          }
        ],
        "sample": "        mockMetricsManager\n      );\n    });\n    \n    it('should track active streams', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "664730bed9e0561bb4f9915282b5a02c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 670,
            "endLine": 674
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 745,
            "endLine": 749
          }
        ],
        "sample": "      );\n    });\n    \n    it('should track active streams', async () => {\n      const controller1 = await engine.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c723aee216320c46f0fa65f406c1b47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 671,
            "endLine": 675
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 746,
            "endLine": 750
          }
        ],
        "sample": "    });\n    \n    it('should track active streams', async () => {\n      const controller1 = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c1905c3432e983de20f93456e26ad5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 672,
            "endLine": 676
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 747,
            "endLine": 751
          }
        ],
        "sample": "    \n    it('should track active streams', async () => {\n      const controller1 = await engine.processStream(mockStream);\n      \n      const mockStream2 = { ...mockStream, id: 'stream-2' };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "818b64952029271d8d0abae45a9e7fd6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 673,
            "endLine": 677
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 748,
            "endLine": 752
          }
        ],
        "sample": "    it('should track active streams', async () => {\n      const controller1 = await engine.processStream(mockStream);\n      \n      const mockStream2 = { ...mockStream, id: 'stream-2' };\n      const co...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e213a2aa61998581a745e2117bc26e87",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 674,
            "endLine": 678
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 749,
            "endLine": 753
          }
        ],
        "sample": "      const controller1 = await engine.processStream(mockStream);\n      \n      const mockStream2 = { ...mockStream, id: 'stream-2' };\n      const controller2 = await engine.processStream(mockStream2);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dbd03e1e5129c255b8d1c040b789f4fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 675,
            "endLine": 679
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 750,
            "endLine": 754
          }
        ],
        "sample": "      \n      const mockStream2 = { ...mockStream, id: 'stream-2' };\n      const controller2 = await engine.processStream(mockStream2);\n      \n      const diagnostics = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8ce6b2d5ac266e04c49d43b5c4eaeebb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 676,
            "endLine": 680
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 751,
            "endLine": 755
          }
        ],
        "sample": "      const mockStream2 = { ...mockStream, id: 'stream-2' };\n      const controller2 = await engine.processStream(mockStream2);\n      \n      const diagnostics = engine.getDiagnostics();\n      expect(d...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7e591ecdda10971b32e43c0a98be295d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 677,
            "endLine": 681
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 752,
            "endLine": 756
          }
        ],
        "sample": "      const controller2 = await engine.processStream(mockStream2);\n      \n      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.activeProcessors).toBe(2);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d1698a2dbc17e04c16a9cbbfcb0eb190",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 678,
            "endLine": 682
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 753,
            "endLine": 757
          }
        ],
        "sample": "      \n      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.activeProcessors).toBe(2);\n      \n      await controller1.stop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a85a691b7edfb1ff46f71c2747b6670d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 679,
            "endLine": 683
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 754,
            "endLine": 758
          }
        ],
        "sample": "      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.activeProcessors).toBe(2);\n      \n      await controller1.stop();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9469b0ca1778b687fe5ff74ed147f4f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 680,
            "endLine": 684
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 755,
            "endLine": 759
          }
        ],
        "sample": "      expect(diagnostics.activeProcessors).toBe(2);\n      \n      await controller1.stop();\n      \n      const diagnostics2 = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1457f8da1165d8337b9bd0f8aad68f34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 681,
            "endLine": 685
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 756,
            "endLine": 760
          }
        ],
        "sample": "      \n      await controller1.stop();\n      \n      const diagnostics2 = engine.getDiagnostics();\n      expect(diagnostics2.activeProcessors).toBe(1);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c91d52011ba2ffa20a6b642d15f2576",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 682,
            "endLine": 686
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 757,
            "endLine": 761
          }
        ],
        "sample": "      await controller1.stop();\n      \n      const diagnostics2 = engine.getDiagnostics();\n      expect(diagnostics2.activeProcessors).toBe(1);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6bf9b65856988464dd35449b438ecc9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 683,
            "endLine": 687
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 758,
            "endLine": 762
          }
        ],
        "sample": "      \n      const diagnostics2 = engine.getDiagnostics();\n      expect(diagnostics2.activeProcessors).toBe(1);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b08cfd247f68fc1e0a0bd8809714c499",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 684,
            "endLine": 688
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 759,
            "endLine": 763
          }
        ],
        "sample": "      const diagnostics2 = engine.getDiagnostics();\n      expect(diagnostics2.activeProcessors).toBe(1);\n    });\n    \n    it('should handle stream stop', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70fe34165ca49c48a24a374b8a581490",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 685,
            "endLine": 689
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 760,
            "endLine": 764
          }
        ],
        "sample": "      expect(diagnostics2.activeProcessors).toBe(1);\n    });\n    \n    it('should handle stream stop', async () => {\n      const controller = await engine.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eec5feb8b839a47a0a13366e226f21dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 686,
            "endLine": 690
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 761,
            "endLine": 765
          }
        ],
        "sample": "    });\n    \n    it('should handle stream stop', async () => {\n      const controller = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09ac1c135a54894cd0c11a38e32f8d36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 687,
            "endLine": 691
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 762,
            "endLine": 766
          }
        ],
        "sample": "    \n    it('should handle stream stop', async () => {\n      const controller = await engine.processStream(mockStream);\n      \n      controller.stop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fba48cd9937433eaee6c1bdc6eabd8ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 688,
            "endLine": 692
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 763,
            "endLine": 767
          }
        ],
        "sample": "    it('should handle stream stop', async () => {\n      const controller = await engine.processStream(mockStream);\n      \n      controller.stop();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3846500a589d8b925e942783f10fcc3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 689,
            "endLine": 693
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 764,
            "endLine": 768
          }
        ],
        "sample": "      const controller = await engine.processStream(mockStream);\n      \n      controller.stop();\n      \n      expect(mockScriptProcessor.disconnect).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7f235631ea415cbfbd7dce611e68a5c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 690,
            "endLine": 694
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 765,
            "endLine": 769
          }
        ],
        "sample": "      \n      controller.stop();\n      \n      expect(mockScriptProcessor.disconnect).toHaveBeenCalled();\n      expect(mockMediaStreamSource.disconnect).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b0311c1b3a22fdb2f6574ddf058c008",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 691,
            "endLine": 695
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 766,
            "endLine": 770
          }
        ],
        "sample": "      controller.stop();\n      \n      expect(mockScriptProcessor.disconnect).toHaveBeenCalled();\n      expect(mockMediaStreamSource.disconnect).toHaveBeenCalled();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f091a8d3509876d379574475fa3ff0d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 692,
            "endLine": 696
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 767,
            "endLine": 771
          }
        ],
        "sample": "      \n      expect(mockScriptProcessor.disconnect).toHaveBeenCalled();\n      expect(mockMediaStreamSource.disconnect).toHaveBeenCalled();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ffe548fe04412a6484c36214636888f6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 693,
            "endLine": 697
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 768,
            "endLine": 772
          }
        ],
        "sample": "      expect(mockScriptProcessor.disconnect).toHaveBeenCalled();\n      expect(mockMediaStreamSource.disconnect).toHaveBeenCalled();\n    });\n    \n    it('should handle pause/resume', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1460afa37950f884785ab97d6802a3bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 694,
            "endLine": 698
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 769,
            "endLine": 773
          }
        ],
        "sample": "      expect(mockMediaStreamSource.disconnect).toHaveBeenCalled();\n    });\n    \n    it('should handle pause/resume', async () => {\n      const controller = await engine.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6e2e2b08a4d99bee5ac5819010fc2bf4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 695,
            "endLine": 699
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 770,
            "endLine": 774
          }
        ],
        "sample": "    });\n    \n    it('should handle pause/resume', async () => {\n      const controller = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "94002502c3a65d0228c93c421152df83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 696,
            "endLine": 700
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 771,
            "endLine": 775
          }
        ],
        "sample": "    \n    it('should handle pause/resume', async () => {\n      const controller = await engine.processStream(mockStream);\n      \n      controller.pause();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "48110c825d7749d1ec7e202e9abf4a80",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 697,
            "endLine": 701
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 772,
            "endLine": 776
          }
        ],
        "sample": "    it('should handle pause/resume', async () => {\n      const controller = await engine.processStream(mockStream);\n      \n      controller.pause();\n      expect(controller.getState()).toBe('paused');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "367adb17ddca5cd18000c2fe7eeba090",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 698,
            "endLine": 702
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 773,
            "endLine": 777
          }
        ],
        "sample": "      const controller = await engine.processStream(mockStream);\n      \n      controller.pause();\n      expect(controller.getState()).toBe('paused');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e5691d2524c4e9d254944fa5d73ca13f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 699,
            "endLine": 703
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 774,
            "endLine": 778
          }
        ],
        "sample": "      \n      controller.pause();\n      expect(controller.getState()).toBe('paused');\n      \n      controller.resume();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68e06fce6b31743508d08db35d2bf2a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 700,
            "endLine": 704
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 775,
            "endLine": 779
          }
        ],
        "sample": "      controller.pause();\n      expect(controller.getState()).toBe('paused');\n      \n      controller.resume();\n      expect(controller.getState()).toBe('processing');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a797221c7e2922d1de94ca9c5d5bb623",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 701,
            "endLine": 705
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 776,
            "endLine": 780
          }
        ],
        "sample": "      expect(controller.getState()).toBe('paused');\n      \n      controller.resume();\n      expect(controller.getState()).toBe('processing');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "301870f68c4820a3e6a6ad5191f08c49",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 702,
            "endLine": 706
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 777,
            "endLine": 781
          }
        ],
        "sample": "      \n      controller.resume();\n      expect(controller.getState()).toBe('processing');\n    });\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2658ffb7220a0636f8035687ab79b33a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 703,
            "endLine": 707
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 778,
            "endLine": 782
          }
        ],
        "sample": "      controller.resume();\n      expect(controller.getState()).toBe('processing');\n    });\n  });\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7aa41caf55d1d327f142f54f1f19438",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 710,
            "endLine": 714
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1167,
            "endLine": 1171
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      await engine.initialize();\n    });\n    \n    it('should destroy engine normally', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9860af9b3c26bdc092525990956ab63",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 711,
            "endLine": 715
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1168,
            "endLine": 1172
          }
        ],
        "sample": "      await engine.initialize();\n    });\n    \n    it('should destroy engine normally', async () => {\n      mockStateManager.getState.mockReturnValue('ready');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3304eff28876aba24b6d311675b9229c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 712,
            "endLine": 716
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1169,
            "endLine": 1173
          }
        ],
        "sample": "    });\n    \n    it('should destroy engine normally', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8b06b47e3ff633c52512c840d6ceab9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 713,
            "endLine": 717
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1170,
            "endLine": 1174
          }
        ],
        "sample": "    \n    it('should destroy engine normally', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      await engine.destroy();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "21fe8f3b9fee05ac671b51ea6c95b73b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 714,
            "endLine": 718
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1171,
            "endLine": 1175
          }
        ],
        "sample": "    it('should destroy engine normally', async () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      await engine.destroy();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70eae7174266171b5db9bbc11c046924",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 715,
            "endLine": 719
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1172,
            "endLine": 1176
          }
        ],
        "sample": "      mockStateManager.getState.mockReturnValue('ready');\n      \n      await engine.destroy();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroying');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4e24821d42a4c830d02fd301b10905ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 716,
            "endLine": 720
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1173,
            "endLine": 1177
          }
        ],
        "sample": "      \n      await engine.destroy();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroying');\n      expect(mockWasmModule._rnnoise_destroy).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35a9cfb7eccb1f9d75fda91adcb55973",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 717,
            "endLine": 721
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1174,
            "endLine": 1178
          }
        ],
        "sample": "      await engine.destroy();\n      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroying');\n      expect(mockWasmModule._rnnoise_destroy).toHaveBeenCalled();\n      expect(mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d8c522b96daa1f60b524b742c2a4c196",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 718,
            "endLine": 722
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1175,
            "endLine": 1179
          }
        ],
        "sample": "      \n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroying');\n      expect(mockWasmModule._rnnoise_destroy).toHaveBeenCalled();\n      expect(mockWasmModule._free).toHaveBeenCa...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6a53d7fbe5d945c55dbf16245faffe37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 719,
            "endLine": 723
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1176,
            "endLine": 1180
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroying');\n      expect(mockWasmModule._rnnoise_destroy).toHaveBeenCalled();\n      expect(mockWasmModule._free).toHaveBeenCalledTim...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "be806562c739e714b9b6a81b0ae4d667",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 720,
            "endLine": 724
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1177,
            "endLine": 1181
          }
        ],
        "sample": "      expect(mockWasmModule._rnnoise_destroy).toHaveBeenCalled();\n      expect(mockWasmModule._free).toHaveBeenCalledTimes(2);\n      expect(mockAudioContext.close).toHaveBeenCalled();\n      expect(moc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a005784e1fdcb8d80cdf5f3ddde8e82e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 721,
            "endLine": 725
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1178,
            "endLine": 1182
          }
        ],
        "sample": "      expect(mockWasmModule._free).toHaveBeenCalledTimes(2);\n      expect(mockAudioContext.close).toHaveBeenCalled();\n      expect(mockWorkerManager.terminateAll).toHaveBeenCalled();\n      expect(mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73d2f646318742e3a4effbe0b918891f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 722,
            "endLine": 726
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1179,
            "endLine": 1183
          }
        ],
        "sample": "      expect(mockAudioContext.close).toHaveBeenCalled();\n      expect(mockWorkerManager.terminateAll).toHaveBeenCalled();\n      expect(mockMetricsManager.stopAutoUpdate).toHaveBeenCalled();\n      expe...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1000ca336aa38a54d77a16f438b3f70e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 723,
            "endLine": 727
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1180,
            "endLine": 1184
          }
        ],
        "sample": "      expect(mockWorkerManager.terminateAll).toHaveBeenCalled();\n      expect(mockMetricsManager.stopAutoUpdate).toHaveBeenCalled();\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('d...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "53f1f7f4c867f8d47e931a3349e20837",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 724,
            "endLine": 728
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1181,
            "endLine": 1185
          }
        ],
        "sample": "      expect(mockMetricsManager.stopAutoUpdate).toHaveBeenCalled();\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroyed');\n    });\n    \n    it('should force destroy with active...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d62d718ce6b143ac05f630164695325e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 725,
            "endLine": 729
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1182,
            "endLine": 1186
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('destroyed');\n    });\n    \n    it('should force destroy with active streams', async () => {\n      await engine.processStream(mockStream...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "64128f86dbdac13fe17dff51836a7fe4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 726,
            "endLine": 730
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1183,
            "endLine": 1187
          }
        ],
        "sample": "    });\n    \n    it('should force destroy with active streams', async () => {\n      await engine.processStream(mockStream);\n      mockStateManager.canTransitionTo.mockReturnValue(false);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "40c1b2d094d3c82a4ebefefb04ae15af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 727,
            "endLine": 731
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1184,
            "endLine": 1188
          }
        ],
        "sample": "    \n    it('should force destroy with active streams', async () => {\n      await engine.processStream(mockStream);\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efaf911303b1f30e42a50bf21d9727fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 728,
            "endLine": 732
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1185,
            "endLine": 1189
          }
        ],
        "sample": "    it('should force destroy with active streams', async () => {\n      await engine.processStream(mockStream);\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await engine....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52a5b063eba146f25301bc39dc3a28c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 729,
            "endLine": 733
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1186,
            "endLine": 1190
          }
        ],
        "sample": "      await engine.processStream(mockStream);\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await engine.destroy(true);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f393189425cb4327922b6cc19e21f915",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 733,
            "endLine": 737
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1190,
            "endLine": 1194
          }
        ],
        "sample": "      \n      expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');\n    });\n    \n    it('should handle already destroyed state', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35d98207232e3ed437007bb181bbb5f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 734,
            "endLine": 738
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1191,
            "endLine": 1195
          }
        ],
        "sample": "      expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');\n    });\n    \n    it('should handle already destroyed state', async () => {\n      mockStateManager.canTransitionTo.mockRet...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d9463354eef33d4f14b986c18fdd252e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 735,
            "endLine": 739
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1192,
            "endLine": 1196
          }
        ],
        "sample": "    });\n    \n    it('should handle already destroyed state', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f75910c87eb7f5307aea55ec7aa1bb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 736,
            "endLine": 740
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1193,
            "endLine": 1197
          }
        ],
        "sample": "    \n    it('should handle already destroyed state', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await expect(engine.destroy()).rejects.toThrow('Cannot de...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e070a86cf582f0bd8f6409b367e57010",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 737,
            "endLine": 741
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1194,
            "endLine": 1198
          }
        ],
        "sample": "    it('should handle already destroyed state', async () => {\n      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await expect(engine.destroy()).rejects.toThrow('Cannot destroy...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75b03ca80f20c82717f063e6d68947e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 738,
            "endLine": 742
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1195,
            "endLine": 1199
          }
        ],
        "sample": "      mockStateManager.canTransitionTo.mockReturnValue(false);\n      \n      await expect(engine.destroy()).rejects.toThrow('Cannot destroy engine in current state');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "57beac1550308af54b4eddc3a0025718",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 739,
            "endLine": 743
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1196,
            "endLine": 1200
          }
        ],
        "sample": "      \n      await expect(engine.destroy()).rejects.toThrow('Cannot destroy engine in current state');\n    });\n    \n    it('should handle errors during cleanup', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "99c3c58dafc035c412208519b0930437",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 740,
            "endLine": 744
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1197,
            "endLine": 1201
          }
        ],
        "sample": "      await expect(engine.destroy()).rejects.toThrow('Cannot destroy engine in current state');\n    });\n    \n    it('should handle errors during cleanup', async () => {\n      mockAudioContext.close.mo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c53518b3aaee1daad3c7c9a9b6fa64e6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 741,
            "endLine": 745
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1198,
            "endLine": 1202
          }
        ],
        "sample": "    });\n    \n    it('should handle errors during cleanup', async () => {\n      mockAudioContext.close.mockRejectedValueOnce(new Error('Close failed'));\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fde78d35f1dc1b8ae2e7c3a9337357b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 742,
            "endLine": 746
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1199,
            "endLine": 1203
          }
        ],
        "sample": "    \n    it('should handle errors during cleanup', async () => {\n      mockAudioContext.close.mockRejectedValueOnce(new Error('Close failed'));\n      \n      await expect(engine.destroy()).rejects.toTh...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef24afd9f6f83764db8a3316598da794",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 743,
            "endLine": 747
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1200,
            "endLine": 1204
          }
        ],
        "sample": "    it('should handle errors during cleanup', async () => {\n      mockAudioContext.close.mockRejectedValueOnce(new Error('Close failed'));\n      \n      await expect(engine.destroy()).rejects.toThrow('...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f51c976ce27f4913a21b23a29f07b32",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 744,
            "endLine": 748
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1201,
            "endLine": 1205
          }
        ],
        "sample": "      mockAudioContext.close.mockRejectedValueOnce(new Error('Close failed'));\n      \n      await expect(engine.destroy()).rejects.toThrow('Cleanup failed');\n      expect(mockStateManager.transitionTo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f9b0839e6749d77e989c4ef6e955fdc0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 745,
            "endLine": 749
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1202,
            "endLine": 1206
          }
        ],
        "sample": "      \n      await expect(engine.destroy()).rejects.toThrow('Cleanup failed');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "378a32af5fb414e23869812c7b683a17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 746,
            "endLine": 750
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1203,
            "endLine": 1207
          }
        ],
        "sample": "      await expect(engine.destroy()).rejects.toThrow('Cleanup failed');\n      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    \n    it('should clear cleanup timer', asy...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7fde291c579f91f1c56c326c34f28952",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 747,
            "endLine": 751
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1204,
            "endLine": 1208
          }
        ],
        "sample": "      expect(mockStateManager.transitionTo).toHaveBeenCalledWith('error');\n    });\n    \n    it('should clear cleanup timer', async () => {\n      vi.useFakeTimers();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5bb63ae254708cf7c6970d23e4c66053",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 748,
            "endLine": 752
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1205,
            "endLine": 1209
          }
        ],
        "sample": "    });\n    \n    it('should clear cleanup timer', async () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f58943257f91ab5c4f22be00183cda9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 749,
            "endLine": 753
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1206,
            "endLine": 1210
          }
        ],
        "sample": "    \n    it('should clear cleanup timer', async () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      const clearTimeoutSpy = vi.spyOn(global, 'clearTimeo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a52faa0d858a3c6a9a98415d80a1f2d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 750,
            "endLine": 754
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1207,
            "endLine": 1211
          }
        ],
        "sample": "    it('should clear cleanup timer', async () => {\n      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      const clearTimeoutSpy = vi.spyOn(global, 'clearTimeout');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ecd0525256be3f43c0b88e144b19924f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 751,
            "endLine": 755
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1208,
            "endLine": 1212
          }
        ],
        "sample": "      vi.useFakeTimers();\n      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      const clearTimeoutSpy = vi.spyOn(global, 'clearTimeout');\n      \n      engine = new MurmubaraEngine({ autoCl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8abef71d526e32f2a45264d628462093",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 752,
            "endLine": 756
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1209,
            "endLine": 1213
          }
        ],
        "sample": "      const setTimeoutSpy = vi.spyOn(global, 'setTimeout');\n      const clearTimeoutSpy = vi.spyOn(global, 'clearTimeout');\n      \n      engine = new MurmubaraEngine({ autoCleanup: true });\n      awai...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "adc14f393d623a9f813fde845895b7e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 753,
            "endLine": 757
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1210,
            "endLine": 1214
          }
        ],
        "sample": "      const clearTimeoutSpy = vi.spyOn(global, 'clearTimeout');\n      \n      engine = new MurmubaraEngine({ autoCleanup: true });\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3468a6b1ae2f9ec4bb7ad72dcdc34e1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 754,
            "endLine": 758
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1211,
            "endLine": 1215
          }
        ],
        "sample": "      \n      engine = new MurmubaraEngine({ autoCleanup: true });\n      await engine.initialize();\n      \n      // Start cleanup timer...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc41062b0194bd7bf0f94c99fe7c7d77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 755,
            "endLine": 759
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1212,
            "endLine": 1216
          }
        ],
        "sample": "      engine = new MurmubaraEngine({ autoCleanup: true });\n      await engine.initialize();\n      \n      // Start cleanup timer\n      mockStateManager.isInState.mockReturnValue(true);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19987ccd3a1b9e457d93f011e92991be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 756,
            "endLine": 760
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1213,
            "endLine": 1217
          }
        ],
        "sample": "      await engine.initialize();\n      \n      // Start cleanup timer\n      mockStateManager.isInState.mockReturnValue(true);\n      engine.emit('processing-end');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a5d1baf2cd63cf85684466754c98dbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 758,
            "endLine": 762
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1215,
            "endLine": 1219
          }
        ],
        "sample": "      // Start cleanup timer\n      mockStateManager.isInState.mockReturnValue(true);\n      engine.emit('processing-end');\n      \n      await engine.destroy();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b61817c10df35b10d523f773ae055da5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 759,
            "endLine": 763
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1216,
            "endLine": 1220
          }
        ],
        "sample": "      mockStateManager.isInState.mockReturnValue(true);\n      engine.emit('processing-end');\n      \n      await engine.destroy();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d978b1f496fa037d171727e86026e052",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 760,
            "endLine": 764
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1217,
            "endLine": 1221
          }
        ],
        "sample": "      engine.emit('processing-end');\n      \n      await engine.destroy();\n      \n      // Should have cleared a timer...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2acad7b621fbafc5ae923bcdf711b451",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 761,
            "endLine": 765
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1218,
            "endLine": 1222
          }
        ],
        "sample": "      \n      await engine.destroy();\n      \n      // Should have cleared a timer\n      expect(clearTimeoutSpy).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34a884905454054a04de8652c94eaf09",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 762,
            "endLine": 766
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1219,
            "endLine": 1223
          }
        ],
        "sample": "      await engine.destroy();\n      \n      // Should have cleared a timer\n      expect(clearTimeoutSpy).toHaveBeenCalled();\n      vi.useRealTimers();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5b9672796427fdcec99715a83b3bb839",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 763,
            "endLine": 767
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1220,
            "endLine": 1224
          }
        ],
        "sample": "      \n      // Should have cleared a timer\n      expect(clearTimeoutSpy).toHaveBeenCalled();\n      vi.useRealTimers();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b117a357480e623abb85dd112b486a28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 769,
            "endLine": 773
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1289,
            "endLine": 1293
          }
        ],
        "sample": "  \n  describe('Metrics and Diagnostics', () => {\n    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34c790e34782d31a393ad046662323d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 770,
            "endLine": 774
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1290,
            "endLine": 1294
          }
        ],
        "sample": "  describe('Metrics and Diagnostics', () => {\n    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      await engine.initialize();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18000c9af69ddcd8a1ac667fd9623b8a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 772,
            "endLine": 776
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1292,
            "endLine": 1296
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n      await engine.initialize();\n    });\n    \n    it('should get metrics', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9506baa66b1c20142558bfcbf4cc745a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 773,
            "endLine": 777
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1293,
            "endLine": 1297
          }
        ],
        "sample": "      await engine.initialize();\n    });\n    \n    it('should get metrics', () => {\n      const metrics = engine.getMetrics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74f11102fd6b20e1854710c564faba69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 774,
            "endLine": 778
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1294,
            "endLine": 1298
          }
        ],
        "sample": "    });\n    \n    it('should get metrics', () => {\n      const metrics = engine.getMetrics();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e75a69946b8f73c9184c8aaca7c9579",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 775,
            "endLine": 779
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1295,
            "endLine": 1299
          }
        ],
        "sample": "    \n    it('should get metrics', () => {\n      const metrics = engine.getMetrics();\n      \n      expect(mockMetricsManager.getMetrics).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db9bf202bd8bc8dcd1a0117cab6b8955",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 776,
            "endLine": 780
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1296,
            "endLine": 1300
          }
        ],
        "sample": "    it('should get metrics', () => {\n      const metrics = engine.getMetrics();\n      \n      expect(mockMetricsManager.getMetrics).toHaveBeenCalled();\n      expect(metrics).toHaveProperty('noiseReduct...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68349940e64d3723bff79b697a4b0762",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 777,
            "endLine": 781
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1297,
            "endLine": 1301
          }
        ],
        "sample": "      const metrics = engine.getMetrics();\n      \n      expect(mockMetricsManager.getMetrics).toHaveBeenCalled();\n      expect(metrics).toHaveProperty('noiseReductionLevel');\n      expect(metrics).toH...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "989774dd3f5c8ea909fd7425e550a085",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 782,
            "endLine": 786
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1305,
            "endLine": 1309
          }
        ],
        "sample": "    });\n    \n    it('should register metrics callback', () => {\n      const callback = vi.fn();\n      engine.onMetricsUpdate(callback);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51f9027274accc85f9d0c9c906c7318d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 785,
            "endLine": 789
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1308,
            "endLine": 1312
          }
        ],
        "sample": "      const callback = vi.fn();\n      engine.onMetricsUpdate(callback);\n      \n      // Should have registered the callback via event emitter\n      const metricsHandler = mockMetricsManager.on.mock.ca...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7252cb0a7003a5660f96f423eb1e5642",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 786,
            "endLine": 790
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1309,
            "endLine": 1313
          }
        ],
        "sample": "      engine.onMetricsUpdate(callback);\n      \n      // Should have registered the callback via event emitter\n      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0] === 'metrics-...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95f46e92ec0782e3d94eb06eb3f02ee6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 789,
            "endLine": 793
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1312,
            "endLine": 1316
          }
        ],
        "sample": "      const metricsHandler = mockMetricsManager.on.mock.calls.find(c => c[0] === 'metrics-update')?.[1];\n      expect(metricsHandler).toBeDefined();\n      \n      // Test the forwarding works\n      con...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc62a4d24ae141f8f4b43bf61b6a0a94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 790,
            "endLine": 794
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1313,
            "endLine": 1317
          }
        ],
        "sample": "      expect(metricsHandler).toBeDefined();\n      \n      // Test the forwarding works\n      const testMetrics = { noiseReductionLevel: 50 };\n      metricsHandler?.(testMetrics);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "93c88ecdef9fb2a1255dbb4059b43db5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 793,
            "endLine": 797
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1316,
            "endLine": 1320
          }
        ],
        "sample": "      const testMetrics = { noiseReductionLevel: 50 };\n      metricsHandler?.(testMetrics);\n      \n      // The engine should have received and forwarded the event\n      expect(engine.listenerCount('m...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "17c0eefae25abf3125425ec4e9fbd9cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 794,
            "endLine": 798
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1317,
            "endLine": 1321
          }
        ],
        "sample": "      metricsHandler?.(testMetrics);\n      \n      // The engine should have received and forwarded the event\n      expect(engine.listenerCount('metrics-update')).toBeGreaterThan(0);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db16ae8dad1e1902db3b50a2a1fd7224",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 795,
            "endLine": 799
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1318,
            "endLine": 1322
          }
        ],
        "sample": "      \n      // The engine should have received and forwarded the event\n      expect(engine.listenerCount('metrics-update')).toBeGreaterThan(0);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18f3ed89b1e5a6bfce8180833126aca8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 798,
            "endLine": 802
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1341,
            "endLine": 1345
          }
        ],
        "sample": "    });\n    \n    it('should get diagnostics', () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95e5960d8fcd9d6227dd186fb5608d0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 799,
            "endLine": 803
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1342,
            "endLine": 1346
          }
        ],
        "sample": "    \n    it('should get diagnostics', () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      const diagnostics = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "377bda877574571b5621784a6399e4a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 800,
            "endLine": 804
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1343,
            "endLine": 1347
          }
        ],
        "sample": "    it('should get diagnostics', () => {\n      mockStateManager.getState.mockReturnValue('ready');\n      \n      const diagnostics = engine.getDiagnostics();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6872c4f87bac6be1a4e2a3acff1cfaa3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 801,
            "endLine": 805
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1344,
            "endLine": 1348
          }
        ],
        "sample": "      mockStateManager.getState.mockReturnValue('ready');\n      \n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics).toMatchObject({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b8b650893e18cca3e294328562cfaa7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 802,
            "endLine": 806
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1345,
            "endLine": 1349
          }
        ],
        "sample": "      \n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics).toMatchObject({\n        engineState: 'ready',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79fa6ffe16c10b440bc5857b1bf88117",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 803,
            "endLine": 807
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1346,
            "endLine": 1350
          }
        ],
        "sample": "      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics).toMatchObject({\n        engineState: 'ready',\n        wasmLoaded: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf32378d96b1db785c73e517dd33cbe4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 804,
            "endLine": 808
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1347,
            "endLine": 1351
          }
        ],
        "sample": "      \n      expect(diagnostics).toMatchObject({\n        engineState: 'ready',\n        wasmLoaded: true,\n        processingTime: expect.any(Number),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc9139182934d889df2bdc667195e2b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 805,
            "endLine": 809
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1348,
            "endLine": 1352
          }
        ],
        "sample": "      expect(diagnostics).toMatchObject({\n        engineState: 'ready',\n        wasmLoaded: true,\n        processingTime: expect.any(Number),\n        memoryUsage: expect.any(Number),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34c0ba3dc6a7f6b910951373fb660267",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 806,
            "endLine": 810
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1349,
            "endLine": 1353
          }
        ],
        "sample": "        engineState: 'ready',\n        wasmLoaded: true,\n        processingTime: expect.any(Number),\n        memoryUsage: expect.any(Number),\n        activeProcessors: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55a6588747f3ea43da6b720da37af507",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 807,
            "endLine": 811
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1350,
            "endLine": 1354
          }
        ],
        "sample": "        wasmLoaded: true,\n        processingTime: expect.any(Number),\n        memoryUsage: expect.any(Number),\n        activeProcessors: 0,\n        version: expect.stringMatching(/^\\d+\\.\\d+\\.\\d+$/),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d639443477d06af7d0c0e382a53cbeb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 808,
            "endLine": 812
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1351,
            "endLine": 1355
          }
        ],
        "sample": "        processingTime: expect.any(Number),\n        memoryUsage: expect.any(Number),\n        activeProcessors: 0,\n        version: expect.stringMatching(/^\\d+\\.\\d+\\.\\d+$/),\n        browserInfo: expect...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0b7fcb862c96d6e4e30896adbd6ccdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 809,
            "endLine": 813
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1352,
            "endLine": 1356
          }
        ],
        "sample": "        memoryUsage: expect.any(Number),\n        activeProcessors: 0,\n        version: expect.stringMatching(/^\\d+\\.\\d+\\.\\d+$/),\n        browserInfo: expect.any(Object)\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc63997862d39eda26a93d8feadf9deb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 810,
            "endLine": 814
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1353,
            "endLine": 1357
          }
        ],
        "sample": "        activeProcessors: 0,\n        version: expect.stringMatching(/^\\d+\\.\\d+\\.\\d+$/),\n        browserInfo: expect.any(Object)\n      });\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2648f7371681b15d08af397176078b6d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 811,
            "endLine": 815
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1354,
            "endLine": 1358
          }
        ],
        "sample": "        version: expect.stringMatching(/^\\d+\\.\\d+\\.\\d+$/),\n        browserInfo: expect.any(Object)\n      });\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad1c611b0e004e6c8db9c721699eec55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 813,
            "endLine": 817
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1378,
            "endLine": 1382
          }
        ],
        "sample": "      });\n    });\n    \n    it('should include browser info', () => {\n      const diagnostics = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc4f085e0d2d1d6ea7e8a5f5f4c14f9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 814,
            "endLine": 818
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1379,
            "endLine": 1383
          }
        ],
        "sample": "    });\n    \n    it('should include browser info', () => {\n      const diagnostics = engine.getDiagnostics();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51242d5d68825df49f067b840cbfeffc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 815,
            "endLine": 819
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1380,
            "endLine": 1384
          }
        ],
        "sample": "    \n    it('should include browser info', () => {\n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics.browserInfo.name).toBe('Chrome');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bb861931930b9db35249c7e7cc34a510",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 816,
            "endLine": 820
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1381,
            "endLine": 1385
          }
        ],
        "sample": "    it('should include browser info', () => {\n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics.browserInfo.name).toBe('Chrome');\n      expect(diagnostics.browserInfo....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7936db761cd38f3a067ff69645b8a108",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 817,
            "endLine": 821
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1382,
            "endLine": 1386
          }
        ],
        "sample": "      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics.browserInfo.name).toBe('Chrome');\n      expect(diagnostics.browserInfo.version).toBe('120.0.0.0');\n      expect(diagn...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "790be6068a64678a07ca81331f49f1ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 818,
            "endLine": 822
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1383,
            "endLine": 1387
          }
        ],
        "sample": "      \n      expect(diagnostics.browserInfo.name).toBe('Chrome');\n      expect(diagnostics.browserInfo.version).toBe('120.0.0.0');\n      expect(diagnostics.browserInfo.audioAPIsSupported).toContain('A...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c099c3ba070b66b157fa0215a11cce6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 819,
            "endLine": 823
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1384,
            "endLine": 1388
          }
        ],
        "sample": "      expect(diagnostics.browserInfo.name).toBe('Chrome');\n      expect(diagnostics.browserInfo.version).toBe('120.0.0.0');\n      expect(diagnostics.browserInfo.audioAPIsSupported).toContain('AudioCon...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9e5ec979e167325b67175d06a32897db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 820,
            "endLine": 824
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1385,
            "endLine": 1389
          }
        ],
        "sample": "      expect(diagnostics.browserInfo.version).toBe('120.0.0.0');\n      expect(diagnostics.browserInfo.audioAPIsSupported).toContain('AudioContext');\n    });\n    \n    it('should handle performance.memo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "36e49216c331934b772e9d919ab87df6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 821,
            "endLine": 825
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1386,
            "endLine": 1390
          }
        ],
        "sample": "      expect(diagnostics.browserInfo.audioAPIsSupported).toContain('AudioContext');\n    });\n    \n    it('should handle performance.memory absence', () => {\n      delete (global.performance as any).mem...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7c078319c6a64ba21252ad911839634a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 822,
            "endLine": 826
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1387,
            "endLine": 1391
          }
        ],
        "sample": "    });\n    \n    it('should handle performance.memory absence', () => {\n      delete (global.performance as any).memory;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79da16d8627e38440900abe42c51ca1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 823,
            "endLine": 827
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1388,
            "endLine": 1392
          }
        ],
        "sample": "    \n    it('should handle performance.memory absence', () => {\n      delete (global.performance as any).memory;\n      \n      const diagnostics = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ac53faf12300159287676e753289c478",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 824,
            "endLine": 828
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1389,
            "endLine": 1393
          }
        ],
        "sample": "    it('should handle performance.memory absence', () => {\n      delete (global.performance as any).memory;\n      \n      const diagnostics = engine.getDiagnostics();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b894fc2dbc3c9ec3a8682227e889adf8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 825,
            "endLine": 829
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1390,
            "endLine": 1394
          }
        ],
        "sample": "      delete (global.performance as any).memory;\n      \n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics.memoryUsage).toBe(0);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "423fcc78f1d297ac93a83b4e66c42428",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 826,
            "endLine": 830
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1391,
            "endLine": 1395
          }
        ],
        "sample": "      \n      const diagnostics = engine.getDiagnostics();\n      \n      expect(diagnostics.memoryUsage).toBe(0);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cddc22b1f40b8e9a2bcffc0e0e81120",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 834,
            "endLine": 838
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 997,
            "endLine": 1001
          }
        ],
        "sample": "    beforeEach(() => {\n      engine = new MurmubaraEngine();\n    });\n    \n    it('should emit error events', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03a226a6eac9adaf58ac66410c104d6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 835,
            "endLine": 839
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 998,
            "endLine": 1002
          }
        ],
        "sample": "      engine = new MurmubaraEngine();\n    });\n    \n    it('should emit error events', async () => {\n      const errorHandler = vi.fn();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d3dcac50fe0f5a342d72887682a32762",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 836,
            "endLine": 840
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 999,
            "endLine": 1003
          }
        ],
        "sample": "    });\n    \n    it('should emit error events', async () => {\n      const errorHandler = vi.fn();\n      engine.on('error', errorHandler);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5eb859e139e1255553317b60b17653bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 843,
            "endLine": 847
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 859,
            "endLine": 863
          }
        ],
        "sample": "      const { loadRNNoiseModule } = await import('../../utils/rnnoise-loader');\n      (loadRNNoiseModule as any).mockRejectedValueOnce(new Error('Test error'));\n      \n      try {\n        await engine...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0ac7a76984330aed681e7911ee71abc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 848,
            "endLine": 852
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1011,
            "endLine": 1015
          }
        ],
        "sample": "      } catch (e) {\n        // Expected\n      }\n      \n      expect(errorHandler).toHaveBeenCalledWith(expect.objectContaining({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "72405bae098472826e2ebe572e035457",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 849,
            "endLine": 853
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1012,
            "endLine": 1016
          }
        ],
        "sample": "        // Expected\n      }\n      \n      expect(errorHandler).toHaveBeenCalledWith(expect.objectContaining({\n        code: 'INITIALIZATION_FAILED',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efa10847675de54589013ffffa274bf0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 850,
            "endLine": 854
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1013,
            "endLine": 1017
          }
        ],
        "sample": "      }\n      \n      expect(errorHandler).toHaveBeenCalledWith(expect.objectContaining({\n        code: 'INITIALIZATION_FAILED',\n        message: expect.stringContaining('Test error')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70377a2d4721de75a6ce371c0554b336",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 851,
            "endLine": 855
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1014,
            "endLine": 1018
          }
        ],
        "sample": "      \n      expect(errorHandler).toHaveBeenCalledWith(expect.objectContaining({\n        code: 'INITIALIZATION_FAILED',\n        message: expect.stringContaining('Test error')\n      }));...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "836a64da3056298c49621a7aec5b7cb3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 852,
            "endLine": 856
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1015,
            "endLine": 1019
          }
        ],
        "sample": "      expect(errorHandler).toHaveBeenCalledWith(expect.objectContaining({\n        code: 'INITIALIZATION_FAILED',\n        message: expect.stringContaining('Test error')\n      }));\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a8573f3184d9b44e55a430395cce5eaf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 853,
            "endLine": 857
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1016,
            "endLine": 1020
          }
        ],
        "sample": "        code: 'INITIALIZATION_FAILED',\n        message: expect.stringContaining('Test error')\n      }));\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a84885727accc040de0218590efafcdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 854,
            "endLine": 858
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1017,
            "endLine": 1021
          }
        ],
        "sample": "        message: expect.stringContaining('Test error')\n      }));\n    });\n    \n    it('should record error history', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "57693424504ac9ce946afbef743a9790",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 864,
            "endLine": 868
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1027,
            "endLine": 1031
          }
        ],
        "sample": "      } catch (e) {\n        // Expected\n      }\n      \n      const diagnostics = engine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e7524e58db2cd12ae259fce8f95a188",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 865,
            "endLine": 869
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1028,
            "endLine": 1032
          }
        ],
        "sample": "        // Expected\n      }\n      \n      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.errors).toHaveLength(1);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3205197ac2d9ead40948e4eeee0e3080",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 866,
            "endLine": 870
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1029,
            "endLine": 1033
          }
        ],
        "sample": "      }\n      \n      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.errors).toHaveLength(1);\n      expect(diagnostics.errors[0].error).toContain('Test error');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7ed51b36be4e7e380f23797dc60b357d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 867,
            "endLine": 871
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1030,
            "endLine": 1034
          }
        ],
        "sample": "      \n      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.errors).toHaveLength(1);\n      expect(diagnostics.errors[0].error).toContain('Test error');\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3965109ce5409066b7ca3d79f1542d0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 868,
            "endLine": 872
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1031,
            "endLine": 1035
          }
        ],
        "sample": "      const diagnostics = engine.getDiagnostics();\n      expect(diagnostics.errors).toHaveLength(1);\n      expect(diagnostics.errors[0].error).toContain('Test error');\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00b8ff5a73e82d6adfb3439c3ca57b71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 869,
            "endLine": 873
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1032,
            "endLine": 1036
          }
        ],
        "sample": "      expect(diagnostics.errors).toHaveLength(1);\n      expect(diagnostics.errors[0].error).toContain('Test error');\n    });\n    \n    it('should limit error history', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a45e5b3eb11e81316e1210810f4101c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 870,
            "endLine": 874
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1033,
            "endLine": 1037
          }
        ],
        "sample": "      expect(diagnostics.errors[0].error).toContain('Test error');\n    });\n    \n    it('should limit error history', async () => {\n      // Mock loadRNNoiseModule to always fail...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f86730b1d3058174738bb223325f1f2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 872,
            "endLine": 876
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 873,
            "endLine": 877
          }
        ],
        "sample": "    \n    it('should limit error history', async () => {\n      // Mock loadRNNoiseModule to always fail\n      const { loadRNNoiseModule } = await import('../../utils/rnnoise-loader');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73e9738b06879bef02b0e068cfed08db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 880,
            "endLine": 884
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1037,
            "endLine": 1041
          }
        ],
        "sample": "      // Create first engine and trigger 15 errors\n      const testEngine = new MurmubaraEngine();\n      \n      // Force internal error recording by accessing private method\n      for (let i = 0; i < ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65e3b2aff0d01ef570cc9647509f6cf9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 881,
            "endLine": 885
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1038,
            "endLine": 1042
          }
        ],
        "sample": "      const testEngine = new MurmubaraEngine();\n      \n      // Force internal error recording by accessing private method\n      for (let i = 0; i < 15; i++) {\n        (testEngine as any).recordError(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5db44da7438dbc0fa6f4653aafd7f827",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 884,
            "endLine": 888
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1041,
            "endLine": 1045
          }
        ],
        "sample": "      for (let i = 0; i < 15; i++) {\n        (testEngine as any).recordError(new Error(`Error ${i}`));\n      }\n      \n      const diagnostics = testEngine.getDiagnostics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f881a0ee6f28d3e29892d4a591d289c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 885,
            "endLine": 889
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1042,
            "endLine": 1046
          }
        ],
        "sample": "        (testEngine as any).recordError(new Error(`Error ${i}`));\n      }\n      \n      const diagnostics = testEngine.getDiagnostics();\n      expect(diagnostics.errors).toHaveLength(10); // Max 10...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e7a80ae150ec652e5350d10fbf5c6ea7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 897,
            "endLine": 901
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 914,
            "endLine": 918
          }
        ],
        "sample": "    beforeEach(async () => {\n      // Reset the mock to resolve correctly for all tests in this describe block\n      const { loadRNNoiseModule } = await import('../../utils/rnnoise-loader');\n      (lo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7188229349fd8368aab1171583e775de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 898,
            "endLine": 902
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/MurmubaraEngine.test.ts",
            "startLine": 915,
            "endLine": 919
          }
        ],
        "sample": "      // Reset the mock to resolve correctly for all tests in this describe block\n      const { loadRNNoiseModule } = await import('../../utils/rnnoise-loader');\n      (loadRNNoiseModule as any).mockR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "204d337f35e82f4ffd865c19d858a32e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/core/StateManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/core/StateManager.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/__tests__/core/StateManager.test.ts",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "        \n        (allowedStates as readonly EngineState[]).forEach(toState => {\n          expect(stateManager.canTransitionTo(toState)).toBe(true);\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aafb3181429e218e2626e83fc103b5f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "  });\n  \n  describe('constructor', () => {\n    it('should create instance with default config', () => {\n      expect(engine).toBeDefined();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41f51e53c856782cfc5d6bcb2419e592",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 358,
            "endLine": 362
          }
        ],
        "sample": "      \n      await expect(uninitializedEngine.processWithWorklet(input)).rejects.toThrow('AudioWorkletEngine not initialized');\n    });\n    \n    it('should handle errors during processing', async () =...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50670febdcb9bcc8d8ae1198e56d6a2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 362,
            "endLine": 366
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 363,
            "endLine": 367
          }
        ],
        "sample": "      // Make startRendering fail\n      const failingContext = new MockOfflineAudioContext(1, 480, 48000);\n      failingContext.startRendering = vi.fn().mockRejectedValue(new Error('Rendering failed')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8b7bb5c51f678baeb72d7b057ca7ded4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 370,
            "endLine": 374
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 371,
            "endLine": 375
          }
        ],
        "sample": "      \n      const input = new Float32Array(480);\n      \n      await expect(engine.processWithWorklet(input)).rejects.toThrow('Rendering failed');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1eba562b99eaf0a24843579fc385994",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 396,
            "endLine": 400
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 324,
            "endLine": 328
          }
        ],
        "sample": "    });\n    \n    it('should handle cleanup when not initialized', () => {\n      expect(() => engine.cleanup()).not.toThrow();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5a87e3da5bd5822888bc0b85a4a76e6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 397,
            "endLine": 401
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 325,
            "endLine": 329
          }
        ],
        "sample": "    \n    it('should handle cleanup when not initialized', () => {\n      expect(() => engine.cleanup()).not.toThrow();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd407535773688d9d7309585cfb7a6ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 401,
            "endLine": 405
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 402,
            "endLine": 406
          }
        ],
        "sample": "    \n    it('should handle errors during cleanup', async () => {\n      await engine.initialize();\n      mockAudioContext.close.mockRejectedValue(new Error('Close failed'));\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "af3782205174363222670ae49713b989",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 406,
            "endLine": 410
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 334,
            "endLine": 338
          }
        ],
        "sample": "      // Should not throw\n      expect(() => engine.cleanup()).not.toThrow();\n    });\n  });\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d035eef0b855567f614d47dfa7dee913",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 460,
            "endLine": 464
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "  if (this.workletNode) {\n    this.workletNode.disconnect();\n    this.workletNode = null;\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "60be95adec07fc06a25be6d7bf66ec8c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 461,
            "endLine": 465
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 440,
            "endLine": 444
          }
        ],
        "sample": "    this.workletNode.disconnect();\n    this.workletNode = null;\n  }\n  \n  if (this.audioContext) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "598e907711f93978c488f5ed83300285",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 464,
            "endLine": 468
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 465,
            "endLine": 469
          }
        ],
        "sample": "  \n  if (this.audioContext) {\n    this.audioContext.close().catch(() => {});\n    this.audioContext = null;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d1abfb08947933a21eb6a4a844973222",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.complete.test.ts",
            "startLine": 467,
            "endLine": 471
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 446,
            "endLine": 450
          }
        ],
        "sample": "    this.audioContext = null;\n  }\n  \n  this.isInitialized = false;\n};...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f824d48aa10b288263bb894e585c019",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "\n  beforeEach(() => {\n    // Save original values\n    originalAudioContext = (global as any).AudioContext;\n    originalAudioWorklet = (global as any).AudioWorklet;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1dd550c3b80144b2bed4ee00524e9a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "  beforeEach(() => {\n    // Save original values\n    originalAudioContext = (global as any).AudioContext;\n    originalAudioWorklet = (global as any).AudioWorklet;\n    originalBlob = (global as any).Bl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0d1903385d93e9e966880fad0c0d1bc6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "    // Save original values\n    originalAudioContext = (global as any).AudioContext;\n    originalAudioWorklet = (global as any).AudioWorklet;\n    originalBlob = (global as any).Blob;\n    originalURL =...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b0f85fecf3e79d97af0d761aab7c333",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "    \n    // Mock Blob\n    (global as any).Blob = vi.fn((content, options) => ({\n      content,\n      options...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa014a1f3cfb5f17ce1f6b942920b935",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "    // Mock Blob\n    (global as any).Blob = vi.fn((content, options) => ({\n      content,\n      options\n    }));...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cec7b40d8981f992f2f06ff8c416a0f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "    (global as any).Blob = vi.fn((content, options) => ({\n      content,\n      options\n    }));\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea8d4a6371394137ea396f58a1002ac8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "    }));\n    \n    // Mock URL\n    (global as any).URL = {\n      createObjectURL: vi.fn(() => 'blob://mock-url'),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f3cf0b701e6d0dd43f38500373a005c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "    \n    // Mock URL\n    (global as any).URL = {\n      createObjectURL: vi.fn(() => 'blob://mock-url'),\n      revokeObjectURL: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf51dca28d3beb5ac587bef0655007f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "    // Mock URL\n    (global as any).URL = {\n      createObjectURL: vi.fn(() => 'blob://mock-url'),\n      revokeObjectURL: vi.fn()\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "946258b497d7aac147b86c118929e506",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "    (global as any).URL = {\n      createObjectURL: vi.fn(() => 'blob://mock-url'),\n      revokeObjectURL: vi.fn()\n    };\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d1d171fc7a7f7cd80f9568f60c8c3cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "      createObjectURL: vi.fn(() => 'blob://mock-url'),\n      revokeObjectURL: vi.fn()\n    };\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b9f3db27f850fee0c3a5a2a360e59e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "  });\n\n  afterEach(() => {\n    // Restore original values\n    (global as any).AudioContext = originalAudioContext;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7b85e10caecef3444f149498848d886",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "\n  afterEach(() => {\n    // Restore original values\n    (global as any).AudioContext = originalAudioContext;\n    (global as any).AudioWorklet = originalAudioWorklet;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d526ecd7f0b16d361003818a87a7aa06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "  afterEach(() => {\n    // Restore original values\n    (global as any).AudioContext = originalAudioContext;\n    (global as any).AudioWorklet = originalAudioWorklet;\n    (global as any).Blob = original...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2747030cb3ddd6b4a6726cab83f51c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 31,
            "endLine": 35
          }
        ],
        "sample": "    // Restore original values\n    (global as any).AudioContext = originalAudioContext;\n    (global as any).AudioWorklet = originalAudioWorklet;\n    (global as any).Blob = originalBlob;\n    (global as...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bbbba13a04d6fb79f725af2e17d559e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "      const mockAudioContext = {\n        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)\n        }\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b25eff31ee70a087ef12024ded72290a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)\n        }\n      };\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "226f4eec70f40cd1295943466fc032de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "          addModule: vi.fn().mockResolvedValue(undefined)\n        }\n      };\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = vi.fn();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6a7206a0dbd3435e1c54a7d77d5dd257",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n\n      // Check that Blob was created with processor code\n      expect((global as any).Blob).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e89cb98f0228c1c1dbf9365dee17f238",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "      await engine.initialize();\n\n      // Check that Blob was created with processor code\n      expect((global as any).Blob).toHaveBeenCalled();\n      const blobCall = (global as any).Blob.mock.calls...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3dfdd938b5b601b3381614af65e79844",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "\n      // Check that Blob was created with processor code\n      expect((global as any).Blob).toHaveBeenCalled();\n      const blobCall = (global as any).Blob.mock.calls[0];\n      const processorCode = ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1a09227046768b3d095abff371dbb4c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "\n      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n\n      const processorCode = (global as any).Blob.mock.calls[0][0][0];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f696fb2c4bbfa609d33cb80ea38e0dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 96,
            "endLine": 100
          }
        ],
        "sample": "      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n\n      const processorCode = (global as any).Blob.mock.calls[0][0][0];\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2b49c434cc6583ab81d8524fc3ebfbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "      await engine.initialize();\n\n      const processorCode = (global as any).Blob.mock.calls[0][0][0];\n      \n      // Check frame buffering logic...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e2e9faa7d706fcca494bd0800f0f6b57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "      let messageHandler: any = null;\n      const mockWorkletNode = {\n        connect: vi.fn(),\n        disconnect: vi.fn(),\n        port: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c3a8914d99f011966b2ae1590eae3ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "      const mockWorkletNode = {\n        connect: vi.fn(),\n        disconnect: vi.fn(),\n        port: {\n          postMessage: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "663adbdfeb376b83eee9f6fc49b37bf2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn(),\n        port: {\n          postMessage: vi.fn(),\n          get onmessage() { return messageHandler; },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f088eb604aa6ccf8f0287d187b4e2f28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "        disconnect: vi.fn(),\n        port: {\n          postMessage: vi.fn(),\n          get onmessage() { return messageHandler; },\n          set onmessage(handler) { messageHandler = handler; }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c22ce6b55469bb68c380cf60b002e350",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 156,
            "endLine": 160
          }
        ],
        "sample": "        port: {\n          postMessage: vi.fn(),\n          get onmessage() { return messageHandler; },\n          set onmessage(handler) { messageHandler = handler; }\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3979f05cba7eb812192c9710a2887af9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "          postMessage: vi.fn(),\n          get onmessage() { return messageHandler; },\n          set onmessage(handler) { messageHandler = handler; }\n        }\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0bf68d6565df03b81f5853da102fc4f5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "          get onmessage() { return messageHandler; },\n          set onmessage(handler) { messageHandler = handler; }\n        }\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73b9f0e3f3e24f40f31cda40cf398c38",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "          set onmessage(handler) { messageHandler = handler; }\n        }\n      };\n      \n      const mockAudioContext = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8786e1bfb15b433d6273739ea015e83a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 161,
            "endLine": 165
          }
        ],
        "sample": "      };\n      \n      const mockAudioContext = {\n        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7b61ac4da956a633824d2942e5f5912",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "      \n      const mockAudioContext = {\n        audioWorklet: {\n          addModule: vi.fn().mockResolvedValue(undefined)\n        },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "479e2ed08a8e83c4fd7a4b8c097d1c69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "          addModule: vi.fn().mockResolvedValue(undefined)\n        },\n        sampleRate: 48000\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "47e8ee2f2266ad170d36549a5caffa19",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.rnnoise.test.ts",
            "startLine": 166,
            "endLine": 170
          }
        ],
        "sample": "        },\n        sampleRate: 48000\n      };\n      \n      (global as any).AudioContext = vi.fn(() => mockAudioContext);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "857f0de38051e741fffeffb9563afa14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 75,
            "endLine": 79
          }
        ],
        "sample": "      // Mock AudioContext without audioWorklet\n      const mockAudioContext = {};\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = undefined;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "267454b621f14426ee82797293050b47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "      const mockAudioContext = {};\n      (global as any).AudioContext = vi.fn(() => mockAudioContext);\n      (global as any).AudioWorklet = undefined;\n\n      const engine = new AudioWorkletEngine();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9481f34d59377f1e343606793009bc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "      (global as any).AudioWorklet = undefined;\n\n      const engine = new AudioWorkletEngine();\n      expect(engine.isAudioWorkletSupported()).toBe(false);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3bc40d7be82ae88d3ac6939f77f76586",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 196,
            "endLine": 200
          }
        ],
        "sample": "        createGain: vi.fn(() => ({\n          connect: vi.fn(),\n          disconnect: vi.fn(),\n          gain: { value: 1 }\n        })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0782dbe175421c92e9128482390eb50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn(),\n        port: {\n          postMessage: vi.fn(),\n          onmessage: null...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "857a773f45e6a11b029959b6c24772f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "        disconnect: vi.fn(),\n        port: {\n          postMessage: vi.fn(),\n          onmessage: null\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2747af86e5025dbdddfc375042aa6020",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 151,
            "endLine": 155
          }
        ],
        "sample": "\n    it('should include RNNoise processor code in the module', async () => {\n      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e6e0aced9802f2f772fe3cc48c737fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 210,
            "endLine": 214
          }
        ],
        "sample": "      // Mock OfflineAudioContext\n      mockOfflineContext = {\n        createBuffer: vi.fn(() => ({\n          copyToChannel: vi.fn(),\n          copyFromChannel: vi.fn((target) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ec14bfa8fe0c9849c401f87521209711",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 245,
            "endLine": 249
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 246,
            "endLine": 250
          }
        ],
        "sample": "      \n      const inputBuffer = new Float32Array(480);\n      for (let i = 0; i < 480; i++) {\n        inputBuffer[i] = Math.sin(2 * Math.PI * i / 480);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5011d602dc2f03b032e88eeedd47cb26",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/AudioWorkletEngine.test.ts",
            "startLine": 263,
            "endLine": 267
          }
        ],
        "sample": "\n    it('should handle real-time stream processing', async () => {\n      const engine = new AudioWorkletEngine();\n      await engine.initialize();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea5ccd55d6e994b2db850501562b9904",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "\n  beforeEach(() => {\n    // Mock WASM module\n    mockModule = {\n      _rnnoise_create: vi.fn(() => 12345), // Mock state pointer...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "badf22d30f20749d40da204e5b60d7e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "  beforeEach(() => {\n    // Mock WASM module\n    mockModule = {\n      _rnnoise_create: vi.fn(() => 12345), // Mock state pointer\n      _rnnoise_destroy: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6f0d3398676c1503f8beeb912d93940",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "      }),\n      _malloc: vi.fn((size) => size), // Mock memory allocation\n      _free: vi.fn(),\n      HEAPF32: {\n        set: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "563c9c34a373e5df85fe6d4c66cc8852",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "      _malloc: vi.fn((size) => size), // Mock memory allocation\n      _free: vi.fn(),\n      HEAPF32: {\n        set: vi.fn(),\n        subarray: vi.fn(() => new Float32Array(480))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55f37bdba57c9f649f038aeb17bb571d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "      _free: vi.fn(),\n      HEAPF32: {\n        set: vi.fn(),\n        subarray: vi.fn(() => new Float32Array(480))\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8cfd2db810ce39cbc1903a624124692b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "      HEAPF32: {\n        set: vi.fn(),\n        subarray: vi.fn(() => new Float32Array(480))\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "000a0fdf89d841d64c04f3e3f4d86863",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "        set: vi.fn(),\n        subarray: vi.fn(() => new Float32Array(480))\n      }\n    };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4644b136d8db01d29a20834878b92f3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "    };\n\n    // Mock window for script loading fallback\n    mockWindow = {\n      createRNNWasmModule: vi.fn(() => Promise.resolve(mockModule))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e24a5e0e9f126632ed4d799efdde884",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "\n    // Mock window for script loading fallback\n    mockWindow = {\n      createRNNWasmModule: vi.fn(() => Promise.resolve(mockModule))\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6437f2b290f6330ef06c156c0fdf92ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "    // Mock window for script loading fallback\n    mockWindow = {\n      createRNNWasmModule: vi.fn(() => Promise.resolve(mockModule))\n    };\n    global.window = mockWindow as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3adac07093532001b1349af599f487b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "    mockWindow = {\n      createRNNWasmModule: vi.fn(() => Promise.resolve(mockModule))\n    };\n    global.window = mockWindow as any;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9a295dd5caa940dd95d5788d5a58b742",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 45,
            "endLine": 49
          }
        ],
        "sample": "      createRNNWasmModule: vi.fn(() => Promise.resolve(mockModule))\n    };\n    global.window = mockWindow as any;\n\n    // Mock document for script loading...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "886d3157d7ca928f297e2eaf68567386",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 71,
            "endLine": 75
          }
        ],
        "sample": "\n    engine = new RNNoiseEngine();\n  });\n\n  afterEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c17b097e2cc164802f9df7da6bd1bb95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "    engine = new RNNoiseEngine();\n  });\n\n  afterEach(() => {\n    vi.clearAllMocks();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75d30aea496791d46f531389500f1f45",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 123,
            "endLine": 127
          }
        ],
        "sample": "      // Mock successful dynamic import\n      vi.doMock('@jitsi/rnnoise-wasm', () => ({\n        default: vi.fn(() => Promise.resolve(mockModule))\n      }));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "925dc08ee03110d6d22558b65f098cd4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "      vi.doMock('@jitsi/rnnoise-wasm', () => ({\n        default: vi.fn(() => Promise.resolve(mockModule))\n      }));\n\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3e2c5621c3e98e811f0c0fbc779bd86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "      }));\n\n      await engine.initialize();\n\n      expect(engine.isInitialized).toBe(true);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e3a0268e469e4562648fb34b39767d5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "        initializeRNNoise: vi.fn(() => Promise.resolve({\n          module: mockModule,\n          state: 12345\n        }))\n      }));...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "abe4ec0d4687be6c614afe68684a6276",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 348,
            "endLine": 352
          }
        ],
        "sample": "\n      await engine.initialize();\n\n      expect(engine.isInitialized).toBe(true);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc71e925dbfaa90cb1d54a9cafd7a617",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 349,
            "endLine": 353
          }
        ],
        "sample": "      await engine.initialize();\n\n      expect(engine.isInitialized).toBe(true);\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7163c7f6337338865a67dcfbbb4c5648",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "\n      expect(engine.isInitialized).toBe(true);\n    });\n\n    it('should fallback to script tag when both imports fail', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "491d11625acda06a4539e80c95c89b83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "    });\n  });\n\n  describe('Audio Processing', () => {\n    beforeEach(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98bcc2215a8cb423dd64cb9843fe8e92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 170,
            "endLine": 174
          }
        ],
        "sample": "    beforeEach(async () => {\n      vi.doMock('@jitsi/rnnoise-wasm', () => ({\n        default: vi.fn(() => Promise.resolve(mockModule))\n      }));\n      await engine.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c68baf79b98c937d5c6dbaa9e89ab08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "      vi.doMock('@jitsi/rnnoise-wasm', () => ({\n        default: vi.fn(() => Promise.resolve(mockModule))\n      }));\n      await engine.initialize();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad266fa9ab3719379066fcdb9a632cf2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 135,
            "endLine": 139
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.critical.test.ts",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "        default: vi.fn(() => Promise.resolve(mockModule))\n      }));\n      await engine.initialize();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2b3ee97492be9cb817b5f7a278d65c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 4,
            "endLine": 8
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 5,
            "endLine": 9
          }
        ],
        "sample": "// Global mocks\nlet mockModule: any;\nlet mockWindow: any;\nlet mockDocument: any;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "20f76d28d3e77fdc6fb99913d257714b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 341,
            "endLine": 345
          }
        ],
        "sample": "      // First initialization\n      await engine.initialize();\n      expect(engine.isInitialized).toBe(true);\n      \n      // Clear mocks...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9932765ea26eae4492ef2a50848118bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "      \n      expect(mockModule._rnnoise_create).not.toHaveBeenCalled();\n    });\n\n    it('should check WebAssembly support', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c66f76d542723202b271265a5f9257cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 204,
            "endLine": 208
          }
        ],
        "sample": "      vi.mocked(require('@jitsi/rnnoise-wasm').default).mockRejectedValueOnce(new Error('Import failed'));\n      vi.mocked(require('../../engines/rnnoise-universal-loader').initializeRNNoise).mockReje...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fd40f99b842e992ba06cc0c248eea76a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 188,
            "endLine": 192
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('Failed to initialize RNNoise');\n    });\n\n    it('should handle missing createRNNWasmModule after script load', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "85e42c1086d1a99e08cf558c366a2ceb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 199,
            "endLine": 203
          }
        ],
        "sample": "      \n      await expect(engine.initialize()).rejects.toThrow('createRNNWasmModule not found on window');\n    });\n\n    it('should handle WASM loading errors with specific message', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2a2ec5cb1c535b033a79500571adf12",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 297,
            "endLine": 301
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 306,
            "endLine": 310
          }
        ],
        "sample": "      \n      engine.process(input);\n      \n      expect((engine as any).lastVad).toBe(0);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3fa013bc29bdb3eac15691df38fde42a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 344,
            "endLine": 348
          },
          {
            "file": "packages/murmuraba/src/__tests__/engines/RNNoiseEngine.test.ts",
            "startLine": 345,
            "endLine": 349
          }
        ],
        "sample": "      \n      // Cleanup\n      engine.cleanup();\n      expect(engine.isInitialized).toBe(false);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "beba1602d6f933797bb985c7464842cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "    \n    // Apply envelope for more natural speech\n    const globalEnvelope = Math.sin(Math.PI * i / samples);\n    data[i] = sample * globalEnvelope * 0.5;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18d3d67acd7160deef66446b53fe943a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/__tests__/helpers/audioTestHelpers.ts",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "  \n  if (noisePower === 0) return Infinity;\n  \n  return 10 * Math.log10(signalPower / noisePower);\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2cd792e0ea58b43405a204b78a11e0b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "\n      // Add chunks up to the limit - 1\n      for (let i = 0; i < MAX_CHUNKS_IN_MEMORY - 1; i++) {\n        chunks.push(createMockChunk(`chunk-${i}`, i * 8000));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "40041b3781ac94f6fc92406d2ffc2403",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "        chunks.push(createMockChunk(`chunk-${i}`, i * 8000));\n      }\n\n      const state = createMockRecordingState(chunks);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0102098d551423ac6bb2a820212b102",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "\n    it('should remove oldest chunks when exceeding limit', () => {\n      const chunks: ProcessedChunk[] = [];\n      const revokeChunkUrlsSpy = vi.spyOn(urlManager, 'revokeChunkUrls');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b860a21b48ebdddae554fd5f49321c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "\n      // Fill to MAX_CHUNKS_IN_MEMORY\n      for (let i = 0; i < MAX_CHUNKS_IN_MEMORY; i++) {\n        chunks.push(createMockChunk(`chunk-${i}`, i * 8000));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "093c17790b9a97b44b339467bd171793",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "\n      // Add one more chunk to trigger cleanup\n      const newChunk = createMockChunk('overflow-chunk', MAX_CHUNKS_IN_MEMORY * 8000);\n      const result = chunkManager.addChunk(state, newChunk);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dbacf7d162cdaf568fafde243aa36643",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "\n      // Should have revoked URLs for removed chunks\n      const removedCount = MAX_CHUNKS_IN_MEMORY + 1 - CHUNKS_TO_KEEP_ON_OVERFLOW;\n      expect(revokeChunkUrlsSpy).toHaveBeenCalledTimes(removedCo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b705aac4b756ba43eb02b80c05963bde",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "\n    it('should handle multiple overflow scenarios', () => {\n      let state = createMockRecordingState();\n      let overflowCount = 0;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ad91b9291363823d94190703d5f8d43",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "        \n        // Chunks should never exceed MAX_CHUNKS_IN_MEMORY\n        expect(state.chunks.length).toBeLessThanOrEqual(MAX_CHUNKS_IN_MEMORY);\n      }\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e94fdf7aaf9a2fd0cf75e34f5e73c1b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "\n    it('should log warning when removing chunks', () => {\n      const consoleWarnSpy = vi.spyOn(console, 'warn').mockImplementation();\n      const chunks: ProcessedChunk[] = [];\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4f96f5a6f93deef6077e6d3fb09608ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "\n      // Fill to limit\n      for (let i = 0; i < MAX_CHUNKS_IN_MEMORY; i++) {\n        chunks.push(createMockChunk(`chunk-${i}`));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4db7c11fd8964cfdf8386b984d4938ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 192,
            "endLine": 196
          }
        ],
        "sample": "      const chunks = [\n        createMockChunk('chunk-1'),\n        createMockChunk('chunk-2'),\n        createMockChunk('chunk-3'),\n      ];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0d4a779d5a6273774ee17f490554270e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 193,
            "endLine": 197
          }
        ],
        "sample": "        createMockChunk('chunk-1'),\n        createMockChunk('chunk-2'),\n        createMockChunk('chunk-3'),\n      ];\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9b24c6d0c2880ec4819de00408f5734",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 238,
            "endLine": 242
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 239,
            "endLine": 243
          }
        ],
        "sample": "\n  describe('Performance', () => {\n    it('should handle large chunk operations efficiently', () => {\n      const chunks: ProcessedChunk[] = [];\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f0c621bbc91e1c35e1580f93e85c0da8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 243,
            "endLine": 247
          }
        ],
        "sample": "      \n      // Create many chunks\n      for (let i = 0; i < CHUNKS_TO_KEEP_ON_OVERFLOW; i++) {\n        chunks.push(createMockChunk(`chunk-${i}`));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "08baf1664b957237e5e7a4d71fd6835c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 250,
            "endLine": 254
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/chunkManager.test.ts",
            "startLine": 251,
            "endLine": 255
          }
        ],
        "sample": "      // Perform multiple operations\n      let result = chunks;\n      for (let i = 0; i < 100; i++) {\n        result = chunkManager.toggleChunkPlayback(result, `chunk-${i % CHUNKS_TO_KEEP_ON_OVERFLOW}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7013fe928e3d05471a83f8e018e2433",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "// Mock dependencies\nvi.mock('../../../api');\nvi.mock('../../../hooks/murmuraba-engine/logger');\n\ndescribe('recordingFunctions', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52d4e758d3f6d56b53b7b7b8073692be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 150,
            "endLine": 154
          }
        ],
        "sample": "      const functions = createRecordingFunctions({\n        isInitialized: false,\n        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,\n        currentStream: ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3f6941e14fef6b29c1c05d3fee1bc90c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 151,
            "endLine": 155
          }
        ],
        "sample": "        isInitialized: false,\n        recordingState: mockRecordingState,\n        recordingStateHook: mockRecordingStateHook,\n        currentStream: null,\n        originalStream: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0f5347eeacd3f826f4524f0c030ce41a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false\n        }\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "427016dd588f3b49dfdda5371c4072ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 334,
            "endLine": 338
          }
        ],
        "sample": "        recordingManager: mockRecordingManager,\n        initialize: mockInitialize\n      });\n\n      functions.stopRecording();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aee80b548fe5d5d8a543240a0dc13c28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 303,
            "endLine": 307
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 335,
            "endLine": 339
          }
        ],
        "sample": "        initialize: mockInitialize\n      });\n\n      functions.stopRecording();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "709b1716fbb5be407f2cfbda9f9cab74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 307,
            "endLine": 311
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 428,
            "endLine": 432
          }
        ],
        "sample": "\n      expect(mockRecordingManager.stopRecording).toHaveBeenCalled();\n      expect(mockRecordingStateHook.stopRecording).toHaveBeenCalled();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "32991252975c9d0eb30fa9f94bf0e252",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 339,
            "endLine": 343
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingFunctions.test.ts",
            "startLine": 340,
            "endLine": 344
          }
        ],
        "sample": "\n      // Verify tracks were stopped\n      expect(currentTrackStop).toHaveBeenCalled();\n      expect(originalTrackStop).toHaveBeenCalled();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "62454eb0302c6d6544b2a6af3079c062",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "\n  beforeEach(() => {\n    urlManager = new URLManager();\n    recordingManager = new RecordingManager(urlManager);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2ce39e1bb3898fbad8c0587fdff649f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "    // Mock console methods\n    consoleWarnSpy = vi.spyOn(console, 'warn').mockImplementation();\n    consoleErrorSpy = vi.spyOn(console, 'error').mockImplementation();\n    consoleLogSpy = vi.spyOn(con...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0ed067294f8772380133753abd21ca6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 416,
            "endLine": 420
          }
        ],
        "sample": "      (global.MediaRecorder as any) = vi.fn().mockImplementation((stream, options) => {\n        const recorder = {\n          start: vi.fn(),\n          stop: vi.fn(),\n          state: 'inactive',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e9328c822a135fd3fa97cd423e4e6ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 419,
            "endLine": 423
          }
        ],
        "sample": "          stop: vi.fn(),\n          state: 'inactive',\n          ondataavailable: null,\n          onstop: null,\n          onerror: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "63239ba45f90a13cba54ab8611a58d7d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 699,
            "endLine": 703
          }
        ],
        "sample": "        });\n        \n        recorder.stop = vi.fn(() => {\n          recorder.state = 'inactive';\n          if (recorder.onstop) recorder.onstop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d232e89fb4b6e8d319bb9404017e8d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 700,
            "endLine": 704
          }
        ],
        "sample": "        \n        recorder.stop = vi.fn(() => {\n          recorder.state = 'inactive';\n          if (recorder.onstop) recorder.onstop();\n        });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d246bfd34e2afeaff7f72cc35877bd8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 701,
            "endLine": 705
          }
        ],
        "sample": "        recorder.stop = vi.fn(() => {\n          recorder.state = 'inactive';\n          if (recorder.onstop) recorder.onstop();\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81b6d2ebc8a1ee01d40f464904acb027",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "        \n        mediaRecorderInstances.push(recorder);\n        return recorder;\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d24d342bcb63bf9bdeb0b437fa78cfc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 242,
            "endLine": 246
          }
        ],
        "sample": "        onChunkProcessed\n      );\n      \n      const processedRecorder = mediaRecorderInstances[0];\n      const originalRecorder = mediaRecorderInstances[1];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ac45d2d9d7bbe664fdc4f2b51eff7ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 243,
            "endLine": 247
          }
        ],
        "sample": "      );\n      \n      const processedRecorder = mediaRecorderInstances[0];\n      const originalRecorder = mediaRecorderInstances[1];\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a643601ed6cb552a1e799506d536fc3b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 244,
            "endLine": 248
          }
        ],
        "sample": "      \n      const processedRecorder = mediaRecorderInstances[0];\n      const originalRecorder = mediaRecorderInstances[1];\n      \n      // Simulate valid data...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "be2929d2f57aa8ba36e4674a045f2c9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "      const processedRecorder = mediaRecorderInstances[0];\n      const originalRecorder = mediaRecorderInstances[1];\n      \n      // Simulate valid data\n      if (processedRecorder.ondataavailable) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cab0563aa7776b46782bd605c43036c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 246,
            "endLine": 250
          }
        ],
        "sample": "      const originalRecorder = mediaRecorderInstances[1];\n      \n      // Simulate valid data\n      if (processedRecorder.ondataavailable) {\n        processedRecorder.ondataavailable({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6af611d90889e33d9b8ac0bf43bb72ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "        });\n      }\n      \n      if (originalRecorder.ondataavailable) {\n        originalRecorder.ondataavailable({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2998f6ee199c66f4ef7e95ec207cb8c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 284,
            "endLine": 288
          }
        ],
        "sample": "      );\n      \n      const processedRecorder = mediaRecorderInstances[0];\n      \n      // Simulate invalid data (too small)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ca01047f59ffdf3abe7e26ae0a0a0a85",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 205,
            "endLine": 209
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 451,
            "endLine": 455
          }
        ],
        "sample": "        });\n      }\n      \n      expect(consoleWarnSpy).toHaveBeenCalledWith(\n        expect.stringContaining('Invalid blob size detected'),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4cb395b8e829e81d1a29370bc75b9f0e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 206,
            "endLine": 210
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 452,
            "endLine": 456
          }
        ],
        "sample": "      }\n      \n      expect(consoleWarnSpy).toHaveBeenCalledWith(\n        expect.stringContaining('Invalid blob size detected'),\n        expect.objectContaining({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50ff4c328b3fdf58506b5bffbed1aa7d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 661,
            "endLine": 665
          }
        ],
        "sample": "          data: new Blob(['x'.repeat(500)], { type: 'audio/webm' })\n        });\n      }\n      \n      // Trigger stop...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "77ac76796bfd96d49f9ea45b17c98df7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 311,
            "endLine": 315
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "        return recorderInstance;\n      });\n      \n      await recordingManager.startCycle(mockStream, mockStream, 8000, vi.fn());\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c563a0467d6d2b4dc15e770db4be2a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 327,
            "endLine": 331
          }
        ],
        "sample": "      \n      await recordingManager.startCycle(mockStream, mockStream, 1000, onChunkProcessed);\n      \n      recordingManager.stopRecording();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "977b30ee3cf5afa1f5fbf8ea4c1fe52d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 332,
            "endLine": 336
          }
        ],
        "sample": "      // Advance time to see if new cycles start\n      vi.advanceTimersByTime(5000);\n      \n      // Should only have initial recorders, no new ones\n      expect(MediaRecorder).toHaveBeenCalledTimes(2...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efbf6765cc409fe7cfee189da8aafe4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 345,
            "endLine": 349
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 367,
            "endLine": 371
          }
        ],
        "sample": "      \n      (global.MediaRecorder as any) = vi.fn().mockImplementation(() => {\n        recorderInstance = {\n          start: vi.fn(() => { recorderInstance.state = 'recording'; }),\n          pause: v...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4947ffee45cb8874e4705b907d7cddee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 428,
            "endLine": 432
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 552,
            "endLine": 556
          }
        ],
        "sample": "        } else {\n          originalRecorderInstance = recorder;\n        }\n        \n        return recorder;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ab1b000cd5c4c1dfd2eeaeff2332c99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 429,
            "endLine": 433
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 553,
            "endLine": 557
          }
        ],
        "sample": "          originalRecorderInstance = recorder;\n        }\n        \n        return recorder;\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9d3d895a06c3a6ed19b789ebf820d50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 434,
            "endLine": 438
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 435,
            "endLine": 439
          }
        ],
        "sample": "\n      const processedStream = { getTracks: () => [] } as any;\n      const originalStream = { getTracks: () => [] } as any;\n      const onChunkProcessed = vi.fn();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b926d5abd0bb76648bef93acfdf5f437",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 445,
            "endLine": 449
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 569,
            "endLine": 573
          }
        ],
        "sample": "      );\n\n      // Simulate empty blob from MediaRecorder\n      if (mediaRecorderInstance?.ondataavailable) {\n        mediaRecorderInstance.ondataavailable({ ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f1b4e00c7952f1a2d1d3fdaa0caa49c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 446,
            "endLine": 450
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 570,
            "endLine": 574
          }
        ],
        "sample": "\n      // Simulate empty blob from MediaRecorder\n      if (mediaRecorderInstance?.ondataavailable) {\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob([], { type: 'audio/webm' ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f9755db81be0fd642e4494edafa0082",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 447,
            "endLine": 451
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 571,
            "endLine": 575
          }
        ],
        "sample": "      // Simulate empty blob from MediaRecorder\n      if (mediaRecorderInstance?.ondataavailable) {\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob([], { type: 'audio/webm' }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f89dbcc0ad5460f7e371f2398d83be1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 448,
            "endLine": 452
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 572,
            "endLine": 576
          }
        ],
        "sample": "      if (mediaRecorderInstance?.ondataavailable) {\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob([], { type: 'audio/webm' }) \n        });\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c928c4a9b3865f5c103ff5a7fd0d5f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 480,
            "endLine": 484
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 546,
            "endLine": 550
          }
        ],
        "sample": "        if (stream === processedStream) {\n          mediaRecorderInstance = recorder;\n          // Capture onstop callback\n          Object.defineProperty(recorder, 'onstop', {\n            set: (callb...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f3777221a0923deed119af8cce2523a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 482,
            "endLine": 486
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 483,
            "endLine": 487
          }
        ],
        "sample": "          // Capture onstop callback\n          Object.defineProperty(recorder, 'onstop', {\n            set: (callback) => { onStopCallback = callback; }\n          });\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2591522e622b2cc55d83896d0b8d5886",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 502,
            "endLine": 506
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 641,
            "endLine": 645
          }
        ],
        "sample": "\n      // Send various sized blobs\n      if (mediaRecorderInstance?.ondataavailable) {\n        // Too small - should be rejected\n        mediaRecorderInstance.ondataavailable({ ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3140475d745ded1bc75504e1fb3f1ea4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 503,
            "endLine": 507
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 642,
            "endLine": 646
          }
        ],
        "sample": "      // Send various sized blobs\n      if (mediaRecorderInstance?.ondataavailable) {\n        // Too small - should be rejected\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fcfe2119e52192db990e20636e5476aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 504,
            "endLine": 508
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 643,
            "endLine": 647
          }
        ],
        "sample": "      if (mediaRecorderInstance?.ondataavailable) {\n        // Too small - should be rejected\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob(['x'], { type: 'audio/webm' }) /...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "856fd72545b45f658898e6fbb2f10b77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 510,
            "endLine": 514
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 511,
            "endLine": 515
          }
        ],
        "sample": "        // Valid size - should be accepted\n        mediaRecorderInstance.ondataavailable({ \n          data: new Blob(['x'.repeat(200)], { type: 'audio/webm' }) // 200 bytes\n        });\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c918ac29326eeee8c21a69235a8397a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 539,
            "endLine": 543
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 605,
            "endLine": 609
          }
        ],
        "sample": "            }\n          }),\n          state: 'recording',\n          ondataavailable: null,\n          onstop: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70c4a0471acfefd78a3b6f5c685aa215",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 545,
            "endLine": 549
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 611,
            "endLine": 615
          }
        ],
        "sample": "        };\n        \n        if (stream === processedStream) {\n          mediaRecorderInstance = recorder;\n          Object.defineProperty(recorder, 'onstop', {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27429e940e9f5c8642c6b4ba302dd72c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 664,
            "endLine": 668
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 665,
            "endLine": 669
          }
        ],
        "sample": "\n      // Trigger processing\n      mediaRecorderInstance.state = 'inactive';\n      if (processedOnStop) processedOnStop();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f8c64a895f9cefe8ca637e0335c74aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 686,
            "endLine": 690
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 747,
            "endLine": 751
          }
        ],
        "sample": "      \n      // Mock MediaRecorder más completo\n      (global.MediaRecorder as any) = vi.fn().mockImplementation((stream) => {\n        const recorder = {\n          start: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a55dc43ec43cbedc0e2217657ac4db3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 687,
            "endLine": 691
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 748,
            "endLine": 752
          }
        ],
        "sample": "      // Mock MediaRecorder más completo\n      (global.MediaRecorder as any) = vi.fn().mockImplementation((stream) => {\n        const recorder = {\n          start: vi.fn(),\n          stop: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1773985784ae8af34aebb38cf07b7959",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 688,
            "endLine": 692
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 749,
            "endLine": 753
          }
        ],
        "sample": "      (global.MediaRecorder as any) = vi.fn().mockImplementation((stream) => {\n        const recorder = {\n          start: vi.fn(),\n          stop: vi.fn(),\n          state: 'inactive',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3535968b35d795f047a072629912c573",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 693,
            "endLine": 697
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 754,
            "endLine": 758
          }
        ],
        "sample": "          ondataavailable: null,\n          onstop: null,\n        };\n        \n        recorder.start = vi.fn(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a601e5d0e4c1e969732acc837d05e510",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 694,
            "endLine": 698
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 755,
            "endLine": 759
          }
        ],
        "sample": "          onstop: null,\n        };\n        \n        recorder.start = vi.fn(() => {\n          recorder.state = 'recording';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ac3a48831f77f74b09833b7d0ff98ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 710,
            "endLine": 714
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 775,
            "endLine": 779
          }
        ],
        "sample": "        return recorder;\n      });\n      \n      // Iniciar grabación\n      await recordingManager.startCycle(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "92ecd646ed4d6ec1bb1fa6313429c5ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 711,
            "endLine": 715
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 776,
            "endLine": 780
          }
        ],
        "sample": "      });\n      \n      // Iniciar grabación\n      await recordingManager.startCycle(\n        processedStream,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9c314a4934fbba3275e4a19e7782ef15",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 724,
            "endLine": 728
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 725,
            "endLine": 729
          }
        ],
        "sample": "      // Stop recording inmediatamente\n      recordingManager.stopRecording();\n      \n      // Avanzar tiempo para verificar que no se inician nuevos ciclos\n      vi.advanceTimersByTime(10000); // 10 ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "178dc8724458db3f74bf854973d65f2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 786,
            "endLine": 790
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/murmuraba-engine/recordingManager.test.ts",
            "startLine": 787,
            "endLine": 791
          }
        ],
        "sample": "      // Simular 3 ciclos completos\n      for (let i = 0; i < 3; i++) {\n        vi.advanceTimersByTime(2000); // Duración del chunk\n        vi.advanceTimersByTime(500);  // Delay entre ciclos\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d15f9150c7e6bf57e1baadf345de3c7c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "      disconnect: vi.fn(),\n      onaudioprocess: null,\n      bufferSize: 4096,\n      numberOfInputs: 1,\n      numberOfOutputs: 1...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "336f20285ff19d5f6cbe8cd2f358b9d6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "      onaudioprocess: null,\n      bufferSize: 4096,\n      numberOfInputs: 1,\n      numberOfOutputs: 1\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f27658552f615b64d6f03a91203914eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "      bufferSize: 4096,\n      numberOfInputs: 1,\n      numberOfOutputs: 1\n    };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "15143a7f519eedea71330924f36e7b2f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "\n    mockMediaStreamDestination = {\n      stream: { id: 'mock-stream' }\n    };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b03b4d11ef322ac6731d8276fb3051e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "\n    // Create a mock AudioContext instance\n    mockAudioContext = {\n      state: 'running',\n      sampleRate: 48000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51e0e2bbfa4fa28feff48d7a84b46ff2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "      suspend: vi.fn().mockResolvedValue(undefined),\n      resume: vi.fn().mockResolvedValue(undefined),\n      addEventListener: vi.fn(),\n      removeEventListener: vi.fn(),\n      dispatchEvent: vi.fn...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c3f2c1ae83dd1188acab5903111e9c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "      resume: vi.fn().mockResolvedValue(undefined),\n      addEventListener: vi.fn(),\n      removeEventListener: vi.fn(),\n      dispatchEvent: vi.fn()\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "482f3474d891d0bc7d3c81fd19967f9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "      \n      // Start initialization (but don't await)\n      act(() => {\n        result.current.initializeAudioEngine();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05c09a9fd49ff29e27c2e9809ff6dc9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 464,
            "endLine": 468
          }
        ],
        "sample": "      inputBuffer.fill(0.5);\n      const outputBuffer = new Float32Array(4096);\n      \n      // Mock the engine process to return input unchanged\n      mockEngine.process = vi.fn().mockImplementation(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3a58ec778b4df331287decad9b1e8187",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 266,
            "endLine": 270
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 297,
            "endLine": 301
          }
        ],
        "sample": "        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });\n      \n      // Should have attenuated the output\n      const avgOutput = outputBuffer.reduce((a, b) => a + Math.abs(b), 0) / output...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef008137002cf1dc09a92761d5cf7ae7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 298,
            "endLine": 302
          }
        ],
        "sample": "      });\n      \n      // Should have attenuated the output\n      const avgOutput = outputBuffer.reduce((a, b) => a + Math.abs(b), 0) / outputBuffer.length;\n      const avgInput = inputBuffer.reduce((...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fe91f3286783532dae4654576ad4c0ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 269,
            "endLine": 273
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "      // Should have attenuated the output\n      const avgOutput = outputBuffer.reduce((a, b) => a + Math.abs(b), 0) / outputBuffer.length;\n      const avgInput = inputBuffer.reduce((a, b) => a + Math...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7c6adabc400c372e10c03c488c50991d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 312,
            "endLine": 316
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 459,
            "endLine": 463
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initializeAudioEngine();\n      });\n      \n      const inputBuffer = new Float32Array(4096);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10158daf9ad699e6b31fa151869d01b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 324,
            "endLine": 328
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 503,
            "endLine": 507
          }
        ],
        "sample": "      });\n      \n      const mockEvent = {\n        inputBuffer: { getChannelData: () => inputBuffer },\n        outputBuffer: { getChannelData: () => outputBuffer }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "48d85f6a8baf66b068fb12d843c2d35f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 345,
            "endLine": 349
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 346,
            "endLine": 350
          }
        ],
        "sample": "      \n      // Mock Math.random to always return low value to trigger logging\n      const originalRandom = Math.random;\n      Math.random = vi.fn().mockReturnValue(0.01);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6fe282636491bc05c823ca3f78f6352",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 407,
            "endLine": 411
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 442,
            "endLine": 446
          }
        ],
        "sample": "      \n      const mockStream = { id: 'test-stream' } as any;\n      \n      await act(async () => {\n        await result.current.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a2e9a7a6173d774d87ec1859893d030",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 408,
            "endLine": 412
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 443,
            "endLine": 447
          }
        ],
        "sample": "      const mockStream = { id: 'test-stream' } as any;\n      \n      await act(async () => {\n        await result.current.processStream(mockStream);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8700a9b6643a9d32c1e2b4aba989f245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 475,
            "endLine": 479
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 510,
            "endLine": 514
          }
        ],
        "sample": "      act(() => {\n        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });\n      \n      const metrics = result.current.getMetrics();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7c84dd74db07faea9dea1cb88507e83e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 476,
            "endLine": 480
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 511,
            "endLine": 515
          }
        ],
        "sample": "        (mockProcessor.onaudioprocess as any)(mockEvent);\n      });\n      \n      const metrics = result.current.getMetrics();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "51b89e85a2a19da085bcc24fcc16de1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 492,
            "endLine": 496
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 525,
            "endLine": 529
          }
        ],
        "sample": "      });\n      \n      // Process some audio with reduction\n      const inputBuffer = new Float32Array(4096);\n      inputBuffer.fill(0.5);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ac679a14a3eedae9a3b7a97bea6dd6e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 637,
            "endLine": 641
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "      \n      // Should process only complete frames (480 samples)\n      expect(mockEngine.process).toHaveBeenCalledTimes(1);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c96a30e0951fc4d9be13d4b8f062be4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 668,
            "endLine": 672
          },
          {
            "file": "packages/murmuraba/src/__tests__/hooks/useAudioEngine.test.ts",
            "startLine": 669,
            "endLine": 673
          }
        ],
        "sample": "\n// Helper function test\ndescribe('calculateRMS', () => {\n  it('should calculate RMS correctly', () => {\n    // The function is not exported, but we can test it indirectly...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "127b87c4e707c1e718cc48c0d0052c02",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "import '@testing-library/jest-dom/vitest'\nimport React from 'react'\n// AudioDemo component doesn't exist in the library package\n// import AudioDemo, { AudioDemoProps } from '../../../../../components/...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f6e867da0ab5e164ae4193786becd5dd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "    // Mock fetch for audio file\n    global.fetch = vi.fn().mockResolvedValue({\n      ok: true,\n      arrayBuffer: vi.fn().mockResolvedValue(new ArrayBuffer(1000))\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1de43222ee3401ee0eedd2167c9505da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 50,
            "endLine": 54
          }
        ],
        "sample": "    \n    // Mock console - CAPTURE calls instead of silencing them\n    vi.spyOn(console, 'log')\n    vi.spyOn(console, 'error')\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2d57e3fae498f7cf420725b55eb7c07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 54,
            "endLine": 58
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "\n  describe('Engine Initialization State', () => {\n    it('should handle uninitialized engine state on mount', async () => {\n      // Based on log: \"Engine not ready (uninitialized), waiting...\"\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "44c7ee931d972896976ad11d2affebcf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "\n      render(<AudioDemo {...defaultProps} />)\n\n      // Verify engine status is checked\n      expect(mockGetEngineStatus).toHaveBeenCalled()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "84905d083c3ec85033f7abbf17638eba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "      // Verify engine status is checked\n      expect(mockGetEngineStatus).toHaveBeenCalled()\n\n      // Verify status is displayed\n      expect(screen.getByTestId('engine-status')).toHaveTextContent('...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "15de2f09306e9c7c0089528f7f19928e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 70,
            "endLine": 74
          }
        ],
        "sample": "      // The component only updates UI state, no console.log for this scenario\n      expect(mockGetEngineStatus).toHaveBeenCalled()\n    })\n\n    it('should periodically check engine status', async () =...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "69388cae08ec64bd200b074d57fcd04c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "\n      render(<AudioDemo {...defaultProps} />)\n\n      // Initial call on mount\n      expect(mockGetEngineStatus).toHaveBeenCalledWith()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0f7b05abe51abd2661e35acf37f9a254",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "      // Verify continuous polling  \n      const initialCalls = mockGetEngineStatus.mock.calls.length\n      await new Promise(resolve => setTimeout(resolve, 600))\n      expect(mockGetEngineStatus.mock...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "01d28e43230c7cf918588d4ce1aa97f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 96,
            "endLine": 100
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "\n      render(<AudioDemo {...defaultProps} />)\n\n      // Wait to ensure no processing attempts\n      await new Promise(resolve => setTimeout(resolve, 1000))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7078ac22717ad4abc1e23bcb7f94186a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "\n      expect(mockProcessFile).not.toHaveBeenCalled()\n      expect(mockOnProcessComplete).not.toHaveBeenCalled()\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dae9ce9d9dcb28544022810c2c4036c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 305,
            "endLine": 309
          }
        ],
        "sample": "      mockProcessFile.mockResolvedValue(new ArrayBuffer(1000))\n\n      const { unmount } = render(<AudioDemo {...defaultProps} />)\n\n      // Component should be mounted...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "42a7ffabe8949b5192d00ebb4b1dab1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "\n      const { unmount } = render(<AudioDemo {...defaultProps} />)\n\n      // Component should be mounted\n      expect(screen.getByTestId('audio-demo')).toBeInTheDocument()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "17081d95083efb815853ff546ef7ffbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 127,
            "endLine": 131
          }
        ],
        "sample": "      // Verify cleanup (URL revocation)\n      expect(URL.revokeObjectURL).toHaveBeenCalled()\n    })\n\n    it('should not cause unnecessary re-renders', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc10bc3b297f0b46aa2599234fe8ddb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 142,
            "endLine": 146
          }
        ],
        "sample": "\n      render(<TestWrapper />)\n\n      // Initial render\n      expect(renderCount).toBe(1)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f0f45bea2f474b70f8d3baddf148885",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "      // Initial render\n      expect(renderCount).toBe(1)\n\n      // Wait a bit to ensure no extra renders\n      await new Promise(resolve => setTimeout(resolve, 100))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f77f5119d73e93fe7cc32a77792f665",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 121,
            "endLine": 125
          }
        ],
        "sample": "\n      // Wait a bit to ensure no extra renders\n      await new Promise(resolve => setTimeout(resolve, 100))\n\n      // Should not have re-rendered unnecessarily...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7846489c70a2f19c3619cc7033d64d48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 154,
            "endLine": 158
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "\n  describe('Auto-processing Behavior', () => {\n    it('should wait for engine ready state before auto-processing', async () => {\n      // Start with uninitialized\n      mockGetEngineStatus.mockReturn...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27d8b021153fe468d4b31910bf36bbeb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 160,
            "endLine": 164
          }
        ],
        "sample": "\n      render(<AudioDemo {...defaultProps} />)\n\n      // No processing should occur\n      expect(mockProcessFile).not.toHaveBeenCalled()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3eadcbc8d70fcfb8d975ec9a7cfa59b4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "      // No processing should occur\n      expect(mockProcessFile).not.toHaveBeenCalled()\n\n      // Simulate engine becoming ready\n      mockGetEngineStatus.mockReturnValue('ready')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a4a8567801dcd7b7b967005aaf36cebf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "      // Wait for status check and auto-process\n      await waitFor(() => {\n        expect(mockProcessFile).toHaveBeenCalled()\n      }, { timeout: 2000 })\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "69fb88149fe2eae289a82802c08d5fea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "\n    it('should handle engine state transitions correctly', async () => {\n      // Simulate real engine state transitions\n      const stateSequence = ['uninitialized', 'initializing', 'ready']\n      l...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "72fb32d8fc72eaff35e3de3d98bb3666",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 176,
            "endLine": 180
          }
        ],
        "sample": "      // Simulate real engine state transitions\n      const stateSequence = ['uninitialized', 'initializing', 'ready']\n      let stateIndex = 0\n      \n      mockGetEngineStatus.mockImplementation(() =...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e2a6775e30e74d2b8246a82253b6a6b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "      \n      mockGetEngineStatus.mockImplementation(() => stateSequence[stateIndex])\n\n      render(<AudioDemo {...defaultProps} />)\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a7fd65a9c636fb1e2524bba2b9b1297a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "\n      render(<AudioDemo {...defaultProps} />)\n\n      // Check initial state\n      expect(screen.getByTestId('engine-status')).toHaveTextContent('uninitialized')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd8e557af077f0e60c13cdfe2bb7f735",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 187,
            "endLine": 191
          }
        ],
        "sample": "      // Advance to initializing\n      stateIndex = 1\n      await waitFor(() => {\n        expect(screen.getByTestId('engine-status')).toHaveTextContent('initializing')\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8bc796482053b80bc5fa7a11168ea7cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 193,
            "endLine": 197
          }
        ],
        "sample": "      // Advance to ready\n      stateIndex = 2\n      await waitFor(() => {\n        expect(screen.getByTestId('engine-status')).toHaveTextContent('ready')\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf5c87aaebde29d90b315f80aba0e2fc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 241,
            "endLine": 245
          }
        ],
        "sample": "      render(<AudioDemo {...defaultProps} />)\n\n      // Button should be disabled\n      const processButton = screen.getByText('🔄 Probar Audio Demo')\n      expect(processButton).toBeDisabled()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "366cbba166b4fd4db4f03eec2bc91134",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 219,
            "endLine": 223
          }
        ],
        "sample": "\n    it('should call onError when attempting to process with uninitialized engine', async () => {\n      mockGetEngineStatus.mockReturnValue('uninitialized')\n\n      render(<AudioDemo {...defaultProps} ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fdb2f1d4a0f349904596c53b96a43a87",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 232,
            "endLine": 236
          }
        ],
        "sample": "        // No error should be called since disabled button prevents click\n        expect(mockOnError).not.toHaveBeenCalled()\n      })\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "25c856ef1ced6aa8ff14d604bd2dd7d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 236,
            "endLine": 240
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 237,
            "endLine": 241
          }
        ],
        "sample": "\n  describe('UI State Synchronization', () => {\n    it('should disable process button when engine is not ready', () => {\n      // Based on observed behavior\n      mockGetEngineStatus.mockReturnValue('...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c42285c24b951809d3bba6f6e5848f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 247,
            "endLine": 251
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 248,
            "endLine": 252
          }
        ],
        "sample": "\n    it('should enable process button only when engine is ready', async () => {\n      mockGetEngineStatus.mockReturnValue('ready')\n\n      render(<AudioDemo {...defaultProps} />)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0cf23e795dc31452b7e339b142b2f9db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 268,
            "endLine": 272
          }
        ],
        "sample": "\n      // Test each state individually with fresh render\n      Object.entries(stateClassMap).forEach(([state, expectedClass]) => {\n        mockGetEngineStatus.mockReturnValue(state)\n        const { un...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2019d5e05520b21035ac05e5b8adc5b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 285,
            "endLine": 289
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 286,
            "endLine": 290
          }
        ],
        "sample": "\n      const { unmount } = render(<AudioDemo {...defaultProps} />)\n\n      // Let it run for a bit\n      await new Promise(resolve => setTimeout(resolve, 1500))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e57d95ac846ad8f82ab4e52e6668af9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 288,
            "endLine": 292
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 289,
            "endLine": 293
          }
        ],
        "sample": "      // Let it run for a bit\n      await new Promise(resolve => setTimeout(resolve, 1500))\n\n      // Count calls before unmount\n      const callsBeforeUnmount = mockGetEngineStatus.mock.calls.length...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "425e9f1fd28d8f6ade3c2e77916ac0eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 294,
            "endLine": 298
          }
        ],
        "sample": "\n      unmount()\n\n      // Wait to ensure no more calls after unmount\n      await new Promise(resolve => setTimeout(resolve, 600))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9df850907104311d22de9acbda95ca75",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 313,
            "endLine": 317
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/AudioDemo.browser-logs.test.tsx",
            "startLine": 314,
            "endLine": 318
          }
        ],
        "sample": "\n      // Should have created URLs (2: original + processed)\n      await waitFor(() => {\n        expect(URL.createObjectURL).toHaveBeenCalledTimes(2)\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28b393437aaa430517f0ee03bf084428",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "import { useMurmubaraEngine } from '../../hooks/murmuraba-engine';\nimport * as api from '../../api';\n\nvi.mock('../../api');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "858e18ab9a7211108abfb8facf111514",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "    \n    // Create real-ish MediaStream mocks\n    mockStream = new MediaStream();\n    mockProcessedStream = new MediaStream();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b9bbb5db1725b7d966c1913ece53fde",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 31,
            "endLine": 35
          }
        ],
        "sample": "    });\n    (api.destroyEngine as any).mockResolvedValue(undefined);\n    (api.onMetricsUpdate as any).mockReturnValue(() => {});\n    (api.getDiagnostics as any).mockReturnValue({\n      wasmLoaded: tru...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "76fbba76b0baef3f968563fb988b77f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "    (api.destroyEngine as any).mockResolvedValue(undefined);\n    (api.onMetricsUpdate as any).mockReturnValue(() => {});\n    (api.getDiagnostics as any).mockReturnValue({\n      wasmLoaded: true,\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc17d1f36a17469bddc1078f0a98ad99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "    (api.onMetricsUpdate as any).mockReturnValue(() => {});\n    (api.getDiagnostics as any).mockReturnValue({\n      wasmLoaded: true,\n      audioContextState: 'running',\n      processingLatency: 15,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c11c67e2f3bec0ce5fe3ba1c255eb95d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "    (api.getDiagnostics as any).mockReturnValue({\n      wasmLoaded: true,\n      audioContextState: 'running',\n      processingLatency: 15,\n      memoryUsage: 5000000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28581c04b4d42f1613d2d24681c2a479",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "      wasmLoaded: true,\n      audioContextState: 'running',\n      processingLatency: 15,\n      memoryUsage: 5000000,\n      streamCount: 1,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19054d43123147b95f0e253409da465a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "      audioContextState: 'running',\n      processingLatency: 15,\n      memoryUsage: 5000000,\n      streamCount: 1,\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dff793bd6c5e705f5c9591e4a99ef4e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "      processingLatency: 15,\n      memoryUsage: 5000000,\n      streamCount: 1,\n    });\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8a4847b396e74dc0b820380a1dbed0ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 276,
            "endLine": 280
          }
        ],
        "sample": "      });\n\n      // 3. Simulate chunk recording\n      const mockRecorder = (global.MediaRecorder as any).mock.results[0].value;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e2b5c7f6a06375c337df843b4f32290",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "\n      // 3. Simulate chunk recording\n      const mockRecorder = (global.MediaRecorder as any).mock.results[0].value;\n      \n      await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd84677cbef89b1824de9a634324c7c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "\n      await waitFor(() => {\n        expect(result.current.recordingState.chunks.length).toBeGreaterThan(0);\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "900434ead265e97d1019a2968a11e326",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 409,
            "endLine": 413
          }
        ],
        "sample": "      act(() => {\n        result.current.stopRecording();\n      });\n\n      expect(result.current.recordingState.isRecording).toBe(false);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db40d6117d6473b7fe940a79c22e3089",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "\n      const exportedBlob = await result.current.exportChunkAsWav(chunk.id, 'processed');\n      expect(exportedBlob).toBeDefined();\n      expect(exportedBlob.type).toBe('audio/wav');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1490b690cf01c8ca6aea9a494917b7ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 110,
            "endLine": 114
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "\n      // 6. Cleanup\n      await act(async () => {\n        await result.current.cleanup();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d7e8e26db7dadc7ec9dc3cfa6dd566a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "\n      await act(async () => {\n        await Promise.allSettled(startPromises);\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8fabd860fed2e220fd634c0779875aca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 299,
            "endLine": 303
          }
        ],
        "sample": "      const { result } = renderHook(() => useMurmubaraEngine({\n        defaultChunkDuration: 2, // 2-second chunks for faster test\n      }));\n\n      await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97d28cd0edcc0b9f8c4994aafdaecac7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 300,
            "endLine": 304
          }
        ],
        "sample": "        defaultChunkDuration: 2, // 2-second chunks for faster test\n      }));\n\n      await act(async () => {\n        await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2b24c96c01d9a3b119254a7426fb4c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "      }));\n\n      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording(2);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8426f55502bb2caa195a643aa0706037",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 302,
            "endLine": 306
          }
        ],
        "sample": "\n      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording(2);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0d1a6dc802927e458237ccb6aefedfa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 303,
            "endLine": 307
          }
        ],
        "sample": "      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording(2);\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f439708d71bfa879382b341dc471e85d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 304,
            "endLine": 308
          }
        ],
        "sample": "        await result.current.initialize();\n        await result.current.startRecording(2);\n      });\n\n      const mockRecorder = (global.MediaRecorder as any).mock.results[0].value;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "17da480f90c90f791c0e4cc094e11587",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 271,
            "endLine": 275
          }
        ],
        "sample": "          // Add chunk\n          mockRecorder.ondataavailable({ \n            data: new Blob([`chunk-${i}`], { type: 'audio/webm' }) \n          });\n          mockRecorder.onstop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "566fe1c88815593efb23cdec767bcd88",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 159,
            "endLine": 163
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 272,
            "endLine": 276
          }
        ],
        "sample": "          mockRecorder.ondataavailable({ \n            data: new Blob([`chunk-${i}`], { type: 'audio/webm' }) \n          });\n          mockRecorder.onstop();\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6b73e4651644c80cf0ccfdf8bf9c9b9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 273,
            "endLine": 277
          }
        ],
        "sample": "            data: new Blob([`chunk-${i}`], { type: 'audio/webm' }) \n          });\n          mockRecorder.onstop();\n          \n          // Update metrics...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ec4e5a8936ba4a59f942e1ba689e87ba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 187,
            "endLine": 191
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 188,
            "endLine": 192
          }
        ],
        "sample": "\n  describe('Error Recovery', () => {\n    it('should recover from getUserMedia failure', async () => {\n      const { result } = renderHook(() => useMurmubaraEngine());\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e36d2449f25867bd148c8e614b3be1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 673,
            "endLine": 677
          }
        ],
        "sample": "        await result.current.initialize();\n      });\n\n      // Try to start recording - should fail\n      await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4f8ef748107e6f0cd1711032127f53ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 201,
            "endLine": 205
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 202,
            "endLine": 206
          }
        ],
        "sample": "      // Try to start recording - should fail\n      await act(async () => {\n        try {\n          await result.current.startRecording();\n        } catch (error) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61c88380caa4c94f8b1eb25acc348ce8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 231,
            "endLine": 235
          }
        ],
        "sample": "\n      await act(async () => {\n        try {\n          await result.current.initialize();\n        } catch (error) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c95bf82453fe46d7cbe2af82f1aa7588",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 254,
            "endLine": 258
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 445,
            "endLine": 449
          }
        ],
        "sample": "      act(() => {\n        result.current.pauseRecording();\n      });\n\n      expect(result.current.recordingState.isPaused).toBe(true);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c73cd5fb77b9e13be54edc281797b60",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "\n      expect(result.current.recordingState.isPaused).toBe(true);\n      const mockRecorder = (global.MediaRecorder as any).mock.results[0].value;\n      expect(mockRecorder.pause).toHaveBeenCalled();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc159ada66d072b2c55c0529e2d8c406",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioEngine.integration.test.ts",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 451,
            "endLine": 455
          }
        ],
        "sample": "      act(() => {\n        result.current.resumeRecording();\n      });\n\n      expect(result.current.recordingState.isPaused).toBe(false);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03aa201398c2952c719df86be15b3aca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 55,
            "endLine": 59
          }
        ],
        "sample": "\n  afterEach(async () => {\n    if (engine) {\n      try {\n        await engine.destroy(true);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db81a26604b82aa6590433ac1c84cd0c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "  afterEach(async () => {\n    if (engine) {\n      try {\n        await engine.destroy(true);\n      } catch (error) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e4b2ecb2736ba74a6dd5862b25904fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "    if (engine) {\n      try {\n        await engine.destroy(true);\n      } catch (error) {\n        // Ignore cleanup errors in tests...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97b194c2b7980d738afa0bbe8778d2af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/audioworklet-integration.test.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "      try {\n        await engine.destroy(true);\n      } catch (error) {\n        // Ignore cleanup errors in tests\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73702b66e0db0e34051134f339ddab01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 7,
            "endLine": 11
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 8,
            "endLine": 12
          }
        ],
        "sample": "\ndescribe('Noise Processing Integration Tests', () => {\n  const createMockAudioData = (size: number) => {\n    const data = new Float32Array(size);\n    for (let i = 0; i < size; i++) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "861d319b644aef2607c22f48929867a4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "        }));\n\n        await act(async () => {\n          await result.current.initialize();\n        });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f20de6cd0f350dd89ebec4f31ba08ea0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 255,
            "endLine": 259
          }
        ],
        "sample": "      }));\n\n      await act(async () => {\n        await result.current.initialize();\n        await result.current.startRecording();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5eedb4ba187836094a5dbc8447050488",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "        await result.current.initialize();\n        await result.current.startRecording();\n      });\n\n      const metricsCallback = (api.onMetricsUpdate as any).mock.calls[0][0];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "94927bfe6e4d733a4cf695a6a3a6e3ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 254,
            "endLine": 258
          }
        ],
        "sample": "        noiseReductionLevel: 'high',\n      }));\n\n      await act(async () => {\n        await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ed6e8a440e74f0faf1e49535e1a1199",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 233,
            "endLine": 237
          }
        ],
        "sample": "        const blob = new Blob([audioData.buffer], { type: 'audio/webm' });\n\n        await act(async () => {\n          mockRecorder.ondataavailable({ data: blob });\n          mockRecorder.onstop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97e8b24cd899c72500f10dabff1d39b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseProcessing.integration.test.ts",
            "startLine": 239,
            "endLine": 243
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 407,
            "endLine": 411
          }
        ],
        "sample": "        });\n\n        act(() => {\n          result.current.stopRecording();\n        });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ca7391f38757b8794761a5359b0d5b28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 45,
            "endLine": 49
          }
        ],
        "sample": "      // Apply frequency-domain noise reduction simulation\n      for (let i = 0; i < 480; i++) {\n        // Estimate noise level (simplified)\n        const noiseLevel = Math.abs(inputData[i]) < 0.1 ? ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "074760ee9ca9c68780e812edb2f10683",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 53,
            "endLine": 57
          }
        ],
        "sample": "        // Apply noise gate\n        if (Math.abs(outputData[i]) < 0.02) {\n          outputData[i] = 0;\n        }\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c40dd11ac6c345494792909df9d8e630",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/noiseReduction.test.ts",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "      \n      const chunks = generateTestChunks('speech', noiseProfile, 20);\n      const processedChunks = chunks.map(chunk => engine.process(chunk));\n      \n      // Analyze frequency spectrum to veri...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7cda2abf5aca905deeb2aee680c1d820",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "// Mock dynamic import scenario\nconst mockDynamicImport = () => {\n  // Simular el entorno de Next.js con React 19\n  const originalReact = globalThis.React;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "23cce8720cc3a80ad37b1ded53240847",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "\n  it('debe funcionar con importación dinámica en Next.js', async () => {\n    const cleanup = mockDynamicImport();\n    \n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6e8344216cdfb6fb1d5c6809d3a135c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "      \n      expect(result.current).toBeDefined();\n      expect(result.current.isInitialized).toBe(false);\n      expect(result.current.error).toBeNull();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4fed6dad60437e873b5d6843c4919da0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 359,
            "endLine": 363
          }
        ],
        "sample": "      expect(result.current.error).toBeNull();\n      \n      // Verificar que puede inicializarse\n      await act(async () => {\n        await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3aeb684ccd13d54db189060e75deb8db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/__tests__/integration/react19-nextjs14.test.tsx",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "    \n    expect(result.current).toBeDefined();\n    expect(result.current.error).toBeNull();\n    expect(result.current.isInitialized).toBe(false);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "869c3497f5dc4646e103a5b5f53c1d13",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 13,
            "endLine": 17
          }
        ],
        "sample": "\n  beforeEach(() => {\n    vi.clearAllMocks();\n    vi.useFakeTimers();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d73e61103ad3586e5f3f4a1f59ac7fd1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 136,
            "endLine": 140
          }
        ],
        "sample": "        let sum = 0;\n        for (let i = 0; i < samples.length; i++) {\n          sum += samples[i] * samples[i];\n        }\n        return Math.sqrt(sum / samples.length);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "710a24623d964800c2167eae9c50eafb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 144,
            "endLine": 148
          }
        ],
        "sample": "        let peak = 0;\n        for (let i = 0; i < samples.length; i++) {\n          peak = Math.max(peak, Math.abs(samples[i]));\n        }\n        return peak;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d354603d356869419aab66a75bcedfb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "      };\n      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      expect(mockLogger.info).toHaveBeenCalledWith(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ecf3fb0ed636c5031f16ff3f792084cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      expect(mockLogger.info).toHaveBeenCalledWith(\n        'ChunkProcessor initialized:',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a67fd87c9a55447e789a080de1b0b503",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 87,
            "endLine": 91
          }
        ],
        "sample": "      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      expect(mockLogger.info).toHaveBeenCalledWith(\n        'ChunkProcessor initialized:',\n       ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ecf68e32c512e6ea069a312c1721d11c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "\n    it('should accumulate samples', () => {\n      const samples = new Float32Array(1000);\n      chunkProcessor.addSamples(samples);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "249a7640c1667e7bf5d30f54e36f6191",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "\n    it('should initialize start time on first sample', () => {\n      const mockPerformanceNow = 1234567.89;\n      vi.spyOn(performance, 'now').mockReturnValue(mockPerformanceNow);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b55311745b26bf6c56b1c41fd011dd1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "\n    it('should accumulate across multiple calls', () => {\n      const samples1 = new Float32Array(20000);\n      const samples2 = new Float32Array(20000);\n      const samples3 = new Float32Array(10000...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3389c6a7f12ebb5b7d0bf2e23680dd89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 254,
            "endLine": 258
          }
        ],
        "sample": "      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      // Add partial chunk\n      const samples = new Float32Array(10000); // Less than 48000\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d06252349c859fb7d4fcc8ab2bb08534",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "      \n      chunkProcessor = new ChunkProcessor(sampleRate, config, mockLogger, mockMetricsManager);\n      \n      const samples = new Float32Array(5000);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a5b88d3e8006163d527b1e9612b3f2f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 388,
            "endLine": 392
          },
          {
            "file": "packages/murmuraba/src/__tests__/managers/ChunkProcessor.test.ts",
            "startLine": 389,
            "endLine": 393
          }
        ],
        "sample": "      \n      status = chunkProcessor.getStatus();\n      expect(status.currentSampleCount).toBe(24000);\n      expect(status.bufferFillPercentage).toBe(50);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d45fe0fb34b8c1d38ebda7e0f2a5909",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "\nconsole.log('🎭 ========================================= 🎭');\nconsole.log('🚀 INITIALIZING WEB AUDIO MOCKS 2025 EDITION 🚀');\nconsole.log('🎭 ========================================= 🎭');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "72256a7dfa15b159b5791d657c725313",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 131,
            "endLine": 135
          }
        ],
        "sample": "\n  console.log('✅ AudioContext mock created!');\n  return mockAudioContext;\n};\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ccf1312cf804177a309697188dda91c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 140,
            "endLine": 144
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 141,
            "endLine": 145
          }
        ],
        "sample": "\n  constructor(tracks: MediaStreamTrack[] = []) {\n    this.tracks = tracks.length > 0 ? tracks : [createMockAudioTrack()];\n    console.log(`🎬 Created MediaStream with ID: ${this.id}`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2922a4e2d5585ad15767904fae97aa5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "\n  addTrack(track: MediaStreamTrack): void {\n    console.log(`➕ Adding track to stream: ${track.id}`);\n    this.tracks.push(track);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2e4db1342e976a26cd917ad535ea29b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "\n  removeTrack(track: MediaStreamTrack): void {\n    console.log(`➖ Removing track from stream: ${track.id}`);\n    this.tracks = this.tracks.filter(t => t !== track);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3bc645618dbb13253daed459c4925771",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 365,
            "endLine": 369
          }
        ],
        "sample": "  }\n\n  addEventListener = vi.fn();\n  removeEventListener = vi.fn();\n  dispatchEvent = vi.fn();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5495f524597bd71f27640c016dcd2c0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 281,
            "endLine": 285
          }
        ],
        "sample": "    \n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = undefined;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9c00093daf7129bbfdfb4932f70d6cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 288,
            "endLine": 292
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 289,
            "endLine": 293
          }
        ],
        "sample": "\n    if (this.onstop) {\n      setTimeout(() => this.onstop!({ type: 'stop' } as Event), 10);\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db9c30e77ec661e414400b864440e808",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 309,
            "endLine": 313
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 310,
            "endLine": 314
          }
        ],
        "sample": "\n  requestData(): void {\n    console.log('📊 Data requested');\n    this.generateDataChunk();\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "895e7ce70f78bddf6a005cd2169e8971",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 320,
            "endLine": 324
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 321,
            "endLine": 325
          }
        ],
        "sample": "      \n      // Fill with some pattern to simulate audio data\n      for (let i = 0; i < size; i++) {\n        data[i] = Math.floor(Math.sin(i * 0.01) * 127 + 128);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d32561e0ac414d7bb036208d07787dfe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 366,
            "endLine": 370
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 367,
            "endLine": 371
          }
        ],
        "sample": "\n  addEventListener = vi.fn();\n  removeEventListener = vi.fn();\n  dispatchEvent = vi.fn();\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "08673cde5d9de37131d7a55e7149a735",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 387,
            "endLine": 391
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 388,
            "endLine": 392
          }
        ],
        "sample": "        \n        const tracks = [];\n        if (!constraints || constraints.audio !== false) {\n          tracks.push(createMockAudioTrack());\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "54a383abc7f28ab21f04e17b9a4ad229",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 392,
            "endLine": 396
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 393,
            "endLine": 397
          }
        ],
        "sample": "        \n        const stream = new MockMediaStream(tracks);\n        console.log(`✅ getUserMedia success! Stream ID: ${stream.id}`);\n        return stream;\n      }),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b841f7cf57aa6b586fac326ab18d14c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 452,
            "endLine": 456
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 453,
            "endLine": 457
          }
        ],
        "sample": "\n// 🔊 Setup all audio mocks\nexport const setupAllAudioMocks = () => {\n  console.log('\\n🎪 ====== SETTING UP ALL AUDIO MOCKS ====== 🎪\\n');\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "56627d38f21a27ed31f068b6d3ebb53d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 456,
            "endLine": 460
          },
          {
            "file": "packages/murmuraba/src/__tests__/mocks/webAudioMocks.ts",
            "startLine": 457,
            "endLine": 461
          }
        ],
        "sample": "  \n  // Mock AudioContext\n  global.AudioContext = vi.fn().mockImplementation(createMockAudioContext) as any;\n  (global as any).webkitAudioContext = global.AudioContext;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2aa65b2bf5e0061a0e37212bf7159423",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "// Mock HTMLAudioElement for AudioPlayer tests\nexport const createMockAudio = () => {\n  const eventListeners: { [key: string]: EventListener[] } = {};\n  \n  const mockAudio = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5efb4311db521ef30c97620965934d52",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 144,
            "endLine": 148
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "\n// Setup HTMLAudioElement mock for tests\nexport const setupAudioElementMock = () => {\n  const mockAudio = createMockAudio();\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "91e9635ec943e24a8c1a7c6eda7703e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/setup/audio-mocks.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/__tests__/setup/audio-mocks.ts",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "  \n  // Mock HTMLAudioElement constructor\n  const originalHTMLAudioElement = global.HTMLAudioElement;\n  global.HTMLAudioElement = vi.fn(() => mockAudio) as any;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3933d492781ed4f2a1e573e54d2004ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 825,
            "endLine": 829
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 826,
            "endLine": 830
          }
        ],
        "sample": "\n    it('should connect AGC in the audio chain: filters -> AGC -> processor', async () => {\n      const mockStream = createMockMediaStream();\n      const controller = await engine.processStream(mockSt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "70bc5ad6c61812965d5abb2c4095d9c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 837,
            "endLine": 841
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 838,
            "endLine": 842
          }
        ],
        "sample": "\n    it('should call AGC updateGain during audio processing', async () => {\n      const mockStream = createMockMediaStream();\n      const controller = await engine.processStream(mockStream);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7f0c7c39e80462ab2bed42e6689c9a74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 856,
            "endLine": 860
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 893,
            "endLine": 897
          }
        ],
        "sample": "      // Process audio\n      audioCallback(mockEvent);\n\n      // AGC should be updated periodically\n      expect(mockAGC.updateGain).toHaveBeenCalled();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bbaeae62ec5ff2469d05c44b423849af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 913,
            "endLine": 917
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 986,
            "endLine": 990
          }
        ],
        "sample": "        bitsPerSample: 16\n      });\n\n      await expect(engine.processFile(mockArrayBuffer))\n        .rejects...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3abe9acfd68023b185d07baf78117874",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 922,
            "endLine": 926
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 951,
            "endLine": 955
          }
        ],
        "sample": "      const mockArrayBuffer = createMockWAVBuffer({\n        numChannels: 1, // Mono - supported\n        sampleRate: 48000,\n        bitsPerSample: 16\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "49f85d43712982d468bbb793560a91f9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 923,
            "endLine": 927
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 952,
            "endLine": 956
          }
        ],
        "sample": "        numChannels: 1, // Mono - supported\n        sampleRate: 48000,\n        bitsPerSample: 16\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c42ef65751974362003a8d241b496169",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 937,
            "endLine": 941
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 968,
            "endLine": 972
          }
        ],
        "sample": "        bitsPerSample: 16\n      });\n\n      // Should successfully resample with our linear interpolation implementation\n      const result = await engine.processFile(mockArrayBuffer);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "903a4f45286b19d0a59a5498c98d296f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 938,
            "endLine": 942
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 969,
            "endLine": 973
          }
        ],
        "sample": "      });\n\n      // Should successfully resample with our linear interpolation implementation\n      const result = await engine.processFile(mockArrayBuffer);\n      expect(result).toBeInstanceOf(ArrayB...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d8b2a22c86589bf33fd9c692a8021fea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 941,
            "endLine": 945
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 972,
            "endLine": 976
          }
        ],
        "sample": "      const result = await engine.processFile(mockArrayBuffer);\n      expect(result).toBeInstanceOf(ArrayBuffer);\n      \n      // Verify the output is at 48kHz by checking the WAV header\n      const v...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd3c439f83672ded55a7ef04a13a4468",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 942,
            "endLine": 946
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 973,
            "endLine": 977
          }
        ],
        "sample": "      expect(result).toBeInstanceOf(ArrayBuffer);\n      \n      // Verify the output is at 48kHz by checking the WAV header\n      const view = new DataView(result);\n      const outputSampleRate = view....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "276c9e764251cb20f553c9a23c4ce9a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 943,
            "endLine": 947
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 974,
            "endLine": 978
          }
        ],
        "sample": "      \n      // Verify the output is at 48kHz by checking the WAV header\n      const view = new DataView(result);\n      const outputSampleRate = view.getUint32(24, true);\n      expect(outputSampleRate...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d69245e739b31d7849149decfea02f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 995,
            "endLine": 999
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 280,
            "endLine": 284
          }
        ],
        "sample": "  // ===== ERROR HANDLING TESTS =====\n  describe('Error Handling', () => {\n    beforeEach(() => {\n      engine = new MurmubaraEngine();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2927a3ef4cb17ef4d33397f279b852e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 996,
            "endLine": 1000
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 281,
            "endLine": 285
          }
        ],
        "sample": "  describe('Error Handling', () => {\n    beforeEach(() => {\n      engine = new MurmubaraEngine();\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ecfb178b009e5850c7b3fdd1743a3ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1006,
            "endLine": 1010
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1022,
            "endLine": 1026
          }
        ],
        "sample": "      const { loadRNNoiseModule } = await import('../../../utils/rnnoise-loader');\n      (loadRNNoiseModule as any).mockRejectedValueOnce(new Error('Test error'));\n      \n      try {\n        await eng...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ebba69c5639247de4d4448310ec14a2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1035,
            "endLine": 1039
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1036,
            "endLine": 1040
          }
        ],
        "sample": "    \n    it('should limit error history', async () => {\n      // Create multiple engines to accumulate errors in one engine\n      const testEngine = new MurmubaraEngine();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75d9dec27508eeaea95fe18488d2225e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1079,
            "endLine": 1083
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1123,
            "endLine": 1127
          }
        ],
        "sample": "        vi.useFakeTimers();\n        engine = new MurmubaraEngine({ autoCleanup: true, cleanupDelay: 1000 });\n        \n        // Simulate ready state with no active streams\n        mockStateManager.is...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2089e90003461769b040c14119e1af7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1105,
            "endLine": 1109
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1143,
            "endLine": 1147
          }
        ],
        "sample": "        vi.useFakeTimers();\n        \n        engine = new MurmubaraEngine({ \n          autoCleanup: true,\n          cleanupDelay: 1000 ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2181611894f6aa658d52cb72bcee76e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1106,
            "endLine": 1110
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1144,
            "endLine": 1148
          }
        ],
        "sample": "        \n        engine = new MurmubaraEngine({ \n          autoCleanup: true,\n          cleanupDelay: 1000 \n        });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74e7cbe428e4273c527b477456758ccd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1107,
            "endLine": 1111
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1145,
            "endLine": 1149
          }
        ],
        "sample": "        engine = new MurmubaraEngine({ \n          autoCleanup: true,\n          cleanupDelay: 1000 \n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6da44c7152bd2679c8732531d59f673d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1121,
            "endLine": 1125
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1122,
            "endLine": 1126
          }
        ],
        "sample": "\n      it('should cancel cleanup timer on new processing', () => {\n        vi.useFakeTimers();\n        engine = new MurmubaraEngine({ autoCleanup: true, cleanupDelay: 1000 });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "190dae0f227a8c84da9835c508d31d9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1230,
            "endLine": 1234
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1231,
            "endLine": 1235
          }
        ],
        "sample": "        \n        expect(mockLogger.warn).toHaveBeenCalledWith('Force destroying engine');\n      });\n\n      it('should cleanup resources on destroy', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "febf358e4e81689471603489126964a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1250,
            "endLine": 1254
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1267,
            "endLine": 1271
          }
        ],
        "sample": "        \n        // Set state to allow destroy\n        engine['stateManager']['currentState'] = 'ready';\n        \n        await engine.destroy();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "680190e1e7fc70d63abcaf87ec79893d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1251,
            "endLine": 1255
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1268,
            "endLine": 1272
          }
        ],
        "sample": "        // Set state to allow destroy\n        engine['stateManager']['currentState'] = 'ready';\n        \n        await engine.destroy();\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a1f7027f92c4cffa5f2af114f8779bc7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1401,
            "endLine": 1405
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1402,
            "endLine": 1406
          }
        ],
        "sample": "      \n      expect(diagnostics.systemInfo.memory).toBeUndefined();\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b64665d7323da9352e70eba7c4889b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1406,
            "endLine": 1410
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1407,
            "endLine": 1411
          }
        ],
        "sample": "  // ===== CONFIGURATION TESTS =====\n  describe('Configuration', () => {\n    it('should handle all noise reduction levels', async () => {\n      const levels = ['low', 'medium', 'high', 'auto'] as cons...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e3bbb51e571bba9036eec8b6a423bfde",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1414,
            "endLine": 1418
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/core/murmubara-engine.test.ts",
            "startLine": 1415,
            "endLine": 1419
          }
        ],
        "sample": "\n      for (const level of levels) {\n        const testEngine = new MurmubaraEngine({ noiseReductionLevel: level });\n        await testEngine.initialize();\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d00ceb30fe1ec490e53d7b9bfaed0ed8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "\n  beforeEach(() => {\n    audioExporter = new AudioExporter();\n    mockBlob = new Blob(['mock audio data'], { type: 'audio/webm' });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9855461f62ebcdb9966e6db15dd91390",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "      id: 'chunk-1',\n      startTime: 1000,\n      endTime: 2000,\n      processedAudioUrl: 'blob:processed-audio-url',\n      originalAudioUrl: 'blob:original-audio-url',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c93cd055b3440412df27dae699017150",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "      startTime: 1000,\n      endTime: 2000,\n      processedAudioUrl: 'blob:processed-audio-url',\n      originalAudioUrl: 'blob:original-audio-url',\n      vad: { isSpeech: true, averageScore: 0.8 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5cc612b9b53f86a541e19757589943aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "      endTime: 2000,\n      processedAudioUrl: 'blob:processed-audio-url',\n      originalAudioUrl: 'blob:original-audio-url',\n      vad: { isSpeech: true, averageScore: 0.8 },\n      metrics: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f7aa51041f0506687bcb404266734921",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "      processedAudioUrl: 'blob:processed-audio-url',\n      originalAudioUrl: 'blob:original-audio-url',\n      vad: { isSpeech: true, averageScore: 0.8 },\n      metrics: {\n        inputLevel: 0.5,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b80608dddf892dc1c9998f595c497264",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "      originalAudioUrl: 'blob:original-audio-url',\n      vad: { isSpeech: true, averageScore: 0.8 },\n      metrics: {\n        inputLevel: 0.5,\n        outputLevel: 0.4,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a758508e106ce3337afe667fa9ddace5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "      vad: { isSpeech: true, averageScore: 0.8 },\n      metrics: {\n        inputLevel: 0.5,\n        outputLevel: 0.4,\n        noiseReduction: 0.3...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46360d5380146fa46c86ba0ba4dac408",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 67,
            "endLine": 71
          }
        ],
        "sample": "      metrics: {\n        inputLevel: 0.5,\n        outputLevel: 0.4,\n        noiseReduction: 0.3\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95a62ca0fcddec2038429146f1ca24a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "        inputLevel: 0.5,\n        outputLevel: 0.4,\n        noiseReduction: 0.3\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a7b5b0d817da1ade35fb4ee8928d14d9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/audioExporter.test.ts",
            "startLine": 49,
            "endLine": 53
          }
        ],
        "sample": "    // Setup fetch mock\n    (global.fetch as any).mockResolvedValue({\n      blob: vi.fn().mockResolvedValue(mockBlob)\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2fc50d06af26618387d93d7727752d7e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "\n  async play() {\n    this.paused = false;\n    return Promise.resolve();\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "465b28a00eb67585d4bf3093fc339ec4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "      await playbackManager.toggleChunkPlayback(mockChunk, 'original', onPlayStateChange);\n\n      expect(onPlayStateChange).toHaveBeenCalledWith('chunk-1', true);\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b8f65b60d7c36e2a9640e37714ed2279",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "\n      expect(onPlayStateChange).toHaveBeenCalledWith('chunk-1', true);\n    });\n\n    it('should stop playing audio when already playing', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ecd3b1544147959ab8a4b212a5758f2f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "      // Note: The stopAllAudioExceptChunk method has a bug - it extracts chunk ID incorrectly\n      // It uses split('-')[0] which would give 'chunk' instead of 'chunk-1'\n    });\n\n    it('should stop...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e7c262b857134187f48cfb52e176f821",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 145,
            "endLine": 149
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "      await playbackManager.toggleChunkPlayback(mockChunk, 'processed', onPlayStateChange);\n      \n      // Get the audio element\n      const audioElements = (playbackManager as any).audioElements;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "928f3baf92f79959e2d36f86d21fdd91",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "      const audioElements = (playbackManager as any).audioElements;\n      const audio = audioElements.get('chunk-1-processed') as MockAudioElement;\n      \n      // Simulate ended event\n      onPlaySta...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "23bdb5cf0b7c1cc51aa7e757800208d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 193,
            "endLine": 197
          }
        ],
        "sample": "\n  describe('stopAllAudio', () => {\n    it('should stop all playing audio elements', async () => {\n      const chunk2 = { ...mockChunk, id: 'testchunk2' }; // Avoid ID extraction issues\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "952fbae2a0980c6482ab0350d1d2ee92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 200,
            "endLine": 204
          }
        ],
        "sample": "      \n      // Create a separate playback manager instance to avoid interference\n      const playbackManager2 = new PlaybackManager();\n      await playbackManager2.toggleChunkPlayback(chunk2, 'origin...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d5f59923212caf386b6039c6eb3b2eb4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 204,
            "endLine": 208
          }
        ],
        "sample": "      \n      // Get audio elements from the first manager\n      const audioElements = (playbackManager as any).audioElements;\n      const audio1 = audioElements.get('chunk-1-processed') as MockAudioEl...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2866ab984920ce81caddba95277bb6de",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 209,
            "endLine": 213
          }
        ],
        "sample": "      // Verify audio1 is playing\n      expect(audio1.paused).toBe(false);\n      \n      onPlayStateChange.mockClear();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "511864d2a58850b6672147eedc745840",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 265,
            "endLine": 269
          }
        ],
        "sample": "      const audioElements = (playbackManager as any).audioElements;\n      expect(audioElements.size).toBe(2);\n      \n      // Clean up chunk\n      playbackManager.cleanupChunk('chunk-1');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "69b3061a72de560b4c215bae75869a2f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 266,
            "endLine": 270
          }
        ],
        "sample": "      expect(audioElements.size).toBe(2);\n      \n      // Clean up chunk\n      playbackManager.cleanupChunk('chunk-1');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3fa3f2b2cf7ab6fa5c67fe62d7b74a21",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 328,
            "endLine": 332
          }
        ],
        "sample": "      \n      await playbackManager.toggleChunkPlayback(mockChunk, 'processed', onPlayStateChange);\n      await playbackManager.toggleChunkPlayback(chunk2, 'processed', onPlayStateChange);\n      \n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "19beb79a86937db3fd4e75504662edbf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 296,
            "endLine": 300
          }
        ],
        "sample": "      \n      const audioElements = (playbackManager as any).audioElements;\n      const processedAudio = audioElements.get('chunk-1-processed') as MockAudioElement;\n      const originalAudio = audioEle...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f67a1e2c3ec49540ce3decf2e83f0bed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 299,
            "endLine": 303
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 300,
            "endLine": 304
          }
        ],
        "sample": "      \n      // Start playing\n      processedAudio.paused = false;\n      originalAudio.paused = false;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0579f65e8f280a3dd8093463648882ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 316,
            "endLine": 320
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 317,
            "endLine": 321
          }
        ],
        "sample": "      // Rapidly toggle same chunk\n      await playbackManager.toggleChunkPlayback(mockChunk, 'processed', onPlayStateChange);\n      await playbackManager.toggleChunkPlayback(mockChunk, 'processed', o...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a273d9d4028c668d66fa49867d38a23e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/playbackManager.test.ts",
            "startLine": 332,
            "endLine": 336
          }
        ],
        "sample": "      \n      const audioElements = (playbackManager as any).audioElements;\n      expect(audioElements.has('chunk-1-processed')).toBe(true);\n      expect(audioElements.has('chunk-10-processed')).toBe(t...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6023fa6558198811c168c593ba9a8f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 492,
            "endLine": 496
          }
        ],
        "sample": "      processingLatency: 10,\n      frameCount: 100,\n      inputLevel: 1,\n      outputLevel: 0.5,\n      noiseReductionLevel: 0.5,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "37fb708f02a50d600e3cba2bb62daa53",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 493,
            "endLine": 497
          }
        ],
        "sample": "      frameCount: 100,\n      inputLevel: 1,\n      outputLevel: 0.5,\n      noiseReductionLevel: 0.5,\n      timestamp: Date.now(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "505d841a8dc113c42a2149d91e93c255",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 494,
            "endLine": 498
          }
        ],
        "sample": "      inputLevel: 1,\n      outputLevel: 0.5,\n      noiseReductionLevel: 0.5,\n      timestamp: Date.now(),\n      droppedFrames: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bec4f52ae4f1ecb9c11fcf00cdfcfc4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 112,
            "endLine": 116
          }
        ],
        "sample": "  }),\n  destroyAudioConverter: vi.fn(),\n  AudioConverter: vi.fn()\n}));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61a19a7740424c5013b57092c2360de5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 233,
            "endLine": 237
          }
        ],
        "sample": "\n      await act(async () => {\n        await expect(result.current.initialize()).rejects.toThrow('Init failed');\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ec4c5028bfd4e7a394239b1666e5c1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 859,
            "endLine": 863
          }
        ],
        "sample": "      });\n\n      expect(result.current.error).toBe('Init failed');\n      expect(result.current.isInitialized).toBe(false);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "969bbfa5df4ad0d6b6eb7526a13b6e01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 803,
            "endLine": 807
          }
        ],
        "sample": "        try {\n          await result.current.initialize();\n        } catch (e) {\n          // Expected to throw\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dcbae5927a6737d7a84737a887efc4b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 218,
            "endLine": 222
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 804,
            "endLine": 808
          }
        ],
        "sample": "          await result.current.initialize();\n        } catch (e) {\n          // Expected to throw\n        }\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e998755bbef5cb2b012a93d292deb32c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 902,
            "endLine": 906
          }
        ],
        "sample": "      const { result, unmount } = renderHook(() => useMurmubaraEngine());\n\n      await act(async () => {\n        await result.current.initialize();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9eaf94debba43b69c690752b114cd107",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 249,
            "endLine": 253
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 250,
            "endLine": 254
          }
        ],
        "sample": "\n      expect(destroyAudioConverter).toHaveBeenCalled();\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "451a47a4327335b82c15e4179ec24125",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 318,
            "endLine": 322
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 319,
            "endLine": 323
          }
        ],
        "sample": "      \n      await act(async () => {\n        try {\n          await result.current.destroy();\n        } catch (e) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a8ea1ed06fd0b9cf78740149b4917582",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 327,
            "endLine": 331
          }
        ],
        "sample": "      \n      expect(result.current.error).toBe('Destroy failed');\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "405580cd18e19ae3d395c1baa0601c1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 348,
            "endLine": 352
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 417,
            "endLine": 421
          }
        ],
        "sample": "      const mockStream = {\n        getTracks: vi.fn(() => [{ stop: vi.fn() }])\n      };\n      \n      const mockMediaRecorder = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "893407cc88bdff8caaf78db00d2805d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 418,
            "endLine": 422
          }
        ],
        "sample": "        getTracks: vi.fn(() => [{ stop: vi.fn() }])\n      };\n      \n      const mockMediaRecorder = {\n        start: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52ef28e056cb1821fc3b89e88d57b384",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 419,
            "endLine": 423
          }
        ],
        "sample": "      };\n      \n      const mockMediaRecorder = {\n        start: vi.fn(),\n        stop: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1b443692cea31a6f73f4bfe3a1410f91",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 427,
            "endLine": 431
          }
        ],
        "sample": "        ondataavailable: null,\n        onstop: null,\n      };\n      \n      (global.navigator.mediaDevices.getUserMedia as vi.Mock).mockResolvedValue(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74a97432649816f63b252eb9c25fc80c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 428,
            "endLine": 432
          }
        ],
        "sample": "        onstop: null,\n      };\n      \n      (global.navigator.mediaDevices.getUserMedia as vi.Mock).mockResolvedValue(mockStream);\n      (global.MediaRecorder as any).mockImplementation(() => mockMedi...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "942981acc49976845c4adf41b96cb08e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 358,
            "endLine": 362
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 429,
            "endLine": 433
          }
        ],
        "sample": "      };\n      \n      (global.navigator.mediaDevices.getUserMedia as vi.Mock).mockResolvedValue(mockStream);\n      (global.MediaRecorder as any).mockImplementation(() => mockMediaRecorder);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6225b7896e1b6fafe0dc368bef264e50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 359,
            "endLine": 363
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 430,
            "endLine": 434
          }
        ],
        "sample": "      \n      (global.navigator.mediaDevices.getUserMedia as vi.Mock).mockResolvedValue(mockStream);\n      (global.MediaRecorder as any).mockImplementation(() => mockMediaRecorder);\n      \n      const ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7bde1bcd6eda7bd2f978a925df5b3608",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 360,
            "endLine": 364
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 431,
            "endLine": 435
          }
        ],
        "sample": "      (global.navigator.mediaDevices.getUserMedia as vi.Mock).mockResolvedValue(mockStream);\n      (global.MediaRecorder as any).mockImplementation(() => mockMediaRecorder);\n      \n      const { resul...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6b7608ebc0441bfdbfe2d67c9bff6fed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 371,
            "endLine": 375
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 372,
            "endLine": 376
          }
        ],
        "sample": "        \n        // Simulate MediaRecorder starting\n        if (mockMediaRecorder.ondataavailable) {\n          (mockMediaRecorder.ondataavailable as any)({ data: new Blob(['test']) });\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d95dd86ecac564eee7eff149a2bca824",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 388,
            "endLine": 392
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 426,
            "endLine": 430
          }
        ],
        "sample": "        state: 'recording',\n        ondataavailable: null,\n        onstop: null,\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b29c03bfd4160d71aef63234b31f313",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 549,
            "endLine": 553
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 550,
            "endLine": 554
          }
        ],
        "sample": "      \n      await act(async () => {\n        await result.current.toggleChunkPlayback('test-chunk', 'processed');\n      });\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b0f550732cb8ef8ded971beffd56685",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 617,
            "endLine": 621
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 618,
            "endLine": 622
          }
        ],
        "sample": "      \n      await expect(result.current.downloadChunk('non-existent', 'wav', 'processed')).rejects.toThrow('Chunk not found');\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf81f41fd8b30f531b794a2c203c1025",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 638,
            "endLine": 642
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 684,
            "endLine": 688
          }
        ],
        "sample": "        processingLatency: 10,\n        memoryUsage: 1000000,\n        streamCount: 1,\n      });\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "656363738c8ea0dd49a91510cdbd553d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 646,
            "endLine": 650
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 662,
            "endLine": 666
          }
        ],
        "sample": "      \n      const diag = result.current.getDiagnostics();\n      expect(diag).toBeNull();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "48ff14163c90a4867745c832a948c99e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 690,
            "endLine": 694
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 691,
            "endLine": 695
          }
        ],
        "sample": "    // ============================================================================\n    // DIAGNOSTICS RACE CONDITION TESTS\n    // =====================================================================...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "071efa6233bf9c6fec5860c03c5f6e23",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 721,
            "endLine": 725
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 722,
            "endLine": 726
          }
        ],
        "sample": "\n        // After initialization, isInitialized is true but diagnostics is still null\n        expect(result.current.isInitialized).toBe(true);\n        expect(result.current.diagnostics).toBeNull(); //...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f985534239914a2ef37535c6b740c66f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 746,
            "endLine": 750
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 747,
            "endLine": 751
          }
        ],
        "sample": "        // Wait for useEffect to trigger\n        await waitFor(() => {\n          expect(result.current.diagnostics).not.toBeNull();\n        });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c693742090512060ba232b410d9ec8da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 855,
            "endLine": 859
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 873,
            "endLine": 877
          }
        ],
        "sample": "      );\n\n      await act(async () => {\n        await waitForAsync();\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8910cffe6ce9a7355067e405ebe3b527",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 885,
            "endLine": 889
          },
          {
            "file": "packages/murmuraba/src/__tests__/unit/hooks/useMurmubaraEngine.test.ts",
            "startLine": 901,
            "endLine": 905
          }
        ],
        "sample": "      const { result, unmount } = renderHook(() => useMurmubaraEngine());\n\n      // Start a recording to create interval\n      await act(async () => {\n        await result.current.initialize();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "036a1cc9b43d25ded9b629fea8189c41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "    // Mock AudioEngine\n    mockEngine = {\n      isInitialized: true,\n      initialize: vi.fn().mockResolvedValue(undefined),\n      process: vi.fn((frame: Float32Array) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e867a769371704ba33d362c47e575646",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 408,
            "endLine": 412
          }
        ],
        "sample": "      } as any;\n\n      mockScriptProcessor.onaudioprocess(event);\n\n      // Should process multiple frames...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "60994a43e61f29cd9518240d96f30c1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 137,
            "endLine": 141
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 201,
            "endLine": 205
          }
        ],
        "sample": "      const outputData = new Float32Array(100);\n      \n      const event = {\n        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28379a7e038cd16ca674d5d25d909196",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "      // Should have processed one frame after 5 * 100 = 500 samples\n      expect(mockEngine.process).toHaveBeenCalledTimes(1);\n    });\n\n    it('should handle silence detection', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "389f0f2787bbd0691369ceb19f4a2eb7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 276,
            "endLine": 280
          }
        ],
        "sample": "      const outputData = new Float32Array(480);\n      \n      const event = {\n        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba4b250ab5e7fe3038e25ef98af4499d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 252,
            "endLine": 256
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 399,
            "endLine": 403
          }
        ],
        "sample": "      const outputData = new Float32Array(1000);\n      \n      const event = {\n        inputBuffer: {\n          getChannelData: vi.fn(() => inputData)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2821e9d78497fb86172745456fc4848e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 412,
            "endLine": 416
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 413,
            "endLine": 417
          }
        ],
        "sample": "      // Should fill remaining with zeros\n      expect(outputData[500]).toBe(0);\n    });\n\n    it('should maintain buffer continuity across process calls', () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "37306ccc23b7be4a6576333d4a2f634b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 419,
            "endLine": 423
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 432,
            "endLine": 436
          }
        ],
        "sample": "        inputBuffer: {\n          getChannelData: vi.fn(() => new Float32Array(250).fill(1))\n        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => new Float32Array(250))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e41aff59742b8e20a6619f9827881fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 420,
            "endLine": 424
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 433,
            "endLine": 437
          }
        ],
        "sample": "          getChannelData: vi.fn(() => new Float32Array(250).fill(1))\n        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => new Float32Array(250))\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "44b53e8a42055062a47f27d0c0a0d530",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 421,
            "endLine": 425
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 434,
            "endLine": 438
          }
        ],
        "sample": "        },\n        outputBuffer: {\n          getChannelData: vi.fn(() => new Float32Array(250))\n        }\n      } as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8116731a57a4283724ae7c32c705b855",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 422,
            "endLine": 426
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/MurmurabaProcessor.test.ts",
            "startLine": 435,
            "endLine": 439
          }
        ],
        "sample": "        outputBuffer: {\n          getChannelData: vi.fn(() => new Float32Array(250))\n        }\n      } as any;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1898fe56cb6d378cac7c1a7bdaac456",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "\n  describe('Critical Volume Fix - 4% to Audible', () => {\n    it('should amplify 4% volume (shouting) to at least 25% (audible)', () => {\n      // ARRANGE: User reports shouting = 4% volume\n      con...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d23dc831de2767c0f3e2f67ec4ef747c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/SimpleAGC.test.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "\n      agc.updateGain();\n\n      // Should reduce gain (0.3 / 0.8 = 0.375)\n      const [targetGain] = mockGainNode.gain.setTargetAtTime.mock.calls[0];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bcd553f20cb3913ec90dfb401c06dc62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 8,
            "endLine": 12
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "\ndescribe('AudioConverter - Medical Grade Memory Management', () => {\n  let converter: AudioConverter;\n\n  beforeEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a20601f687e916576b54f782673414a4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 45,
            "endLine": 49
          }
        ],
        "sample": "\n    it('should revoke all URLs on destroy', async () => {\n      const mockUrls = ['blob:url-1', 'blob:url-2', 'blob:url-3'];\n      const revokeUrlSpy = vi.spyOn(URL, 'revokeObjectURL');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ff2624543e4cd0b0fdb69dbaf352758",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "      // Convert multiple URLs\n      await converter.convertBlobUrl('blob:original-1');\n      await converter.convertBlobUrl('blob:original-2');\n      await converter.convertBlobUrl('blob:original-3')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f093e06eefc93845324272027dc8f252",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "packages/murmuraba/src/__tests__/utils/audioConverter.test.ts",
            "startLine": 109,
            "endLine": 113
          }
        ],
        "sample": "      \n      destroyAudioConverter();\n      \n      expect(destroySpy).toHaveBeenCalled();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "857e37fc1e849beb0b703d5ef86f390f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "      // El código usa 512 para latencia baja\n      const processorBufferSize = 512\n      expect(validSizes).toContain(processorBufferSize)\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28a4a3028df897e13fa448a61f1b2324",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "      \n      // Verificar que se usa HEAPF32\n      const ptr = 0\n      const data = new Float32Array([1, 2, 3])\n      mockWasm.HEAPF32.set(data, ptr >> 2) // ptr/4...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ca289b69427cb55de497ecd4da49381e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "\n  describe('RULE 9: Memory cleanup', () => {\n    it('debe liberar memoria después de usar', () => {\n      const mockFree = vi.fn()\n      const ptr = 1234...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6371b84dc55280079088f34c49593d98",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 139,
            "endLine": 143
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 140,
            "endLine": 144
          }
        ],
        "sample": "\n  describe('RULE 12: Single state instance', () => {\n    it('debe crear estado RNNoise una sola vez', async () => {\n      const mockCreate = vi.fn(() => 123)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41f31e7ca5d0252245747075b5bfa928",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 150,
            "endLine": 154
          }
        ],
        "sample": "      // No debe llamar de nuevo\n      const sameState = state\n      expect(mockCreate).toHaveBeenCalledTimes(1)\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e9f3da631d1986b57e7eb5555071b07e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 166,
            "endLine": 170
          }
        ],
        "sample": "      \n      expect(vad).toBe(0.75)\n      expect(mockProcess).toHaveBeenCalledWith(state, ptr, ptr)\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c973c16535d5287bd74f728f61448e9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 171,
            "endLine": 175
          }
        ],
        "sample": "\n  describe('RULE 14: Residual buffer handling', () => {\n    it('debe manejar samples residuales', () => {\n      const buffer = []\n      const incoming = new Float32Array(520) // 480 + 40...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b4b8b460ecde0d3af2bac3c3f4ec650c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "      \n      // Procesar frame completo\n      const frame = buffer.splice(0, 480)\n      expect(frame.length).toBe(480)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0331be873b0d08229504f027ca17ace",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "      \n      // Valid data\n      const hasValidNaN = validData.some(v => isNaN(v))\n      expect(hasValidNaN).toBe(false)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d6363ee15fa21cfb1dd55af92245064",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 198,
            "endLine": 202
          }
        ],
        "sample": "      \n      // Invalid data\n      const hasInvalidNaN = invalidData.some(v => isNaN(v))\n      expect(hasInvalidNaN).toBe(true)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fb92cd86e3ae7413769fdf16d3e7aacf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 202,
            "endLine": 206
          },
          {
            "file": "packages/murmuraba/src/__tests__/vad/rnnoise-15-rules.test.ts",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "      // Undefined becomes NaN in Float32Array\n      const hasUndefinedNaN = undefinedData.some(v => isNaN(v))\n      expect(hasUndefinedNaN).toBe(true)\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a1087e9eb25ddaf1d60e945ec58485dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vitest.setup.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "  // Ensure window.document exists too\n  if (typeof global.window !== 'undefined') {\n    global.window.document = global.document;\n  }\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7508f847249a942c15594cdf1a15ab1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vitest.setup.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "  // Always return consistent format for tests\n  return `blob:mock-url-${urlCounter++}`;\n});\nglobal.URL.revokeObjectURL = vi.fn();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c183cd80b6ace40084edadfe90269a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/__tests__/vitest.setup.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/__tests__/vitest.setup.ts",
            "startLine": 168,
            "endLine": 172
          }
        ],
        "sample": "// Mock console methods - but allow them in debug mode\nif (process.env.DEBUG !== 'true') {\n  global.console = {\n    ...console,\n    log: vi.fn((...args) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e9d5bdf1f4efde12acd46be907ad9fda",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api/process-file-with-metrics.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api/process-file-with-metrics.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/api/process-file-with-metrics.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "  // Hook into the engine's frame processing\n  const originalProcessFrame = engine['processFrame'].bind(engine);\n  engine['processFrame'] = function(frame: Float32Array) {\n    const result = originalP...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79ff29720c6dd11d116a24abdac2c35a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api/process-file-with-metrics.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api/process-file-with-metrics.ts",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/src/api/process-file-with-metrics.ts",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "  \n  try {\n    // Process the file\n    const processedBuffer = await engine.processFile(arrayBuffer);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f3d95bce2eb7aa38889f5645f97e76d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "\nexport async function initializeAudioEngine(config?: MurmubaraConfig): Promise<void> {\n  if (globalEngine) {\n    throw new Error('Audio engine is already initialized. Call destroyEngine() first.');\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1cb1ba389ee86783a0610c563b95c62f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "\nexport async function processStream(stream: MediaStream) {\n  const engine = getEngine();\n  return engine.processStream(stream);\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c72bc2812978c57afb29e9ddd5af58d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "\nexport async function destroyEngine(options?: { force?: boolean }): Promise<void> {\n  if (!globalEngine) {\n    return;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "53fa7b34b559c4ba3578761521510fe6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 54,
            "endLine": 58
          }
        ],
        "sample": "\nexport function getDiagnostics() {\n  const engine = getEngine();\n  return engine.getDiagnostics();\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f7a33b8ce0aa5b70851f443214058b2c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "  // Return unsubscribe function\n  return () => {\n    engine.off('metrics-update', callback);\n  };\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78ff715e9cd55812c13cd1f6b7f6a7da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/api.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/api.ts",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "\nexport async function processFile(arrayBuffer: ArrayBuffer): Promise<ArrayBuffer> {\n  const engine = getEngine();\n  return engine.processFile(arrayBuffer);\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cbf2004f84ea9f1458732b2715b5dbaa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 51,
            "endLine": 55
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      expect(container.firstChild).toBeNull();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8cfd8c561460f25dbd4f8cd3eef76461",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      expect(screen.getByText('🔬 Engine Diagnostics')).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "937e1b2e67d14393c116804ad28b97c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "        />\n      );\n      \n      expect(screen.getByText('🔬 Engine Diagnostics')).toBeInTheDocument();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a640d594b6abd3b6a11cc7226175567",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "      );\n      \n      expect(screen.getByText('🔬 Engine Diagnostics')).toBeInTheDocument();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4c7a0da7a106f41e141f34656261efc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      const closeButton = screen.getByRole('button', { name: /close/i });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6272bced0c0fed62da3c9ebd76eb2739",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 280,
            "endLine": 284
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      expect(screen.getByText(/^Unknown$/)).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e78f95d74275f151f32fa31a244a6f2b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 281,
            "endLine": 285
          }
        ],
        "sample": "        />\n      );\n      \n      expect(screen.getByText(/^Unknown$/)).toBeInTheDocument();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4a584f78b664dd2fee0049eb52363e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 266,
            "endLine": 270
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 282,
            "endLine": 286
          }
        ],
        "sample": "      );\n      \n      expect(screen.getByText(/^Unknown$/)).toBeInTheDocument();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4dbffe4e6f994d2555f098d7d210679c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 348,
            "endLine": 352
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 380,
            "endLine": 384
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      expect(screen.getByText(/🟡 Moderate/)).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2b1a93827fd8d06893158b3ee7e05b0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 381,
            "endLine": 385
          }
        ],
        "sample": "        />\n      );\n      \n      expect(screen.getByText(/🟡 Moderate/)).toBeInTheDocument();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c1c55663bc9645928e0296becc55afdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 350,
            "endLine": 354
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 382,
            "endLine": 386
          }
        ],
        "sample": "      );\n      \n      expect(screen.getByText(/🟡 Moderate/)).toBeInTheDocument();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dea3904c49f67ae91320e4563ad9c4ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 364,
            "endLine": 368
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 396,
            "endLine": 400
          }
        ],
        "sample": "          onClose={mockOnClose}\n        />\n      );\n      \n      expect(screen.getByText(/🔴 High/)).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a672a3660ff291c9e4696b6ca0a534ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 365,
            "endLine": 369
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 397,
            "endLine": 401
          }
        ],
        "sample": "        />\n      );\n      \n      expect(screen.getByText(/🔴 High/)).toBeInTheDocument();\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2eb3e7d05327174b88fa607c8ef15e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 424,
            "endLine": 428
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 485,
            "endLine": 489
          }
        ],
        "sample": "      \n      expect(() => {\n        render(\n          <AdvancedMetricsPanel\n            isVisible={true}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0d38c60875214fec0d2b9d5ddf874fbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 425,
            "endLine": 429
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 486,
            "endLine": 490
          }
        ],
        "sample": "      expect(() => {\n        render(\n          <AdvancedMetricsPanel\n            isVisible={true}\n            diagnostics={diagnostics}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c87ea52ace7187ad385a5ac274b43ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 429,
            "endLine": 433
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/AdvancedMetricsPanel.test.tsx",
            "startLine": 490,
            "endLine": 494
          }
        ],
        "sample": "            diagnostics={diagnostics}\n            onClose={mockOnClose}\n          />\n        );\n      }).not.toThrow();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "33ce4e235523a7e380cf2d46c73ec994",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "    const onPlayingChange = jest.fn();\n    \n    render(\n      <SyncedWaveforms\n        originalAudioUrl={mockAudioUrl1}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e14d3d0fb7f44733eb5631d91f639171",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "    \n    render(\n      <SyncedWaveforms\n        originalAudioUrl={mockAudioUrl1}\n        processedAudioUrl={mockAudioUrl2}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ebb9f4c2cfb725c39e0a5c1d0fe71af7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "    render(\n      <SyncedWaveforms\n        originalAudioUrl={mockAudioUrl1}\n        processedAudioUrl={mockAudioUrl2}\n        onPlayingChange={onPlayingChange}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8fe1172e0d3bceb20e494b757e4245c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "      />\n    );\n    \n    const playButton = screen.getByLabelText('Play synchronized playback');\n    fireEvent.click(playButton);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "132a364380809d191cbf7a0eae2e9767",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "    );\n    \n    const playButton = screen.getByLabelText('Play synchronized playback');\n    fireEvent.click(playButton);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "838c1332ef29b3606ead7c75e01a76e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/SyncedWaveforms.test.tsx",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "    \n    // First play the audio\n    const playButton = screen.getByLabelText('Play synchronized playback');\n    fireEvent.click(playButton);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7955d2d54dcffad78a6cb3b77f82ee2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 75,
            "endLine": 79
          }
        ],
        "sample": "    } as unknown as MediaStream;\n\n    render(<WaveformAnalyzer stream={mockStream} />);\n\n    await waitFor(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c9d8b700b18cde764aaffb9e5cdd6a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "    });\n\n    const mockStream = {\n      getTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      getAudioTracks: vi.fn().mockReturnValue([{...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d35a4f2c14fcd031caf60215d1c42422",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "\n    const mockStream = {\n      getTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      getAudioTracks: vi.fn().mockReturnValue([{\n        enabled: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c148d87c7f5dc54cebe4955fddd508e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "    const mockStream = {\n      getTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      getAudioTracks: vi.fn().mockReturnValue([{\n        enabled: true,\n        readyState: 'live',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc61127e7d19f858ded048ad71ae7592",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 96,
            "endLine": 100
          }
        ],
        "sample": "      getTracks: vi.fn().mockReturnValue([{ kind: 'audio' }]),\n      getAudioTracks: vi.fn().mockReturnValue([{\n        enabled: true,\n        readyState: 'live',\n        label: 'Microphone',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9db28ac320222f122c8430d2ee4d14ec",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "      getAudioTracks: vi.fn().mockReturnValue([{\n        enabled: true,\n        readyState: 'live',\n        label: 'Microphone',\n        id: '123',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "37d4a7c4770c0e5a9a6deee4632f62f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "        enabled: true,\n        readyState: 'live',\n        label: 'Microphone',\n        id: '123',\n        muted: false...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b174f002421fe549eaf9869ec5f558fe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "        readyState: 'live',\n        label: 'Microphone',\n        id: '123',\n        muted: false\n      }])...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6f1ab28ccf923d8497c271ec592c558f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "        label: 'Microphone',\n        id: '123',\n        muted: false\n      }])\n    } as unknown as MediaStream;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4df3fc7693892da2ed3fd5dcb0dbf475",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "        id: '123',\n        muted: false\n      }])\n    } as unknown as MediaStream;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d9fe45362506a23394699a697c0a67a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "        muted: false\n      }])\n    } as unknown as MediaStream;\n\n    render(<WaveformAnalyzer stream={mockStream} />);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "190b7132c4d978fdeea02caa779ecf06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/components/__tests__/WaveformAnalyzer.test.tsx",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "      }])\n    } as unknown as MediaStream;\n\n    render(<WaveformAnalyzer stream={mockStream} />);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0eba987e4392ec2895f7c3f3bede5c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "    if (event.key === 'Escape') {\n      onClose();\n    }\n  }, [onClose]);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c24ffe8336f916cbfc864dd540252d64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "packages/murmuraba/src/components/advanced-metrics-panel/advanced-metrics-panel.tsx",
            "startLine": 106,
            "endLine": 110
          }
        ],
        "sample": "  // Format processing time safely  \n  const formatProcessingTime = useCallback((time: number): string => {\n    return `${time.toFixed(2)}ms`;\n  }, []);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1172c8ab2643cc1bf6a2adf1f87ef30c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/audio-player/audio-player.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/audio-player/audio-player.tsx",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/components/audio-player/audio-player.tsx",
            "startLine": 142,
            "endLine": 146
          }
        ],
        "sample": "    // Add all event listeners\n    eventHandlers.forEach((handler, event) => {\n      audio.addEventListener(event, handler);\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fba6e1a32fcd46271213b80e9635d5ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={30}\n          selectedChunk={null}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "98c27138972147d80161d6fb3550e70c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 440,
            "endLine": 444
          }
        ],
        "sample": "        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={30}\n          selectedChunk={null}\n          {...mockHandlers}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "388c50348a837975b7fb805adc1d7638",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 441,
            "endLine": 445
          }
        ],
        "sample": "          chunks={chunks}\n          averageNoiseReduction={30}\n          selectedChunk={null}\n          {...mockHandlers}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "14214c7426e52c24ad04baad2391496f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 442,
            "endLine": 446
          }
        ],
        "sample": "          averageNoiseReduction={30}\n          selectedChunk={null}\n          {...mockHandlers}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97ce2a45d4b97954121f7e9c042a358b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 410,
            "endLine": 414
          }
        ],
        "sample": "        />\n      );\n\n      // Check that ChunkHeader is rendered for each chunk\n      expect(screen.getByText('Chunk 1')).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e645ad3a7bcfe89dd804add752fd9fc9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 411,
            "endLine": 415
          }
        ],
        "sample": "      );\n\n      // Check that ChunkHeader is rendered for each chunk\n      expect(screen.getByText('Chunk 1')).toBeInTheDocument();\n      expect(screen.getByText('Chunk 2')).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b95480c7de3b6b7ae87a670513a7f08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 412,
            "endLine": 416
          }
        ],
        "sample": "\n      // Check that ChunkHeader is rendered for each chunk\n      expect(screen.getByText('Chunk 1')).toBeInTheDocument();\n      expect(screen.getByText('Chunk 2')).toBeInTheDocument();\n      expect(s...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd2b0c89699498e20e90cac920e4adc2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "      // Check that ChunkHeader is rendered for each chunk\n      expect(screen.getByText('Chunk 1')).toBeInTheDocument();\n      expect(screen.getByText('Chunk 2')).toBeInTheDocument();\n      expect(sc...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7f2e711e1c24da17687bd9185b7a3cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 456,
            "endLine": 460
          }
        ],
        "sample": "      const chunks = [createMockChunk(0)];\n      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "06484e823482e8f64f77b899b52b3f28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 228,
            "endLine": 232
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 256,
            "endLine": 260
          }
        ],
        "sample": "      const chunks = [{\n        ...createMockChunk(0),\n        isExpanded: true\n      }];\n      const user = userEvent.setup();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a1fc80506e9de07dfecf18b6688d3123",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 229,
            "endLine": 233
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 257,
            "endLine": 261
          }
        ],
        "sample": "        ...createMockChunk(0),\n        isExpanded: true\n      }];\n      const user = userEvent.setup();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2ec76856890b898f60b3972da413244",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "        isExpanded: true\n      }];\n      const user = userEvent.setup();\n      \n      render(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "330787cec444bc42ef45f5a7fa817993",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 259,
            "endLine": 263
          }
        ],
        "sample": "      }];\n      const user = userEvent.setup();\n      \n      render(\n        <ChunkProcessingResults...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea8cbff86f4842e9bad0524bc37db393",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 291,
            "endLine": 295
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 310,
            "endLine": 314
          }
        ],
        "sample": "      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={0}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9d10b4c2d8716119e66b89035b3ffbc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 292,
            "endLine": 296
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 311,
            "endLine": 315
          }
        ],
        "sample": "      render(\n        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={0}\n          selectedChunk={null}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1e2db7b372178103766bbf1105f4dc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 312,
            "endLine": 316
          }
        ],
        "sample": "        <ChunkProcessingResults\n          chunks={chunks}\n          averageNoiseReduction={0}\n          selectedChunk={null}\n          {...mockHandlers}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ea472e96809945a7242e5fc7daa595ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 313,
            "endLine": 317
          }
        ],
        "sample": "          chunks={chunks}\n          averageNoiseReduction={0}\n          selectedChunk={null}\n          {...mockHandlers}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d7bf29b963e631aba40d22c35d131fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 373,
            "endLine": 377
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 374,
            "endLine": 378
          }
        ],
        "sample": "\n      // Initially collapsed\n      let detailsButton = screen.getByRole('button', { name: /Expand details for chunk 1/i });\n      expect(detailsButton.querySelector('.btn__icon')?.textContent).toBe('...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ea8c3dad87b37dfa49f8290095c7d61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 402,
            "endLine": 406
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 437,
            "endLine": 441
          }
        ],
        "sample": "      ];\n      \n      render(\n        <ChunkProcessingResults\n          chunks={chunks}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41c2e486334d38f05092cd667832bf8a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 418,
            "endLine": 422
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 419,
            "endLine": 423
          }
        ],
        "sample": "\n      // Check playing state\n      const pauseButton = screen.getByRole('button', { name: /Pause processed chunk 2/i });\n      expect(pauseButton).toBeInTheDocument();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e21a5580d669e54566e97a7fd65542c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 423,
            "endLine": 427
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 424,
            "endLine": 428
          }
        ],
        "sample": "      // Check expanded state\n      const chunk3 = screen.getByTestId('chunk-chunk-2');\n      const detailsSection = chunk3.querySelector('.chunk__details');\n      expect(detailsSection).toHaveStyle({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f05968d9d7061b85e194e7f0b1d0301e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 467,
            "endLine": 471
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 468,
            "endLine": 472
          }
        ],
        "sample": "      // Check ARIA labels\n      expect(screen.getByRole('region', { name: 'Processing Results' })).toBeInTheDocument();\n      expect(screen.getByRole('list')).toBeInTheDocument();\n      expect(screen...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "83f55b2fc0a36bf6cdadbe8425e7010e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 494,
            "endLine": 498
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 495,
            "endLine": 499
          }
        ],
        "sample": "      \n      // Focus the button\n      playButton.focus();\n      expect(playButton).toHaveFocus();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b5054456e6406ba76622b9748ea6234a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 498,
            "endLine": 502
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/__tests__/chunk-processing-results.e2e.test.tsx",
            "startLine": 499,
            "endLine": 503
          }
        ],
        "sample": "      \n      // Press Enter to activate\n      await user.keyboard('{Enter}');\n      expect(mockHandlers.onTogglePlayback).toHaveBeenCalled();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7af550338f72a7749431b9c08df90be8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/chunk-processing-results.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/chunk-processing-results.tsx",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/chunk-processing-results.tsx",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "  /** Callback to download chunk */\n  onDownloadChunk: (chunkId: string, format: 'webm' | 'wav' | 'mp3', audioType: 'processed' | 'original') => Promise<void>;\n  /** Additional CSS classes */\n  classN...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7bce86b9a4c53f9a7210e6417822d3b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-processing-results/chunk-processing-results.tsx",
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-processing-results/chunk-processing-results.tsx",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "    chunkId: string, \n    format: 'webm' | 'wav' | 'mp3',\n    audioType: 'processed' | 'original'\n  ) => {\n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc610e8030b80eaa80accf5aa481715b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 144,
            "endLine": 148
          }
        ],
        "sample": "        <AudioControls \n          {...defaultProps} \n          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n          isPlaying={true}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2756ef623cd6883a63815b314bcf06c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 145,
            "endLine": 149
          }
        ],
        "sample": "          {...defaultProps} \n          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n          isPlaying={true}\n        />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e7a798fb1fa43176038612c16583b14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 146,
            "endLine": 150
          }
        ],
        "sample": "          processedAudioUrl=\"processed.wav\"\n          originalAudioUrl=\"original.wav\"\n          isPlaying={true}\n        />\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d45192428cee40d303676d6b7ec53765",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 147,
            "endLine": 151
          }
        ],
        "sample": "          originalAudioUrl=\"original.wav\"\n          isPlaying={true}\n        />\n      );\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c31814d6bca75cc491cde23e6c49e03b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "        />\n      );\n\n      expect(SyncedWaveforms).toHaveBeenCalledWith(\n        expect.objectContaining({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b23181ab0f0604fa32dcdcd11857cec1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/AudioControls.integration.test.tsx",
            "startLine": 199,
            "endLine": 203
          }
        ],
        "sample": "      // Check structure - synced waveforms container should contain the waveforms\n      const waveformsContainer = container.querySelector('.synced-waveforms-container');\n      expect(waveformsContai...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "518507620dcbaa7b65ecee09eabab04e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkHeader.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkHeader.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 67,
            "endLine": 71
          }
        ],
        "sample": "    \n    expect(screen.getByText('Pause')).toBeInTheDocument();\n    expect(screen.getByText('⏸️')).toBeInTheDocument();\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "13bd15e8b898aa008fe890a8cdfbab62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "    averageNoiseReduction: 75.5,\n    selectedChunk: null,\n    onTogglePlayback: vi.fn(),\n    onToggleExpansion: vi.fn(),\n    onClearAll: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4e0e648e17a5ce2e735355dfe44fa61f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "    selectedChunk: null,\n    onTogglePlayback: vi.fn(),\n    onToggleExpansion: vi.fn(),\n    onClearAll: vi.fn(),\n    onExportWav: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b60a3657bd5de0778a770b3761898b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "    onTogglePlayback: vi.fn(),\n    onToggleExpansion: vi.fn(),\n    onClearAll: vi.fn(),\n    onExportWav: vi.fn(),\n    onExportMp3: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "37a6badf8a450edec5c44f838cebde83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 12,
            "endLine": 16
          }
        ],
        "sample": "    onToggleExpansion: vi.fn(),\n    onClearAll: vi.fn(),\n    onExportWav: vi.fn(),\n    onExportMp3: vi.fn(),\n    onDownloadChunk: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa2d2eb6859c556e2cf64dae9eef06eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 13,
            "endLine": 17
          }
        ],
        "sample": "    onClearAll: vi.fn(),\n    onExportWav: vi.fn(),\n    onExportMp3: vi.fn(),\n    onDownloadChunk: vi.fn()\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0c12fc65d8eaab78715208681fce02e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "    onExportWav: vi.fn(),\n    onExportMp3: vi.fn(),\n    onDownloadChunk: vi.fn()\n  };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c887a20487a8873cafdc175c9a5429ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "    onExportMp3: vi.fn(),\n    onDownloadChunk: vi.fn()\n  };\n\n  const createChunkWithVAD = (id: string, averageVad: number): ProcessedChunk => ({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2cd3be2370bed0d2e253d8f5a173990",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "    onDownloadChunk: vi.fn()\n  };\n\n  const createChunkWithVAD = (id: string, averageVad: number): ProcessedChunk => ({\n    id,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce55da6e6d5b4cf4097c8a659b2f1426",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 26,
            "endLine": 30
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "  };\n\n  const createChunkWithVAD = (id: string, averageVad: number): ProcessedChunk => ({\n    id,\n    startTime: Date.now() - 10000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "53718d226b1bd0fd20dfea9b7e80bcff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "\n  const createChunkWithVAD = (id: string, averageVad: number): ProcessedChunk => ({\n    id,\n    startTime: Date.now() - 10000,\n    endTime: Date.now(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "21ce543ae712a82e88a739e7bf52fb94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "  const createChunkWithVAD = (id: string, averageVad: number): ProcessedChunk => ({\n    id,\n    startTime: Date.now() - 10000,\n    endTime: Date.now(),\n    duration: 10000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7cc37c7f76885013d2db9c6e047f5c84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "    id,\n    startTime: Date.now() - 10000,\n    endTime: Date.now(),\n    duration: 10000,\n    originalSize: 1024000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7fb0176fc2114c4c43bb6fad7e644fbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "    startTime: Date.now() - 10000,\n    endTime: Date.now(),\n    duration: 10000,\n    originalSize: 1024000,\n    processedSize: 950000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb2ba2a96ea3ac7fc606e0db2c9f6deb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "    endTime: Date.now(),\n    duration: 10000,\n    originalSize: 1024000,\n    processedSize: 950000,\n    noiseRemoved: 74000,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c678bbb2f0eb4721ea1a3a153b0af557",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "    duration: 10000,\n    originalSize: 1024000,\n    processedSize: 950000,\n    noiseRemoved: 74000,\n    averageVad,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "833c6d60d644276a2d6c5b4662c27607",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "    originalSize: 1024000,\n    processedSize: 950000,\n    noiseRemoved: 74000,\n    averageVad,\n    vadData: [...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "83720f26a387b520134bf74383e3545c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "    processedSize: 950000,\n    noiseRemoved: 74000,\n    averageVad,\n    vadData: [\n      { time: 0, vad: 0.2 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1408ab0fcf43eebda0fdd5b15ac5ed56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "    noiseRemoved: 74000,\n    averageVad,\n    vadData: [\n      { time: 0, vad: 0.2 },\n      { time: 1, vad: 0.8 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6878c0901b02d720995aaf20bf59b0ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 27,
            "endLine": 31
          }
        ],
        "sample": "    averageVad,\n    vadData: [\n      { time: 0, vad: 0.2 },\n      { time: 1, vad: 0.8 },\n      { time: 2, vad: 0.9 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "233b63299ac83db5d3dfa15e70c1d9f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "    vadData: [\n      { time: 0, vad: 0.2 },\n      { time: 1, vad: 0.8 },\n      { time: 2, vad: 0.9 },\n      { time: 3, vad: 0.7 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1079175c2938b611a5e8b73435f3e53e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "      { time: 1, vad: 0.8 },\n      { time: 2, vad: 0.9 },\n      { time: 3, vad: 0.7 },\n      { time: 4, vad: 0.3 }\n    ],...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c772ac4b51ebe3da8747ade9fdcd71e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 31,
            "endLine": 35
          }
        ],
        "sample": "      { time: 2, vad: 0.9 },\n      { time: 3, vad: 0.7 },\n      { time: 4, vad: 0.3 }\n    ],\n    metrics: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "82630fa3952595534340bc957495b511",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "      { time: 3, vad: 0.7 },\n      { time: 4, vad: 0.3 }\n    ],\n    metrics: {\n      processingLatency: 45.2,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f82bdd12100df3541059649906a5a4c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "      { time: 4, vad: 0.3 }\n    ],\n    metrics: {\n      processingLatency: 45.2,\n      frameCount: 100,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b522a78245b45f5e2ee4dc8248d5a614",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "    ],\n    metrics: {\n      processingLatency: 45.2,\n      frameCount: 100,\n      inputLevel: 0.8,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a23fd6ccff6e5b5d88dc7281fbf0df56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "    metrics: {\n      processingLatency: 45.2,\n      frameCount: 100,\n      inputLevel: 0.8,\n      outputLevel: 0.7,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "acd51fdb80d73f3a59180f03e3cc7c20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "      processingLatency: 45.2,\n      frameCount: 100,\n      inputLevel: 0.8,\n      outputLevel: 0.7,\n      noiseReductionLevel: 0.755,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "56bf87191fc0cfbc13762216f2ab9fd8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "      frameCount: 100,\n      inputLevel: 0.8,\n      outputLevel: 0.7,\n      noiseReductionLevel: 0.755,\n      timestamp: Date.now(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e8716473d2b93c90bc925feed003b738",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "      inputLevel: 0.8,\n      outputLevel: 0.7,\n      noiseReductionLevel: 0.755,\n      timestamp: Date.now(),\n      droppedFrames: 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "894e1fb83545fd3082204150fa2b9434",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 39,
            "endLine": 43
          }
        ],
        "sample": "      outputLevel: 0.7,\n      noiseReductionLevel: 0.755,\n      timestamp: Date.now(),\n      droppedFrames: 0\n    },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "081e122e5b19c00d973dae6367326640",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 40,
            "endLine": 44
          }
        ],
        "sample": "      noiseReductionLevel: 0.755,\n      timestamp: Date.now(),\n      droppedFrames: 0\n    },\n    isPlaying: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09c097f22ff405a367408c9ad503f5b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "      timestamp: Date.now(),\n      droppedFrames: 0\n    },\n    isPlaying: false,\n    isExpanded: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "edff7e4c0b63a08c83d573a58d87a8cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "      droppedFrames: 0\n    },\n    isPlaying: false,\n    isExpanded: false,\n    isValid: true...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f6baf00de992f94d793423e2e9df3c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "    },\n    isPlaying: false,\n    isExpanded: false,\n    isValid: true\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff2ee57a88bc9686d86a149227643804",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/ChunkProcessingResults.test.tsx",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "    isPlaying: false,\n    isExpanded: false,\n    isValid: true\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "720a8f8f9811462d44fcec2b98818176",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "    render(\n      <VadDisplay \n        averageVad={0.60} \n        vadData={mockVadData}\n        chunkIndex={0}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de939c77deb4c1998ccc8b90c8c8ec16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 79,
            "endLine": 83
          }
        ],
        "sample": "      <VadDisplay \n        averageVad={0.60} \n        vadData={mockVadData}\n        chunkIndex={0}\n      />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03f2988e0e464d1a0af94d329fd1ae47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/VadDisplay.test.tsx",
            "startLine": 80,
            "endLine": 84
          }
        ],
        "sample": "        averageVad={0.60} \n        vadData={mockVadData}\n        chunkIndex={0}\n      />\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "87b6a5abbd6f0dbc182c52b1810ee845",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/__tests__/integration.test.tsx",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "    \n    render(<ChunkProcessingResults {...mockProps} chunks={[chunk]} />);\n    \n    // Should display VAD component\n    expect(screen.getByText('Voice Activity Detection')).toBeInTheDocument();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9ab5a81cde38d3c41902dfc6811878d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/formatters.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/formatters.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/formatters.ts",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "  \n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex++;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b85b9a1876981043ac438cd30fde6c18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/chunk-results/vad-timeline/vad-timeline.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/chunk-results/vad-timeline/vad-timeline.tsx",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/src/components/chunk-results/vad-timeline/vad-timeline.tsx",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\ninterface IVadTimelineProps {\n  vadData: Array<{ time: number; vad: number }>;\n  chunkId: string;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1870441c59a5491ad6505b5cb82260ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "\n  public componentDidUpdate(prevProps: IErrorBoundaryProps) {\n    const { resetOnPropsChange } = this.props;\n    const { hasError } = this.state;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "20f5ca0f4b12fdf529e7b6636bede39a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 49,
            "endLine": 53
          }
        ],
        "sample": "    // Reset error state if props change and resetOnPropsChange is enabled\n    if (resetOnPropsChange && hasError && prevProps.children !== this.props.children) {\n      this.resetErrorBoundary();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78c40ac7cb0bb0e3a6e73e0c4efcc6c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
          "src/shared/components/ErrorBoundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b8b2b47d6c3363875e458ab4c47326ce",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
          "src/shared/components/ErrorBoundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "      hasError: false,\n      error: null,\n      errorInfo: null\n    });\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34de53c66e1cb223039367462924722f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 95,
            "endLine": 99
          }
        ],
        "sample": "      // Use custom fallback if provided\n      if (fallback) {\n        return fallback(error, errorInfo!);\n      }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b542c9b1f810ba7e8d6670b760bb5802",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/error-boundary/error-boundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "packages/murmuraba/src/components/error-boundary/error-boundary.tsx",
            "startLine": 116,
            "endLine": 120
          }
        ],
        "sample": "            \n            <p style={defaultStyles.message}>\n              The audio processing application encountered an unexpected error. \n              This might be due to browser compatibility or ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96dea41095040030509f1c3904340989",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "        // Clean up previous context\n        if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n          await audioContextRef.current.close();\n        }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "998f4548e5a43c3e0b6192259d6a3e2c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "        // Create new AudioContext\n        const audioContext = new AudioContext();\n        if (audioContext.state === 'suspended') {\n          await audioContext.resume();\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb11d4c044a23c63bc47b38cd0f9998f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 48,
            "endLine": 52
          }
        ],
        "sample": "        // Create analyser\n        const analyser = audioContext.createAnalyser();\n        analyser.fftSize = 2048;\n        analyser.smoothingTimeConstant = 0.8;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a696fee50ba53f680fde866776d629bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "\n        // Create source and connect\n        const source = audioContext.createMediaStreamSource(stream);\n        source.connect(analyser);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8dc8a3239cda980697dc2b2ee65fa0b6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "\n        // Clear canvas\n        ctx.fillStyle = '#0A0B0E';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8293335786cbd07844b377066593e9c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 295,
            "endLine": 299
          }
        ],
        "sample": "\n        for (let i = 0; i < bufferLength; i++) {\n          const v = dataArray[i] / 128.0;\n          const y = v * canvas.height / 2;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de09787a20636918c9c45a427d2e8e20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 296,
            "endLine": 300
          }
        ],
        "sample": "        for (let i = 0; i < bufferLength; i++) {\n          const v = dataArray[i] / 128.0;\n          const y = v * canvas.height / 2;\n\n          if (i === 0) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "244f857491e13447046e1ebbd0a1c3c1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 297,
            "endLine": 301
          }
        ],
        "sample": "          const v = dataArray[i] / 128.0;\n          const y = v * canvas.height / 2;\n\n          if (i === 0) {\n            ctx.moveTo(x, y);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a399b39e6af4f9dbbd24c6220f64af9d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "\n        // Draw amplitude meter\n        const average = dataArray.reduce((sum, value) => sum + Math.abs(value - 128), 0) / bufferLength;\n        const normalizedAmplitude = average / 128;\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "855e607aaebed98a8e41782972e4b0eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "        \n        // Meter border\n        ctx.strokeStyle = '#2E3039';\n        ctx.strokeRect(10, 10, 100, 10);\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bda88cb49c1fc85f24cdafcc0dc0fd19",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/simple-waveform-analyzer/simple-waveform-analyzer.tsx",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "      }\n      if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\n        audioContextRef.current.close();\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e387ed6b314e5615d00561f15fb20b1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 66,
            "endLine": 70
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 645,
            "endLine": 649
          }
        ],
        "sample": "\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (disabled) return;\n    \n    if (event.key === 'Enter' || event.key === ' ') {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "39426dc813ceb67a2e730cb10442bc2e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 646,
            "endLine": 650
          }
        ],
        "sample": "  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (disabled) return;\n    \n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c49f65f99ac321594bef10b8322fbf6a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 273,
            "endLine": 277
          }
        ],
        "sample": "                      width: 20px;\n                      height: 20px;\n                      background: white;\n                      border: 3px solid ${column.color};\n                      border-ra...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cc99d3f7e6428de77f667d178072b177",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 260,
            "endLine": 264
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 274,
            "endLine": 278
          }
        ],
        "sample": "                      height: 20px;\n                      background: white;\n                      border: 3px solid ${column.color};\n                      border-radius: 50%;\n                      cu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f640bed09bc2be9e4691beed7fe87645",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 261,
            "endLine": 265
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 275,
            "endLine": 279
          }
        ],
        "sample": "                      background: white;\n                      border: 3px solid ${column.color};\n                      border-radius: 50%;\n                      cursor: ${disabled ? 'not-allowed' : '...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae042fde79225366b2f310629607cbc2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 276,
            "endLine": 280
          }
        ],
        "sample": "                      border: 3px solid ${column.color};\n                      border-radius: 50%;\n                      cursor: ${disabled ? 'not-allowed' : 'pointer'};\n                      box-shad...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d372b89e9b06833cff33b7bf4dab00c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 277,
            "endLine": 281
          }
        ],
        "sample": "                      border-radius: 50%;\n                      cursor: ${disabled ? 'not-allowed' : 'pointer'};\n                      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n                      t...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79cdba6ae0db220d32495725593e3295",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 316,
            "endLine": 320
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 357,
            "endLine": 361
          }
        ],
        "sample": "              border: 'none',\n              borderRadius: '12px',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0e2a9185c6021cc81a30ed85d5fcae96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 317,
            "endLine": 321
          },
          {
            "file": "packages/murmuraba/src/components/synced-waveforms/synced-waveforms.tsx",
            "startLine": 358,
            "endLine": 362
          }
        ],
        "sample": "              borderRadius: '12px',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "888c47b82f33145afcf93c4a749a9337",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 636,
            "endLine": 640
          }
        ],
        "sample": "    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = 0;\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "39a58f541bffd3b7bd5e17f19d9c1fc6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 79,
            "endLine": 83
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 80,
            "endLine": 84
          }
        ],
        "sample": "    \n    if (audioContext && audioContext.state !== 'closed') {\n      audioContext.close().catch(console.error);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e1c34a122d71e9d3af7ba478d009105",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 271,
            "endLine": 275
          }
        ],
        "sample": "    gradient.addColorStop(1, '#13141A');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw a simple static waveform line...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b67dfd6f9332a8c4048bc262c9b0cd42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "        \n      } else {\n        dataArray.fill(0);\n        waveformData.fill(128);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09167ac6af78f20e83f61b90027cef27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 158,
            "endLine": 162
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 274,
            "endLine": 278
          }
        ],
        "sample": "      // Draw frequency bars\n      const barWidth = (canvas.width / bufferLength) * 2.5;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a257831976981070ba441d482ca358c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 282,
            "endLine": 286
          }
        ],
        "sample": "        ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n        x += barWidth + 1;\n      }\n\n      // Draw main waveform...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9d0179ba75857ccf4194dea0762e748",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 285,
            "endLine": 289
          }
        ],
        "sample": "\n      // Draw main waveform\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = color;\n      ctx.shadowBlur = 10;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ff031d54d9e15ae81387acd55eb9ece",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 170,
            "endLine": 174
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 286,
            "endLine": 290
          }
        ],
        "sample": "      // Draw main waveform\n      ctx.lineWidth = 3;\n      ctx.strokeStyle = color;\n      ctx.shadowBlur = 10;\n      ctx.shadowColor = color;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2994a95264ca2bfe5916ecfc0c8832b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 287,
            "endLine": 291
          }
        ],
        "sample": "      ctx.lineWidth = 3;\n      ctx.strokeStyle = color;\n      ctx.shadowBlur = 10;\n      ctx.shadowColor = color;\n      ctx.beginPath();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ddce622c54b43d72a95423b66f1bea16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 172,
            "endLine": 176
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 288,
            "endLine": 292
          }
        ],
        "sample": "      ctx.strokeStyle = color;\n      ctx.shadowBlur = 10;\n      ctx.shadowColor = color;\n      ctx.beginPath();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50194857be9e848398457b61a53632bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 289,
            "endLine": 293
          }
        ],
        "sample": "      ctx.shadowBlur = 10;\n      ctx.shadowColor = color;\n      ctx.beginPath();\n\n      const sliceWidth = canvas.width / bufferLength;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "77d4b59879cefe6325c4e5fb0eb979ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 290,
            "endLine": 294
          }
        ],
        "sample": "      ctx.shadowColor = color;\n      ctx.beginPath();\n\n      const sliceWidth = canvas.width / bufferLength;\n      x = 0;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "330d16e00a96607f6ecfc7c28e9a733d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 291,
            "endLine": 295
          }
        ],
        "sample": "      ctx.beginPath();\n\n      const sliceWidth = canvas.width / bufferLength;\n      x = 0;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c50ef44fd6d4a9ad6202df5423fa9878",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 292,
            "endLine": 296
          }
        ],
        "sample": "\n      const sliceWidth = canvas.width / bufferLength;\n      x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e69b55c3619895d460259786dfc112db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n        x += sliceWidth;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f0b6c7ea274b8ea9b056866b7bf4a9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 304,
            "endLine": 308
          }
        ],
        "sample": "        }\n        x += sliceWidth;\n      }\n\n      ctx.lineTo(canvas.width, canvas.height / 2);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "063fb86ccb7a6025d0c7e3cac43f73b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 306,
            "endLine": 310
          }
        ],
        "sample": "      }\n\n      ctx.lineTo(canvas.width, canvas.height / 2);\n      ctx.stroke();\n      ctx.shadowBlur = 0;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "47f0f118164a1613541f4a5f86d68861",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 323,
            "endLine": 327
          }
        ],
        "sample": "      ctx.fillStyle = ampGradient;\n      ctx.fillRect(10, 10, normalizedAmplitude * 100, 10);\n      \n      ctx.strokeStyle = '#2E3039';\n      ctx.strokeRect(10, 10, 100, 10);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9a509563d874f9feb5e962260fcdecc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 324,
            "endLine": 328
          }
        ],
        "sample": "      ctx.fillRect(10, 10, normalizedAmplitude * 100, 10);\n      \n      ctx.strokeStyle = '#2E3039';\n      ctx.strokeRect(10, 10, 100, 10);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d9aafbf44c3cd16ead5476edd093e3b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 326,
            "endLine": 330
          }
        ],
        "sample": "      ctx.strokeStyle = '#2E3039';\n      ctx.strokeRect(10, 10, 100, 10);\n      \n      ctx.fillStyle = '#CACBDA';\n      ctx.font = '12px monospace';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bfaade8e39ba44189d43076bfee5e18a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 212,
            "endLine": 216
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 213,
            "endLine": 217
          }
        ],
        "sample": "      \n      ctx.fillStyle = '#CACBDA';\n      ctx.font = '12px monospace';\n      ctx.fillText(`Volume: ${(normalizedAmplitude * 100).toFixed(1)}%`, 10, 35);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "be1a5ee2011f8ee2890e978f888b0e20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 229,
            "endLine": 233
          }
        ],
        "sample": "          ctx.beginPath();\n          ctx.arc(canvas.width - 20, 20, 5, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.fillStyle = '#CACBDA';\n          ctx.font = '10px monospace';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9d55eb7996dcaf3104cdb4d125e17d75",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 249,
            "endLine": 253
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 250,
            "endLine": 254
          }
        ],
        "sample": "    // If no analyser, draw a static waveform\n    if (!analyser) {\n      drawStaticWaveform(ctx, canvas);\n      return;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68ec04e98571d7ac8e7355b33d9589ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 263,
            "endLine": 267
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 264,
            "endLine": 268
          }
        ],
        "sample": "      \n      // Get audio data\n      analyser.getByteTimeDomainData(dataArray);\n      analyser.getByteFrequencyData(frequencyData);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "517857ce6dffb42988ed5c5f86211dc8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 329,
            "endLine": 333
          }
        ],
        "sample": "      \n      ctx.fillStyle = '#CACBDA';\n      ctx.font = '12px monospace';\n      ctx.fillText(`Level: ${(normalizedAmplitude * 100).toFixed(1)}%`, 10, 35);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3596fd354c27e60cfd67f39bd7c81adf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 351,
            "endLine": 355
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "\n  // Initialization functions\n  const initializeAudio = useCallback(async () => {\n    if (!audioRef.current || disabled) return;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7aa9d0c994d49e75dd5c158961491f4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 357,
            "endLine": 361
          }
        ],
        "sample": "    // If we already have a working context with analyser, reuse it\n    if (audioContext && audioContext.state !== 'closed' && analyser && source) {\n      console.log('WaveformAnalyzer: Reusing existi...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "42215fa3b23ca1100541077a2f7560e2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 414,
            "endLine": 418
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 415,
            "endLine": 419
          }
        ],
        "sample": "    // If we already have an audio context for this stream, don't create a new one\n    if (audioContext && source && source instanceof MediaStreamAudioSourceNode) {\n      console.log('WaveformAnalyzer...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bad70e6190457170a12b1b34257409d0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 462,
            "endLine": 466
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 463,
            "endLine": 467
          }
        ],
        "sample": "      // Clean up previous context if it exists\n      if (audioContext && audioContext.state !== 'closed') {\n        console.log('Closing previous AudioContext...');\n        await audioContext.close()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f0f68ce03a7d0044b1390280d95332e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 517,
            "endLine": 521
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 518,
            "endLine": 522
          }
        ],
        "sample": "  // Update stream ref when stream changes\n  useEffect(() => {\n    streamRef.current = stream;\n  }, [stream]);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ca95dc3743df2c6320c6382c7690d2c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 529,
            "endLine": 533
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 618,
            "endLine": 622
          }
        ],
        "sample": "    }\n    \n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1571039c598e93729e4593fe06801ba5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 553,
            "endLine": 557
          },
          {
            "file": "packages/murmuraba/src/components/waveform-analyzer/waveform-analyzer.tsx",
            "startLine": 554,
            "endLine": 558
          }
        ],
        "sample": "      \n      return () => clearTimeout(timer);\n    }\n  }, [audioUrl, hideControls, disabled, audioContext, initializeAudio]);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d3ab803383eb2d37254578b2df221ed3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 4,
            "endLine": 8
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 5,
            "endLine": 9
          }
        ],
        "sample": "\ndescribe('MurmubaraEngine - Gain Control', () => {\n  let engine: MurmubaraEngine;\n\n  beforeEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "886458b0e1c7eae696b812fa5044aefa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "    // Mock AudioContext\n    global.AudioContext = vi.fn().mockImplementation(() => ({\n      createMediaStreamSource: vi.fn(),\n      createMediaStreamDestination: vi.fn(() => ({\n        stream: new Me...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "87e8ab5c3e61f10071d5baff2c4bb1f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 10,
            "endLine": 14
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 127,
            "endLine": 131
          }
        ],
        "sample": "    global.AudioContext = vi.fn().mockImplementation(() => ({\n      createMediaStreamSource: vi.fn(),\n      createMediaStreamDestination: vi.fn(() => ({\n        stream: new MediaStream()\n      })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9835eb7b668af7f54012361e29a95b1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn(),\n        onaudioprocess: null\n      })),\n      createGain: vi.fn(() => ({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ccb6260d28d64f816048aa0d53517b2b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "        disconnect: vi.fn(),\n        onaudioprocess: null\n      })),\n      createGain: vi.fn(() => ({\n        gain: { value: 1.0 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3cb9c8e6cc12461fd8626b4bffd28750",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "        onaudioprocess: null\n      })),\n      createGain: vi.fn(() => ({\n        gain: { value: 1.0 },\n        connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "adc33376bb3542170901cb12b78793f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 136,
            "endLine": 140
          }
        ],
        "sample": "      })),\n      createGain: vi.fn(() => ({\n        gain: { value: 1.0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee695f74b26176ed93411791821521dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 137,
            "endLine": 141
          }
        ],
        "sample": "      createGain: vi.fn(() => ({\n        gain: { value: 1.0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1924d4096a0dd9205d193b694229cf1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 138,
            "endLine": 142
          }
        ],
        "sample": "        gain: { value: 1.0 },\n        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),\n      createBiquadFilter: vi.fn(() => ({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2659119cda1e2d00c51f3264810c25e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn()\n      })),\n      createBiquadFilter: vi.fn(() => ({\n        type: 'notch',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d51640e5343257321919385c44605eb5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 140,
            "endLine": 144
          }
        ],
        "sample": "        disconnect: vi.fn()\n      })),\n      createBiquadFilter: vi.fn(() => ({\n        type: 'notch',\n        frequency: { value: 1000 },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "db940068a366a0bf55fd74c5b8d5f95d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 150,
            "endLine": 154
          }
        ],
        "sample": "      sampleRate: 48000,\n      state: 'running',\n      destination: { maxChannelCount: 2 },\n      close: vi.fn().mockResolvedValue(undefined)\n    })) as any;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3bd4569fa055ac589a44ad4968d3c69f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 151,
            "endLine": 155
          }
        ],
        "sample": "      state: 'running',\n      destination: { maxChannelCount: 2 },\n      close: vi.fn().mockResolvedValue(undefined)\n    })) as any;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b56cf1ae01281613f2a68fe3962cebb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "      destination: { maxChannelCount: 2 },\n      close: vi.fn().mockResolvedValue(undefined)\n    })) as any;\n\n    // Mock WebAssembly...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "483b7dd9ede8f61b8c7aec7da4cf59e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "      close: vi.fn().mockResolvedValue(undefined)\n    })) as any;\n\n    // Mock WebAssembly\n    global.WebAssembly = {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf3aa3c501749880d6779eda63f82941",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "    })) as any;\n\n    // Mock WebAssembly\n    global.WebAssembly = {\n      instantiate: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "763b7527a592ffa688a94dfa5e31d626",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 38,
            "endLine": 42
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 155,
            "endLine": 159
          }
        ],
        "sample": "\n    // Mock WebAssembly\n    global.WebAssembly = {\n      instantiate: vi.fn(),\n      compile: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74e2d14856c445551befa61d49ca95d2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 156,
            "endLine": 160
          }
        ],
        "sample": "    // Mock WebAssembly\n    global.WebAssembly = {\n      instantiate: vi.fn(),\n      compile: vi.fn(),\n      Module: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "483c2f4db7f8a5f21e9076a6f9e5dbc2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "    global.WebAssembly = {\n      instantiate: vi.fn(),\n      compile: vi.fn(),\n      Module: vi.fn() as any,\n      Instance: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1302f5db15b6f1c07a1247b2a698da34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "      instantiate: vi.fn(),\n      compile: vi.fn(),\n      Module: vi.fn() as any,\n      Instance: vi.fn() as any,\n      Memory: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ec51b5805b9cc36de98aeafa263ab541",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "      compile: vi.fn(),\n      Module: vi.fn() as any,\n      Instance: vi.fn() as any,\n      Memory: vi.fn() as any,\n      Table: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "592335a1b7fd1938dec9ef47ea29ea8b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 160,
            "endLine": 164
          }
        ],
        "sample": "      Module: vi.fn() as any,\n      Instance: vi.fn() as any,\n      Memory: vi.fn() as any,\n      Table: vi.fn() as any,\n      Global: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dc42c225127815b89176e0bb21df8898",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 44,
            "endLine": 48
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 161,
            "endLine": 165
          }
        ],
        "sample": "      Instance: vi.fn() as any,\n      Memory: vi.fn() as any,\n      Table: vi.fn() as any,\n      Global: vi.fn() as any,\n      Tag: vi.fn() as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7cb3250c268b55d517758a2d60bc1bb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "      Memory: vi.fn() as any,\n      Table: vi.fn() as any,\n      Global: vi.fn() as any,\n      Tag: vi.fn() as any,\n      CompileError: Error as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d38e89e939bbf8b96e923af828af8fbe",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "      Table: vi.fn() as any,\n      Global: vi.fn() as any,\n      Tag: vi.fn() as any,\n      CompileError: Error as any,\n      LinkError: Error as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "736d3f6a3ca1b81e588015c2aa84ca29",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "      Global: vi.fn() as any,\n      Tag: vi.fn() as any,\n      CompileError: Error as any,\n      LinkError: Error as any,\n      RuntimeError: Error as any,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "df0ed94a3b99655591bd5e5679306c16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 165,
            "endLine": 169
          }
        ],
        "sample": "      Tag: vi.fn() as any,\n      CompileError: Error as any,\n      LinkError: Error as any,\n      RuntimeError: Error as any,\n      instantiateStreaming: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "88dfa1e299267f116bbb708eeca5a9a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 166,
            "endLine": 170
          }
        ],
        "sample": "      CompileError: Error as any,\n      LinkError: Error as any,\n      RuntimeError: Error as any,\n      instantiateStreaming: vi.fn()\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3fb844cb49cbe617237eea337980dbb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "      LinkError: Error as any,\n      RuntimeError: Error as any,\n      instantiateStreaming: vi.fn()\n    };\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "31fd6995def02feb8d88d4ee5a9d91c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 168,
            "endLine": 172
          }
        ],
        "sample": "      RuntimeError: Error as any,\n      instantiateStreaming: vi.fn()\n    };\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b84ea95332b58fb0953accc248f547f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 211,
            "endLine": 215
          }
        ],
        "sample": "      // Mock the WASM module loading\n      vi.mock('../../utils/rnnoise-loader', () => ({\n        loadRNNoiseModule: vi.fn().mockResolvedValue({\n          _rnnoise_create: vi.fn().mockReturnValue(1),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96a9d5a2073cd5e4bdf6448e3112b5a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 212,
            "endLine": 216
          }
        ],
        "sample": "      vi.mock('../../utils/rnnoise-loader', () => ({\n        loadRNNoiseModule: vi.fn().mockResolvedValue({\n          _rnnoise_create: vi.fn().mockReturnValue(1),\n          _rnnoise_destroy: vi.fn(),\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3cb7976f43ff5ff6f58fb08914fa17af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "          _free: vi.fn(),\n          HEAPF32: new Float32Array(10000)\n        })\n      }));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "000fd16bb0adbe79044f6fbb14d0e183",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 388,
            "endLine": 392
          }
        ],
        "sample": "      await engine.initialize();\n      \n      const mockStream = new MediaStream();\n      const controller = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "394683bdc91f90720f83d99cc627b91b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 206,
            "endLine": 210
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "\n  describe('Gain Node Integration', () => {\n    beforeEach(async () => {\n      engine = new MurmubaraEngine();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "32adc77cca2391ab8ddd4e907e95e4c5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 239,
            "endLine": 243
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "      await engine.initialize();\n      \n      const mockStream = new MediaStream();\n      const mockGainNode = { \n        gain: { value: 1.0 }, ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e8d296b06f3913a73985b5b53344803d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 240,
            "endLine": 244
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 259,
            "endLine": 263
          }
        ],
        "sample": "      \n      const mockStream = new MediaStream();\n      const mockGainNode = { \n        gain: { value: 1.0 }, \n        connect: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6ae321ea11e7e1bb7f2b9d2b04d87ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 241,
            "endLine": 245
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "      const mockStream = new MediaStream();\n      const mockGainNode = { \n        gain: { value: 1.0 }, \n        connect: vi.fn(),\n        disconnect: vi.fn()...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f4204f6f4d6ece7359640a26eaa255c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 242,
            "endLine": 246
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 261,
            "endLine": 265
          }
        ],
        "sample": "      const mockGainNode = { \n        gain: { value: 1.0 }, \n        connect: vi.fn(),\n        disconnect: vi.fn()\n      };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7ad925587ea9f96e0b4f0fa68ac8cdf5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 243,
            "endLine": 247
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "        gain: { value: 1.0 }, \n        connect: vi.fn(),\n        disconnect: vi.fn()\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e1dd34fc2ad772b90408973891679eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 263,
            "endLine": 267
          }
        ],
        "sample": "        connect: vi.fn(),\n        disconnect: vi.fn()\n      };\n      \n      engine['audioContext']!.createGain = vi.fn().mockReturnValue(mockGainNode);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a0e6eb428a5a7e069977b487259056c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 245,
            "endLine": 249
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 264,
            "endLine": 268
          }
        ],
        "sample": "        disconnect: vi.fn()\n      };\n      \n      engine['audioContext']!.createGain = vi.fn().mockReturnValue(mockGainNode);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "63505b5a1198cae1fdc3a9be5a65cd7e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 246,
            "endLine": 250
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 265,
            "endLine": 269
          }
        ],
        "sample": "      };\n      \n      engine['audioContext']!.createGain = vi.fn().mockReturnValue(mockGainNode);\n      \n      const controller = await engine.processStream(mockStream);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa75b81ec06bd6f74a3622718c5a47ad",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 247,
            "endLine": 251
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 266,
            "endLine": 270
          }
        ],
        "sample": "      \n      engine['audioContext']!.createGain = vi.fn().mockReturnValue(mockGainNode);\n      \n      const controller = await engine.processStream(mockStream);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4737bbfbbb192f870b8b1078d39e0f71",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 379,
            "endLine": 383
          }
        ],
        "sample": "\n    it('should log gain updates', () => {\n      engine.setInputGain(1.5);\n      \n      // The logger should have been called with gain info...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4be51ec3d003aba454fb289cdf3f33b8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 407,
            "endLine": 411
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 408,
            "endLine": 412
          }
        ],
        "sample": "      \n      // Perform many gain updates\n      for (let i = 0; i < 1000; i++) {\n        engine.setInputGain(0.5 + (i % 25) * 0.1);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c116d3cc0487766def45dff51dfe1f37",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 424,
            "endLine": 428
          },
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 425,
            "endLine": 429
          }
        ],
        "sample": "      \n      // Perform 10000 rapid updates\n      for (let i = 0; i < 10000; i++) {\n        engine.setInputGain(1.0 + (i % 20) * 0.1);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de2a0264025d4a9cba5d7af61fd9e36f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/__tests__/murmuraba-engine.gain.test.ts",
            "startLine": 429,
            "endLine": 433
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 491,
            "endLine": 495
          }
        ],
        "sample": "      \n      const endTime = performance.now();\n      const duration = endTime - startTime;\n      \n      // Should complete in less than 100ms...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6506fb1b0448ba21795c7ff164e2a2d4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/logger.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/logger.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/logger.ts",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "  \n  setLevel(level: LogLevel): void {\n    this.level = level;\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "188e7c0d76379427f005131e81e00778",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "    \n    this.metricsManager.on('metrics-update', (metrics) => {\n      this.emit('metrics-update', metrics);\n    });\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e49771ee48f7b94c013ed21e89bb4ea0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "    \n    const resetCleanupTimer = () => {\n      if (this.cleanupTimer) {\n        clearTimeout(this.cleanupTimer);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2011c1f22785fcceb482ebc99dd8001d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 122,
            "endLine": 126
          }
        ],
        "sample": "  \n  async initialize(): Promise<void> {\n    if (this.initPromise) {\n      return this.initPromise;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eb8612c7982a19f36db745e0652daf70",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "      \n      // Create audio context with fallbacks\n      this.stateManager.transitionTo('creating-context');\n      await this.initializeAudioContext();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "103ae037274fc64e74f516093d04c76f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 155,
            "endLine": 159
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 156,
            "endLine": 160
          }
        ],
        "sample": "      \n      // Load WASM module with timeout\n      this.stateManager.transitionTo('loading-wasm');\n      await this.loadWasmModuleWithTimeout(5000);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7df7ce73992e3b7b916466d5069d7b16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "    // Keep only last 10 errors\n    if (this.errorHistory.length > 10) {\n      this.errorHistory.shift();\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f036125cb251f54629520f816897fd92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 305,
            "endLine": 309
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 306,
            "endLine": 310
          }
        ],
        "sample": "  \n  private async initializeDegraded(): Promise<void> {\n    this.logger.info('Initializing in degraded mode...');\n    this.stateManager.transitionTo('degraded');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fcb5d1302b178ad1c5b59325df4a5a05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 319,
            "endLine": 323
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 320,
            "endLine": 324
          }
        ],
        "sample": "    \n    // Engine will work but without noise reduction\n    this.emit('degraded-mode');\n    this.logger.warn('Engine running in degraded mode - noise reduction disabled');\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e08bf0758d365e6d9d1e1786d4495216",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 366,
            "endLine": 370
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 367,
            "endLine": 371
          }
        ],
        "sample": "    \n    // Allocate memory\n    this.inputPtr = this.wasmModule._malloc(480 * 4);\n    this.outputPtr = this.wasmModule._malloc(480 * 4);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b1a9328a4d2aebe9a5a8f1f8195fcc69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 371,
            "endLine": 375
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 372,
            "endLine": 376
          }
        ],
        "sample": "    // Warm up the model\n    await this.warmupModel();\n    \n    this.logger.debug('WASM module loaded successfully');\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c7007df41b729af377711239fe4f534",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 396,
            "endLine": 400
          }
        ],
        "sample": "    // REGLA 1: Verificar 480 samples exactos\n    if (frame.length !== 480) {\n      throw new Error(`Frame must be exactly 480 samples, got ${frame.length}`);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "27749fe4e453e5dc0b42de55f8d6ae7e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 400,
            "endLine": 404
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 401,
            "endLine": 405
          }
        ],
        "sample": "    // Check if we're in degraded mode (no WASM)\n    if (!this.wasmModule || !this.rnnoiseState) {\n      // In degraded mode, just pass through the audio with basic processing\n      const output = new...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4f2654cb9ac2eba182db0eb74b21d00",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 436,
            "endLine": 440
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 437,
            "endLine": 441
          }
        ],
        "sample": "    // REGLA 6: ESCALAR CORRECTAMENTE - Entrada: valor * 32768\n    const scaledInput = new Float32Array(480);\n    for (let i = 0; i < 480; i++) {\n      scaledInput[i] = frame[i] * 32768.0;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "12085f297fd41728d13321e5665631e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 441,
            "endLine": 445
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 442,
            "endLine": 446
          }
        ],
        "sample": "    \n    // REGLA 7: Escribir en HEAPF32\n    this.wasmModule.HEAPF32.set(scaledInput, this.inputPtr >> 2);\n    \n    // REGLA 11: CAPTURAR EL VAD! Process with RNNoise...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b6071dfb0a315d0e79531d95cea846ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 453,
            "endLine": 457
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 454,
            "endLine": 458
          }
        ],
        "sample": "    // Get output from the same buffer (in-place processing)\n    const scaledOutput = new Float32Array(480);\n    for (let i = 0; i < 480; i++) {\n      scaledOutput[i] = this.wasmModule.HEAPF32[(this.i...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6d40a1a285f7ea9d905bbc03bfaf210e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 459,
            "endLine": 463
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 460,
            "endLine": 464
          }
        ],
        "sample": "    // REGLA 6: ESCALAR CORRECTAMENTE - Salida: valor / 32768\n    const output = new Float32Array(480);\n    for (let i = 0; i < 480; i++) {\n      output[i] = scaledOutput[i] / 32768.0;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ac740fd6c20320853247b92bcb24141d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 464,
            "endLine": 468
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 465,
            "endLine": 469
          }
        ],
        "sample": "    \n    // Log VAD for debugging\n    if (vad > 0.5) {\n      this.logger.debug(`🎤 VOICE DETECTED: VAD=${vad.toFixed(3)}`);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "beca9ad6ca4bf69d8389e088c26ffb5e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 485,
            "endLine": 489
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 486,
            "endLine": 490
          }
        ],
        "sample": "      \n      if (this.activeStreams.size === 1) {\n        this.stateManager.transitionTo('processing');\n        this.emit('processing-start');\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "86fee8b30f0b4adac8a628e9c77d2d61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 497,
            "endLine": 501
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1053,
            "endLine": 1057
          }
        ],
        "sample": "        error\n      );\n      this.emit('error', murmubaraError);\n      throw murmubaraError;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "30fc4b7db50296d5eef246adb8171c10",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 498,
            "endLine": 502
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1054,
            "endLine": 1058
          }
        ],
        "sample": "      );\n      this.emit('error', murmubaraError);\n      throw murmubaraError;\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6dbb3d033496a8195ce2965078b7f4aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 499,
            "endLine": 503
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1055,
            "endLine": 1059
          }
        ],
        "sample": "      this.emit('error', murmubaraError);\n      throw murmubaraError;\n    }\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b4061914e5f7ac7007da03fcfb570ec9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 505,
            "endLine": 509
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 639,
            "endLine": 643
          }
        ],
        "sample": "    stream: MediaStream,\n    streamId: string,\n    chunkConfig?: ChunkConfig\n  ): Promise<StreamController> {\n    if (!this.audioContext) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "84860bf87ca06926a7f68ff96177d47a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 506,
            "endLine": 510
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 640,
            "endLine": 644
          }
        ],
        "sample": "    streamId: string,\n    chunkConfig?: ChunkConfig\n  ): Promise<StreamController> {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "89d148280469bc778a7d408a8cbbe89d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 507,
            "endLine": 511
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 641,
            "endLine": 645
          }
        ],
        "sample": "    chunkConfig?: ChunkConfig\n  ): Promise<StreamController> {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c42ada29c05586442174b82513745c34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 508,
            "endLine": 512
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 642,
            "endLine": 646
          }
        ],
        "sample": "  ): Promise<StreamController> {\n    if (!this.audioContext) {\n      throw new Error('Audio context not initialized');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "39a6a949a5eb23fed16a1957d86e7a90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 539,
            "endLine": 543
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 688,
            "endLine": 692
          }
        ],
        "sample": "\n      // Setup chunk processor if configured\n      let chunkProcessor: ChunkProcessor | undefined;\n      if (chunkConfig) {\n        chunkProcessor = new ChunkProcessor(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8841da6945ed4678e7bf682eaee701a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 540,
            "endLine": 544
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 689,
            "endLine": 693
          }
        ],
        "sample": "      // Setup chunk processor if configured\n      let chunkProcessor: ChunkProcessor | undefined;\n      if (chunkConfig) {\n        chunkProcessor = new ChunkProcessor(\n          this.audioContext.sam...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d85304c6dbeb99596c6e92168f778999",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 541,
            "endLine": 545
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 690,
            "endLine": 694
          }
        ],
        "sample": "      let chunkProcessor: ChunkProcessor | undefined;\n      if (chunkConfig) {\n        chunkProcessor = new ChunkProcessor(\n          this.audioContext.sampleRate,\n          chunkConfig,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "97915ab9182c8830faef3c8420073deb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 542,
            "endLine": 546
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 691,
            "endLine": 695
          }
        ],
        "sample": "      if (chunkConfig) {\n        chunkProcessor = new ChunkProcessor(\n          this.audioContext.sampleRate,\n          chunkConfig,\n          this.logger,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a49279ad28e0a785a4bf763bba4f9ddc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 543,
            "endLine": 547
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 692,
            "endLine": 696
          }
        ],
        "sample": "        chunkProcessor = new ChunkProcessor(\n          this.audioContext.sampleRate,\n          chunkConfig,\n          this.logger,\n          this.metricsManager...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "02139b354f7d4be8228fb5fc5ddce4df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 544,
            "endLine": 548
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 693,
            "endLine": 697
          }
        ],
        "sample": "          this.audioContext.sampleRate,\n          chunkConfig,\n          this.logger,\n          this.metricsManager\n        );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0cc68ed4a72bac51657d5794b5b72ce7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 547,
            "endLine": 551
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 696,
            "endLine": 700
          }
        ],
        "sample": "          this.metricsManager\n        );\n        \n        // Forward chunk events\n        chunkProcessor.on('chunk-processed', (metrics) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "33d840f9670a16a06c1794cbde7f81da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 548,
            "endLine": 552
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 697,
            "endLine": 701
          }
        ],
        "sample": "        );\n        \n        // Forward chunk events\n        chunkProcessor.on('chunk-processed', (metrics) => {\n          this.logger.debug('Chunk processed:', metrics);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed1162e487b9e648c1c3768d2146d245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 549,
            "endLine": 553
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 698,
            "endLine": 702
          }
        ],
        "sample": "        \n        // Forward chunk events\n        chunkProcessor.on('chunk-processed', (metrics) => {\n          this.logger.debug('Chunk processed:', metrics);\n          this.metricsManager.recordChunk...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1caa24e62d31431e58b492e84de24b96",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 550,
            "endLine": 554
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 699,
            "endLine": 703
          }
        ],
        "sample": "        // Forward chunk events\n        chunkProcessor.on('chunk-processed', (metrics) => {\n          this.logger.debug('Chunk processed:', metrics);\n          this.metricsManager.recordChunk(metrics)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9c18a71c6600fcf034364fb4bddad123",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 551,
            "endLine": 555
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 700,
            "endLine": 704
          }
        ],
        "sample": "        chunkProcessor.on('chunk-processed', (metrics) => {\n          this.logger.debug('Chunk processed:', metrics);\n          this.metricsManager.recordChunk(metrics);\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f301077fc1205128f2c5d3f39681a794",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 555,
            "endLine": 559
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 556,
            "endLine": 560
          }
        ],
        "sample": "        \n        // TDD Integration: Forward period-complete events for RecordingManager integration\n        chunkProcessor.on('period-complete', (aggregatedMetrics) => {\n          this.logger.info(`\ud83c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d17f63fbefac596365bbdc19e746992d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 559,
            "endLine": 563
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 415,
            "endLine": 419
          }
        ],
        "sample": "          \n          // Convert aggregated metrics to ProcessingMetrics format\n          const processingMetrics: ProcessingMetrics = {\n            noiseReductionLevel: aggregatedMetrics.averageNoiseR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef0d2cb9c6e72f1b73d7120d0125740c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 560,
            "endLine": 564
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 416,
            "endLine": 420
          }
        ],
        "sample": "          // Convert aggregated metrics to ProcessingMetrics format\n          const processingMetrics: ProcessingMetrics = {\n            noiseReductionLevel: aggregatedMetrics.averageNoiseReduction,\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f904a899648533f7df042c57023bb910",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 561,
            "endLine": 565
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 417,
            "endLine": 421
          }
        ],
        "sample": "          const processingMetrics: ProcessingMetrics = {\n            noiseReductionLevel: aggregatedMetrics.averageNoiseReduction,\n            processingLatency: aggregatedMetrics.averageLatency,\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba749c20ce0383d9e43dc90697b0257a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 562,
            "endLine": 566
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 418,
            "endLine": 422
          }
        ],
        "sample": "            noiseReductionLevel: aggregatedMetrics.averageNoiseReduction,\n            processingLatency: aggregatedMetrics.averageLatency,\n            inputLevel: 0.5, // Default value\n            out...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "745845a3fcf27fb37f2099b34fcd17a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 563,
            "endLine": 567
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 419,
            "endLine": 423
          }
        ],
        "sample": "            processingLatency: aggregatedMetrics.averageLatency,\n            inputLevel: 0.5, // Default value\n            outputLevel: 0.5, // Default value\n            frameCount: aggregatedMetrics....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "474e9dc4a77ebb1bd73f9fc24980cb06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 564,
            "endLine": 568
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 420,
            "endLine": 424
          }
        ],
        "sample": "            inputLevel: 0.5, // Default value\n            outputLevel: 0.5, // Default value\n            frameCount: aggregatedMetrics.totalFrames,\n            droppedFrames: 0, // Default value\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1d954f3c4e933a30a10996d5aa3afed8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts",
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 570,
            "endLine": 574
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 428,
            "endLine": 432
          }
        ],
        "sample": "            isVoiceActive: false // Default value\n          };\n          \n          // Pass metrics through secure event bridge\n          this.eventBridge.notifyMetrics(processingMetrics, this.bridgeT...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f21ef5d479d1467e61f7a5f68205aedd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 572,
            "endLine": 576
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 573,
            "endLine": 577
          }
        ],
        "sample": "          \n          // Pass metrics through secure event bridge\n          this.eventBridge.notifyMetrics(processingMetrics, this.bridgeToken);\n        });\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "346bf2fd1ac562d3517f16d7651b70e3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 592,
            "endLine": 596
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 886,
            "endLine": 890
          }
        ],
        "sample": "        stop: () => {\n          isStopped = true;\n          \n          // Flush any remaining chunks\n          if (chunkProcessor) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dc40dfc3400793630af5f2f29423cb24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 593,
            "endLine": 597
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 887,
            "endLine": 891
          }
        ],
        "sample": "          isStopped = true;\n          \n          // Flush any remaining chunks\n          if (chunkProcessor) {\n            chunkProcessor.flush();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a376083cca4d2f70706beb21a3e5776b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 597,
            "endLine": 601
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 891,
            "endLine": 895
          }
        ],
        "sample": "            chunkProcessor.flush();\n          }\n          \n          // CRITICAL: Stop all tracks in the stream to release the microphone\n          stream.getTracks().forEach(track => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c8865d42b70fac61b465f50a66d8dcd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 598,
            "endLine": 602
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 892,
            "endLine": 896
          }
        ],
        "sample": "          }\n          \n          // CRITICAL: Stop all tracks in the stream to release the microphone\n          stream.getTracks().forEach(track => {\n            track.stop();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6054f0ed4d3dbb819a47bedd3b879ad3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 599,
            "endLine": 603
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 893,
            "endLine": 897
          }
        ],
        "sample": "          \n          // CRITICAL: Stop all tracks in the stream to release the microphone\n          stream.getTracks().forEach(track => {\n            track.stop();\n            this.logger.info(`🔇 Sto...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b59202211ff66f5bdc379469cf0ecf54",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 600,
            "endLine": 604
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 894,
            "endLine": 898
          }
        ],
        "sample": "          // CRITICAL: Stop all tracks in the stream to release the microphone\n          stream.getTracks().forEach(track => {\n            track.stop();\n            this.logger.info(`🔇 Stopped stream...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cffddab0db589b10a6a42f20be74ffcb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 601,
            "endLine": 605
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 895,
            "endLine": 899
          }
        ],
        "sample": "          stream.getTracks().forEach(track => {\n            track.stop();\n            this.logger.info(`🔇 Stopped stream track: ${track.kind} (${track.label})`);\n          });\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed6ea74542703d060931356038243b35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 602,
            "endLine": 606
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 896,
            "endLine": 900
          }
        ],
        "sample": "            track.stop();\n            this.logger.info(`🔇 Stopped stream track: ${track.kind} (${track.label})`);\n          });\n          \n          // Disconnect audio nodes...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0cd7c254c887d8f458e6758ef61bec92",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 611,
            "endLine": 615
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 913,
            "endLine": 917
          }
        ],
        "sample": "          \n          if (this.activeStreams.size === 0) {\n            this.stateManager.transitionTo('ready');\n            this.emit('processing-end');\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2c63ee1c110bc3707cf5a79cba6d7c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 612,
            "endLine": 616
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 914,
            "endLine": 918
          }
        ],
        "sample": "          if (this.activeStreams.size === 0) {\n            this.stateManager.transitionTo('ready');\n            this.emit('processing-end');\n          }\n        },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c764b78b0d35f1dfab0aa8114f9669d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 613,
            "endLine": 617
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 915,
            "endLine": 919
          }
        ],
        "sample": "            this.stateManager.transitionTo('ready');\n            this.emit('processing-end');\n          }\n        },\n        pause: () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad97263eb124a8b1012c52e36a71b417",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 614,
            "endLine": 618
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 916,
            "endLine": 920
          }
        ],
        "sample": "            this.emit('processing-end');\n          }\n        },\n        pause: () => {\n          isPaused = true;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2125dc6a8737053fcc18ce48dec0378",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 615,
            "endLine": 619
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 917,
            "endLine": 921
          }
        ],
        "sample": "          }\n        },\n        pause: () => {\n          isPaused = true;\n          controller.processor.state = 'paused';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "15f234d13e65620a8596dfaa445f6d12",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 646,
            "endLine": 650
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 647,
            "endLine": 651
          }
        ],
        "sample": "    \n    const source = this.audioContext.createMediaStreamSource(stream);\n    const destination = this.audioContext.createMediaStreamDestination();\n    const processor = this.audioContext.createScrip...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5d63e356e0a76e2dee6d5645e8d32841",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 651,
            "endLine": 655
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 652,
            "endLine": 656
          }
        ],
        "sample": "    // Create input gain node for volume control\n    this.inputGainNode = this.audioContext.createGain();\n    this.inputGainNode.gain.value = this.inputGain;\n    this.logger.info(`Input gain set to ${...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b26d83b24240596ec7209351dccfb1a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 656,
            "endLine": 660
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 657,
            "endLine": 661
          }
        ],
        "sample": "    // Create pre-filters for medical equipment noise\n    const notchFilter1 = this.audioContext.createBiquadFilter();\n    notchFilter1.type = 'notch';\n    notchFilter1.frequency.value = 1000; // Comm...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d6d003a6179e0e9f4c4c581f9ec50ce8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 671,
            "endLine": 675
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 672,
            "endLine": 676
          }
        ],
        "sample": "    \n    const lowShelfFilter = this.audioContext.createBiquadFilter();\n    lowShelfFilter.type = 'lowshelf';\n    lowShelfFilter.frequency.value = 200; // Reduce echo/room resonance\n    lowShelfFilter...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd19c4c39d5f09d890ebc1a456607cdd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 729,
            "endLine": 733
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 730,
            "endLine": 734
          }
        ],
        "sample": "      // Update metrics\n      const inputLevel = this.metricsManager.calculateRMS(input);\n      const inputPeak = this.metricsManager.calculatePeak(input);\n      this.metricsManager.updateInputLevel(i...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "402a35e528f4014d35834c4c30402321",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 785,
            "endLine": 789
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 786,
            "endLine": 790
          }
        ],
        "sample": "          // Ensure VAD is included in emitted metrics\n          currentMetrics.vadLevel = currentFrameVAD;\n          currentMetrics.isVoiceActive = currentFrameVAD > 0.3;\n          this.emit('metrics...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5da5293fc7e8910f91a002024758bfca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 828,
            "endLine": 832
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 829,
            "endLine": 833
          }
        ],
        "sample": "      // Update output metrics\n      const outputLevel = this.metricsManager.calculateRMS(output);\n      const outputPeak = this.metricsManager.calculatePeak(output);\n      this.metricsManager.updateO...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3bff6d267c2758b6377f8ccb0bafd4b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 855,
            "endLine": 859
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 856,
            "endLine": 860
          }
        ],
        "sample": "    \n    if (agc) {\n      // With AGC: lowShelfFilter -> AGC -> processor\n      agc.connect(lowShelfFilter, processor);\n    } else {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d8eb803494639832d60a6fd57d1c92bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 935,
            "endLine": 939
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 936,
            "endLine": 940
          }
        ],
        "sample": "  \n  // AGC Methods for TDD\n  isAGCEnabled(): boolean {\n    return this.agcEnabled;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c8fffa696bc00626f3b4c4f2d1c5e9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 989,
            "endLine": 993
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 990,
            "endLine": 994
          }
        ],
        "sample": "    \n    this.stateManager.transitionTo('destroying');\n    this.logger.info('Destroying Murmuraba engine...');\n    \n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b30b8ccbfaba588e268d3c06f1b8aa4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1012,
            "endLine": 1016
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1013,
            "endLine": 1017
          }
        ],
        "sample": "      // Clean up AudioWorklet engine\n      if (this.audioWorkletEngine) {\n        this.audioWorkletEngine.cleanup();\n        this.audioWorkletEngine = undefined;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a63a42f098958e6cb0042008f09052cb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1304,
            "endLine": 1308
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1305,
            "endLine": 1309
          }
        ],
        "sample": "    \n    if (!fmtFound) {\n      throw new Error('Invalid WAV file: fmt chunk not found');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6fb19c63d706687eac59a7e9229d66d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1350,
            "endLine": 1354
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1351,
            "endLine": 1355
          }
        ],
        "sample": "    \n    if (!dataFound) {\n      throw new Error('Invalid WAV file: data chunk not found');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c500fd6402526c9f6882b156dd5f9e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1354,
            "endLine": 1358
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1355,
            "endLine": 1359
          }
        ],
        "sample": "    \n    // Extract PCM data\n    let pcmData = new Int16Array(arrayBuffer, dataOffset, dataSize / 2);\n    let workingSampleRate = sampleRate;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "112d77470f2233848240844cb0f9521b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1373,
            "endLine": 1377
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1374,
            "endLine": 1378
          }
        ],
        "sample": "    \n    for (let frameIndex = 0; frameIndex < numFrames; frameIndex++) {\n      const frameStart = frameIndex * 480;\n      const frame = new Float32Array(480);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4db58fb2137c4f80204203d6fd347f1b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1388,
            "endLine": 1392
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1389,
            "endLine": 1393
          }
        ],
        "sample": "      \n      // Calculate output RMS\n      const outputRMS = this.metricsManager.calculateRMS(output);\n      const noiseReduction = inputRMS > 0 ? Math.max(0, (1 - outputRMS / inputRMS) * 100) : 0;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "24f823920076916d13964057e66afae7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1407,
            "endLine": 1411
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1408,
            "endLine": 1412
          }
        ],
        "sample": "      // Store processed samples\n      for (let i = 0; i < 480; i++) {\n        processedSamples[frameStart + i] = output[i] * reductionFactor;\n      }\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79f5696ec0b47cb52a8024eb252ef4b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1416,
            "endLine": 1420
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1417,
            "endLine": 1421
          }
        ],
        "sample": "      // Clamp to [-1, 1] range\n      const clamped = Math.max(-1, Math.min(1, processedSamples[i]));\n      processedPCM[i] = Math.round(clamped * 32767);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "12005932ace989cf7323e349fe123869",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1421,
            "endLine": 1425
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1422,
            "endLine": 1426
          }
        ],
        "sample": "    // Create output WAV buffer\n    const outputSize = 44 + processedPCM.length * 2; // WAV header + PCM data\n    const outputBuffer = new ArrayBuffer(outputSize);\n    const outputView = new DataView(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03439281779f138d2bb00c106e7ad557",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/murmuraba-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1457,
            "endLine": 1461
          },
          {
            "file": "packages/murmuraba/src/core/murmuraba-engine.ts",
            "startLine": 1458,
            "endLine": 1462
          }
        ],
        "sample": "    \n    // Write PCM data\n    const outputPCMView = new Int16Array(outputBuffer, 44);\n    outputPCMView.set(processedPCM);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eeb37016640834e90f7b58a20eef1de0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "    // Validate metrics object\n    if (!this.validateMetrics(metrics)) {\n      console.warn('Invalid metrics object received');\n      return;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a01c3a2e728b834720694537de3f9c80",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 11,
            "endLine": 15
          }
        ],
        "sample": "    if (!metrics || typeof metrics !== 'object') {\n      return false;\n    }\n    \n    // Check required fields...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aa8413d5e8a43d7777cc642aa9a0fe05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 160,
            "endLine": 164
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "    \n    // Check required fields\n    const requiredFields = [\n      'noiseReductionLevel',\n      'processingLatency',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7b29f5fda3b2689644cde35ec6a6b36",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "    // Check required fields\n    const requiredFields = [\n      'noiseReductionLevel',\n      'processingLatency',\n      'inputLevel',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bca5bb95d50cb7c6793499822ba5a6c4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "    const requiredFields = [\n      'noiseReductionLevel',\n      'processingLatency',\n      'inputLevel',\n      'outputLevel',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52de3f26f212d8ae7827b706c803ee90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "      'noiseReductionLevel',\n      'processingLatency',\n      'inputLevel',\n      'outputLevel',\n      'frameCount',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f769a157fb2e653fde7e6b2872bc5f93",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "      'processingLatency',\n      'inputLevel',\n      'outputLevel',\n      'frameCount',\n      'droppedFrames',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2a851aae2ad7fba52589f9d3f6cd7336",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "      'inputLevel',\n      'outputLevel',\n      'frameCount',\n      'droppedFrames',\n      'timestamp'...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75a59b834c3fa75697fecf03edc8e1f4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "      'outputLevel',\n      'frameCount',\n      'droppedFrames',\n      'timestamp'\n    ];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7adb454785b0490390374ac864e162fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "      'droppedFrames',\n      'timestamp'\n    ];\n    \n    for (const field of requiredFields) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e5ff0610dfdaf8377007be2b83a914c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "      'timestamp'\n    ];\n    \n    for (const field of requiredFields) {\n      if (!(field in metrics)) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eec6fa58e7e0faf88e38c9a2f99b934a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "    \n    for (const field of requiredFields) {\n      if (!(field in metrics)) {\n        return false;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "13f970dd5416db30168a0140bae86770",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts",
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 174,
            "endLine": 178
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "        return false;\n      }\n      \n      // Validate numeric fields\n      if (field !== 'timestamp' && (typeof metrics[field] !== 'number' || isNaN(metrics[field]) || !isFinite(metrics[field]))) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3dc2a8d0ef79a83619d9b5ff70a0c70b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/secure-event-bridge.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/core/secure-event-bridge.ts",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "      // Validate numeric fields\n      if (field !== 'timestamp' && (typeof metrics[field] !== 'number' || isNaN(metrics[field]) || !isFinite(metrics[field]))) {\n        return false;\n      }\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2e49b353fc7315866704e847bd2a59e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/state-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/state-manager.ts",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/src/core/state-manager.ts",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\ninterface StateEvents {\n  'state-change': (oldState: EngineState, newState: EngineState) => void;\n  [key: string]: (...args: any[]) => void;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "928983aa0bac82e3ea45d216a4ce9e86",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/core/state-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/core/state-manager.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/core/state-manager.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "  \n  canTransitionTo(newState: EngineState): boolean {\n    const allowed = this.allowedTransitions.get(this.currentState) || [];\n    return allowed.includes(newState);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e2949aa253693c96f16d25acfecdca30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "\n  static create(value: number, policy: GainPolicy = MEDICAL_GAIN_POLICY): GainValue {\n    const clampedValue = Math.max(policy.minGain, Math.min(policy.maxGain, value));\n    return new GainValue(clam...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "21be99ca7c41e41a13ee297f96b4bf47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "\n  toString(): string {\n    return `${this.value.toFixed(1)}x`;\n  }\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "21e696c0753a0223d6fd423c2d7bdfbc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "\n  static getPresetValue(preset: GainPreset): GainValue {\n    const value = this.presetValues.get(preset) ?? 1.0;\n    return GainValue.create(value);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce03292d18c51967563ede5e9e7ce9bf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 105,
            "endLine": 109
          }
        ],
        "sample": "\nexport interface GainEventPublisher {\n  publishGainChanged(oldGain: GainValue, newGain: GainValue): void;\n  publishPresetApplied(preset: GainPreset, gain: GainValue): void;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e64c7ed512aa9ae0dc4d7981ad56bbf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "    \n    if (!oldGain.equals(newGain)) {\n      await this.repository.setGain(newGain);\n      this.eventPublisher.publishGainChanged(oldGain, newGain);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05b5f8d32cf13d6653404ef8d3dc9df1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 157,
            "endLine": 161
          }
        ],
        "sample": "    \n    await this.repository.setGain(newGain);\n    this.eventPublisher.publishGainChanged(currentGain, newGain);\n    \n    return newGain;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef02e04e9d3ab01f74c6ae374d1ba971",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "    await this.repository.setGain(newGain);\n    this.eventPublisher.publishGainChanged(currentGain, newGain);\n    \n    return newGain;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3a54d2f2dbdc214cc14eb96438606437",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 159,
            "endLine": 163
          }
        ],
        "sample": "    this.eventPublisher.publishGainChanged(currentGain, newGain);\n    \n    return newGain;\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2eb71c3350e8aa19d340d76b93841d5c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/domain/gain/gain-domain.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/domain/gain/gain-domain.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "\n  async saveCurrentAsPreset(name: string): Promise<void> {\n    const currentGain = await this.repository.getCurrentGain();\n    await this.repository.savePreset(name, currentGain);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d75ac88bd56f3e0e9b2fa4db05bc21f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "\nexport interface AudioWorkletEngineConfig {\n  enableRNNoise?: boolean;\n  rnnoiseWasmUrl?: string;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "afc1f7db774f4f56753e7eb7c3493245",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "  \n  isAudioWorkletSupported(): boolean {\n    if (typeof window === 'undefined') {\n      return false;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9e77ac103e01fffd555d2db3011ed08",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "      // Check if AudioContext exists\n      const AudioContextClass = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!AudioContextClass) {\n        return false;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f7a2a56f873ab1a33c75e4fd87678277",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "      \n      // Create a test context to check for audioWorklet property\n      const testContext = new AudioContextClass();\n      const supported = 'audioWorklet' in testContext;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28ac437d2487ea1ce57765ea25871f83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts",
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "  }\n  \n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "422b2cc06f9e19ed7c004d3bdff95286",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "    \n    if (!this.isAudioWorkletSupported()) {\n      throw new Error('AudioWorklet is not supported in this browser');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "57c79ab8e14a2af8fa1ebaeb0ec9ee69",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "    \n    // Create AudioContext\n    const AudioContextClass = (window as any).AudioContext || (window as any).webkitAudioContext;\n    this.audioContext = new AudioContextClass();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0fe31d316d051442188fa06aedc9d97",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 319,
            "endLine": 323
          }
        ],
        "sample": "    \n    // Load the AudioWorklet processor\n    const processorCode = this.getProcessorCode();\n    const blob = new Blob([processorCode], { type: 'application/javascript' });\n    const processorUrl = ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff5be7c626ec7a699bc5ba89f8597f9f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 320,
            "endLine": 324
          }
        ],
        "sample": "    // Load the AudioWorklet processor\n    const processorCode = this.getProcessorCode();\n    const blob = new Blob([processorCode], { type: 'application/javascript' });\n    const processorUrl = URL.c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "beda94556220a1685def8ffa4b517c6f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 321,
            "endLine": 325
          }
        ],
        "sample": "    const processorCode = this.getProcessorCode();\n    const blob = new Blob([processorCode], { type: 'application/javascript' });\n    const processorUrl = URL.createObjectURL(blob);\n    \n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8964ab4873a805486ef20b6daf5a49c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "    \n    try {\n      await this.audioContext!.audioWorklet.addModule(processorUrl);\n      this.isInitialized = true;\n    } finally {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c0677ec178b806aef68f5a2b196c617f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "    } finally {\n      // Clean up the blob URL\n      URL.revokeObjectURL(processorUrl);\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "26bb864b26427719cd2eedf250e2bf90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts",
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 86,
            "endLine": 90
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 7,
            "endLine": 11
          }
        ],
        "sample": "        constructor() {\n          super();\n          this.isActive = true;\n          this.frameSize = 480; // RNNoise frame size\n          this.inputBuffer = new Float32Array(this.frameSize);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8627a543edb42e856a4848692479a911",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "          // Performance metrics\n          this.framesProcessed = 0;\n          this.processingTimeSum = 0;\n          this.bufferUnderruns = 0;\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65c1a0693583d10483b865fd4cec5fed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 104,
            "endLine": 108
          }
        ],
        "sample": "          // Setup message handling\n          this.port.onmessage = (event) => {\n            this.handleMessage(event.data);\n          };\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6b8184c2e3c872a9aa3561f4a84da8d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "            // In AudioWorklet context, we need to load WASM differently\n            if (wasmUrl) {\n              const response = await fetch(wasmUrl);\n              const wasmBuffer = await response...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c57cb1462d91e6cf020e90da06a2763",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "              \n              // This is a simplified version - in reality, we'd need to\n              // properly instantiate the WASM module in the worklet context\n              console.log('RNNoise ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "619a3c0687d6cb28720e4573fdebd002",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 168,
            "endLine": 172
          }
        ],
        "sample": "          \n          const inputChannel = input[0];\n          const outputChannel = output[0];\n          const frameLength = inputChannel.length;\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "caa46266a3ea57c0b96c3039b6543b56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "            \n            for (let i = 0; i < frameLength; i++) {\n              this.inputBuffer[this.bufferIndex++] = inputChannel[i];\n              \n              if (this.bufferIndex === this.frameS...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8c4fd010c021e5d2aae1ce00de99d5c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 186,
            "endLine": 190
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 187,
            "endLine": 191
          }
        ],
        "sample": "              \n              if (this.bufferIndex === this.frameSize) {\n                // Process the frame\n                const processedFrame = this.processFrame(this.inputBuffer);\n               ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eb1746b28d883ee05b1cafb125f8ab77",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 191,
            "endLine": 195
          }
        ],
        "sample": "                \n                // Copy processed frame to output\n                for (let j = 0; j < this.frameSize && outputIndex < frameLength; j++) {\n                  outputChannel[outputIndex++...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fad7f810220bd2cca119c3f3d7414153",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 208,
            "endLine": 212
          }
        ],
        "sample": "            // Pass-through mode when RNNoise is not ready\n            for (let i = 0; i < frameLength; i++) {\n              outputChannel[i] = inputChannel[i] * 0.8; // Apply slight attenuation\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6718d54d50da0bad2df7b339b69e783f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 220,
            "endLine": 224
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 221,
            "endLine": 225
          }
        ],
        "sample": "          // Track performance\n          const endTime = currentFrame;\n          const processingTime = endTime - startTime;\n          this.processingTimeSum += processingTime;\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6047a64c177cc11cd8c5c107f3ff67ea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 252,
            "endLine": 256
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 253,
            "endLine": 257
          }
        ],
        "sample": "  \n  process(inputBuffer: Float32Array): Float32Array {\n    if (!this.isInitialized) {\n      throw new Error('AudioWorkletEngine not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8bce580af89ca0bb02e7c18c5e71112d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 263,
            "endLine": 267
          }
        ],
        "sample": "  \n  createWorkletNode(): AudioWorkletNode {\n    if (!this.isInitialized || !this.audioContext) {\n      throw new Error('AudioWorkletEngine not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a7b112e62973eabdaa36d19d14f1729",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 300,
            "endLine": 304
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 301,
            "endLine": 305
          }
        ],
        "sample": "  \n  async processWithWorklet(inputBuffer: Float32Array): Promise<Float32Array> {\n    if (!this.isInitialized || !this.audioContext) {\n      throw new Error('AudioWorkletEngine not initialized');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8da1478762d339aacca297d6a3d5a1f8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 338,
            "endLine": 342
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 339,
            "endLine": 343
          }
        ],
        "sample": "      \n      // Connect nodes\n      source.connect(workletNode);\n      workletNode.connect(offlineContext.destination);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd3a5d943f2f96892b4d3dd6cc2ddb56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 342,
            "endLine": 346
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 343,
            "endLine": 347
          }
        ],
        "sample": "      \n      // Start and render\n      source.start();\n      const renderedBuffer = await offlineContext.startRendering();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6039a28d6b5a78a2d4b05f42ce3a12c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 356,
            "endLine": 360
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 357,
            "endLine": 361
          }
        ],
        "sample": "  \n  async createStreamProcessor(stream: MediaStream): Promise<MediaStreamAudioSourceNode> {\n    if (!this.isInitialized || !this.audioContext) {\n      throw new Error('AudioWorkletEngine not initiali...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3fbb02502c5d1b9cf63b649d9726e335",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 372,
            "endLine": 376
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 373,
            "endLine": 377
          }
        ],
        "sample": "    // Connect to destination (for monitoring)\n    this.workletNode!.connect(this.audioContext.destination);\n    \n    return source;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "883062964d44284fd9cbe344d321ae30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 377,
            "endLine": 381
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 378,
            "endLine": 382
          }
        ],
        "sample": "  \n  sendToWorklet(message: any): void {\n    if (!this.workletNode) {\n      throw new Error('Worklet node not created');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c484892a26db68bad3a19a672163ec3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 443,
            "endLine": 447
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-engine.ts",
            "startLine": 444,
            "endLine": 448
          }
        ],
        "sample": "    \n    if (this.audioContext) {\n      this.audioContext.close();\n      this.audioContext = null;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "35739fcffbb08ee3b2e3e94f214781a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "        // Double buffering for zero-copy transfers\n        this.processingBuffer1 = new Float32Array(this.frameSize);\n        this.processingBuffer2 = new Float32Array(this.frameSize);\n        this.c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "88b793de422691fa4498589650ca16e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "        // Metrics with efficient ring buffer\n        this.metricsBuffer = new Float32Array(100);\n        this.metricsIndex = 0;\n        this.lastMetricsReport = 0;\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ec9a7bae9a0ab237c67f3ab847940849",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "        \n        const inputChannel = input[0];\n        const outputChannel = output[0];\n        const startTime = performance.now();\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e27ba14f15acba8efd2d15f50098d063",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 126,
            "endLine": 130
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 127,
            "endLine": 131
          }
        ],
        "sample": "          // Process with SIMD operations\n          const processed = simd.mul(chunk, simd.splat(0.95)); // Example processing\n          simd.store(outputChannel, i, processed);\n        }\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "764c7399312a95dea78a78d01b3c301a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 134,
            "endLine": 138
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 135,
            "endLine": 139
          }
        ],
        "sample": "          // Fallback: simple noise gate\n          this.applyNoiseGate(this.inputBuffer, this.outputBuffer);\n          return;\n        }\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7dd0bd639203e8e1861c612450458fd6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "packages/murmuraba/src/engines/audio-worklet-processor.optimized.ts",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "      \n      updateMetrics(processingTime) {\n        this.metricsBuffer[this.metricsIndex] = processingTime;\n        this.metricsIndex = (this.metricsIndex + 1) % this.metricsBuffer.length;\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ad3fa6e42709a5707cdcbdea027cd6a8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "\nexport interface RNNoiseConfig {\n  wasmPath?: string;\n  scriptPath?: string;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4807ae86a40bf185e8f8861ec524698",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 57,
            "endLine": 61
          }
        ],
        "sample": "    \n    // Allocate memory for float32 samples\n    this.inputPtr = this.module._malloc(480 * 4);\n    this.outputPtr = this.module._malloc(480 * 4);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c1006e4f59e72efd0814985bb3aca58",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "  \n  process(inputBuffer: Float32Array): Float32Array {\n    if (!this.isInitialized) {\n      throw new Error('RNNoiseEngine not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3200b0e6f164dd5b0a91c8e873f7c9c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "    \n    if (inputBuffer.length !== 480) {\n      throw new Error('RNNoise requires exactly 480 samples per frame');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e74b56652ab2b56277576e9bf4dd175e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/rnnoise-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/engines/rnnoise-engine.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "    // Get output\n    const outputData = new Float32Array(480);\n    for (let i = 0; i < 480; i++) {\n      outputData[i] = this.module.HEAPF32[(this.outputPtr >> 2) + i];\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a083b8b11e2945a04dbd36de5acccb1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/engines/types.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/engines/types.ts",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "packages/murmuraba/src/engines/types.ts",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "\nexport interface AudioEngineConfig {\n  engineType: 'rnnoise' | 'speex' | 'custom';\n  options?: Record<string, any>;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "734f53c9e1a1598753477685d7ea06d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "      act(() => {\n        result.current.setInputGain(1.5);\n      });\n      \n      await waitFor(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "408a74cb016d9e648b6ec86cc674ae34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 367,
            "endLine": 371
          }
        ],
        "sample": "      \n      act(() => {\n        result.current.setInputGain(1.5);\n      });\n      expect(result.current.inputGain).toBe(1.5);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b10e72992f7bfded8c36ee11fa794cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 351,
            "endLine": 355
          }
        ],
        "sample": "        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      act(() => {\n        result.current.setInputGain(1.8);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f5fc0672c9ba907c1752c7de4206e3e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 352,
            "endLine": 356
          }
        ],
        "sample": "      });\n      \n      act(() => {\n        result.current.setInputGain(1.8);\n      });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f711b7008134cdeb2d28ca576ff42b07",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 234,
            "endLine": 238
          }
        ],
        "sample": "      await waitFor(() => {\n        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      const gain = result.current.getInputGain();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "becca824a1b3c39990e7fb3dddf686ed",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 235,
            "endLine": 239
          }
        ],
        "sample": "        expect(result.current.isInitialized).toBe(true);\n      });\n      \n      const gain = result.current.getInputGain();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "952d3f65a841e7d3d9f84b26ca3daeef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 293,
            "endLine": 297
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 385,
            "endLine": 389
          }
        ],
        "sample": "      act(() => {\n        result.current.setInputGain(2.0);\n      });\n      \n      expect(result.current.inputGain).toBe(2.0);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1401a9a346c1a24b5263d6b95d28d0af",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 386,
            "endLine": 390
          }
        ],
        "sample": "        result.current.setInputGain(2.0);\n      });\n      \n      expect(result.current.inputGain).toBe(2.0);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2f707fd8d7ceb3197b2d8df719a3cba2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 377,
            "endLine": 381
          }
        ],
        "sample": "      });\n      \n      // Gain should persist after recording\n      expect(result.current.inputGain).toBe(2.0);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9e48cc5c5641110ff16b9bc60f192c5b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 384,
            "endLine": 388
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 504,
            "endLine": 508
          }
        ],
        "sample": "      const { result, unmount } = renderHook(() => \n        useMurmubaraEngine({ autoInitialize: true })\n      );\n      \n      await waitFor(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c70cdf6efbe53161845835d18d7abf8f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 438,
            "endLine": 442
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/__tests__/use-murmubara-engine.gain.test.tsx",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "\n  describe('TypeScript Types', () => {\n    it('should have correct return type signatures', () => {\n      const { result } = renderHook(() => useMurmubaraEngine());\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "727e070661d9a13e46eb8809bacfefea",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 18,
            "endLine": 22
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "  ): Promise<Blob> {\n    const audioUrl = audioType === 'processed' ? chunk.processedAudioUrl : chunk.originalAudioUrl;\n    if (!audioUrl) {\n      throw new Error(`No ${audioType} audio URL available ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aee3f6ba1ee885bc891137267e5aefc1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "    const audioUrl = audioType === 'processed' ? chunk.processedAudioUrl : chunk.originalAudioUrl;\n    if (!audioUrl) {\n      throw new Error(`No ${audioType} audio URL available for chunk ${chunk.id}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7063e5b5551fb2f2afd4876286210dc4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "    // Clean up\n    setTimeout(() => URL.revokeObjectURL(url), 100);\n    \n    console.log(`✅ ${LOG_PREFIX.EXPORT} Downloaded ${filename}`);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "47f9d7406dc41cdea905e053bdd980c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 118,
            "endLine": 122
          }
        ],
        "sample": "\n    // Dynamic import for JSZip to reduce bundle size\n    const JSZip = (await import('jszip')).default;\n    const zip = new JSZip();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4f9e0a37547ec7a0ce706ec3b51d267d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/audio-exporter.ts",
            "startLine": 147,
            "endLine": 151
          }
        ],
        "sample": "    // Generate ZIP\n    const zipBlob = await zip.generateAsync({ type: 'blob' });\n    const timestamp = new Date().toISOString().replace(/:/g, '-').split('.')[0];\n    const filename = `murmuraba_reco...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aea2226d7ec61f6a92881290b4fc97ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 20,
            "endLine": 24
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "    \n    // CRITICAL FOR MEDICAL APP: Prevent memory overflow during long recordings\n    if (updatedChunks.length > MAX_CHUNKS_IN_MEMORY) {\n      console.warn(`⚠️ ${LOG_PREFIX.MEDICAL_MEMORY} Chunk li...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2927c16d0cc60e0d605107f97709ee4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/chunk-manager.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "      this.urlManager.revokeChunkUrls(chunk.id);\n    });\n  }\n\n  /**...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "719ea73327d5d84c917e821b3bf1f404",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/constants.ts",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "\n// Memory management for long recordings\nexport const MAX_CHUNKS_IN_MEMORY = 100; // ~13 minutes at 8s chunks\nexport const CHUNKS_TO_KEEP_ON_OVERFLOW = 90; // Keep most recent chunks when limit reach...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "210c774d1a26f5918c96b1eccaaccbdc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/index.ts",
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/index.ts",
            "startLine": 4,
            "endLine": 8
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 80,
            "endLine": 84
          }
        ],
        "sample": "// Type exports\nexport type {\n  ProcessedChunk,\n  RecordingState,\n  UseMurmubaraEngineOptions,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d55e8893edd612038e8d6ac83cb0b33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/index.ts",
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/index.ts",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "export type {\n  ProcessedChunk,\n  RecordingState,\n  UseMurmubaraEngineOptions,\n  UseMurmubaraEngineReturn...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4f0a83a3afa58470fe30c7794248eb4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "    \n    if (!audio) {\n      audio = new Audio(audioUrl);\n      this.audioElements.set(audioKey, audio);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9525e52354b7b3c53a0c530d4d90dcee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 43,
            "endLine": 47
          }
        ],
        "sample": "    \n    // Check if this specific audio is already playing\n    const isThisAudioPlaying = !audio.paused;\n    \n    if (isThisAudioPlaying) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34a1b76cf80f1c8045a032be75aea8ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 47,
            "endLine": 51
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 48,
            "endLine": 52
          }
        ],
        "sample": "      // Stop this specific audio\n      audio.pause();\n      audio.currentTime = 0;\n      onPlayStateChange(chunk.id, false);\n    } else {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f93671fb2d5cffdb9fcbb9f4bb166b14",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "        audio.pause();\n        audio.currentTime = 0;\n        \n        // Extract chunk ID from key and update state\n        const keyChunkId = key.split('-')[0];...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd4d03056afe1dd00c574dc29d670e0e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "        audio.currentTime = 0;\n        \n        // Extract chunk ID from key and update state\n        const keyChunkId = key.split('-')[0];\n        if (this.stateChangeCallback) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "124af7b481285fe3b8f83ddc2df0c2ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "        \n        // Extract chunk ID from key and update state\n        const keyChunkId = key.split('-')[0];\n        if (this.stateChangeCallback) {\n          this.stateChangeCallback(keyChunkId, fals...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c126fbdc18ff8482916598cf6f9bdfca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "        // Extract chunk ID from key and update state\n        const keyChunkId = key.split('-')[0];\n        if (this.stateChangeCallback) {\n          this.stateChangeCallback(keyChunkId, false);\n     ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "43f7720d8e5b6dc3bf2d6e6d00ebd878",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "        const keyChunkId = key.split('-')[0];\n        if (this.stateChangeCallback) {\n          this.stateChangeCallback(keyChunkId, false);\n        }\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a116c96302ce72a05aac3832e0657b1d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 86,
            "endLine": 90
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 104,
            "endLine": 108
          }
        ],
        "sample": "        if (this.stateChangeCallback) {\n          this.stateChangeCallback(keyChunkId, false);\n        }\n      }\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ef9a4f1fc4dbb45f3ae59fed31b1545",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/playback-manager.ts",
            "startLine": 105,
            "endLine": 109
          }
        ],
        "sample": "          this.stateChangeCallback(keyChunkId, false);\n        }\n      }\n    });\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce669cc71623008b9238f62515144288",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 370,
            "endLine": 374
          }
        ],
        "sample": "  currentStream,\n  originalStream,\n  setCurrentStream,\n  setOriginalStream,\n  setStreamController,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b6fb28d062e1a68e61a1985398bec2b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 371,
            "endLine": 375
          }
        ],
        "sample": "  originalStream,\n  setCurrentStream,\n  setOriginalStream,\n  setStreamController,\n  setError,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81d72931b5c2217dc6d473b2696ce05e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "      \n      setOriginalStream(stream);\n      const controller = await processStream(stream);\n      setStreamController(controller);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dba8f767271d9d29e7c6e62cb6701b4e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "      // Use hook's state management\n      startRecordingState();\n      \n      // Start the chunk processing\n      const onChunkProcessed = (chunk: ProcessedChunk) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4936968f4bec39c791d33f1dffe12f73",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "    \n    // Clean up the stream controller if it exists\n    if (setStreamController) {\n      setStreamController(prevController => {\n        if (prevController) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "034b2f69c8eb02d8f42707329397250c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
          "src/features/audio-recording/RecordRoute.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-functions.ts",
            "startLine": 227,
            "endLine": 231
          },
          {
            "file": "src/features/audio-recording/RecordRoute.tsx",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "    startRecording,\n    stopRecording,\n    pauseRecording,\n    resumeRecording,\n    clearRecordings...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b38d640379e363082702fa6dcda54a50",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "    // Use secure event bridge instead of global state\n    this.eventBridge = SecureEventBridge.getInstance();\n    this.bridgeToken = this.eventBridge.getAccessToken();\n    this.managerId = this.gener...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9523c84cfa9adbd64805ea4cb08cd91c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 71,
            "endLine": 75
          }
        ],
        "sample": "  \n  /**\n   * Secure Integration: Notify metrics received from secure event bridge\n   */\n  public notifyMetrics(metrics: ProcessingMetrics): void {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f52f66e59a3bd489f538cac502a74d55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "\n  /**\n   * TDD Integration: Get real metrics for a time period\n   */\n  private getRealMetrics(startTime: number, endTime: number): any {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9b8c2122b126d9b5d43c7489c6b2b89b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "    // Try current metrics first\n    if (this.currentMetrics) {\n      return this.currentMetrics;\n    }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "baabfcac976b3109f396f4cbaa6fcdcb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 531,
            "endLine": 535
          }
        ],
        "sample": "    processedStream: MediaStream,\n    originalStream: MediaStream,\n    chunkDuration: number,\n    onChunkProcessed: (chunk: ProcessedChunk) => void\n  ): Promise<void> {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dc05dcb0105a47996c3c466f004993e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "      \n      this.cycleCount++;\n      const cycleStartTime = Date.now();\n      console.log(`🔄 ${LOG_PREFIX.CONCAT_STREAM} Starting recording cycle #${this.cycleCount}`);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "121a200aeddbc5364317c119cfbc9093",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "          }\n        } else {\n          console.warn(`⚠️ ${LOG_PREFIX.CONCAT_STREAM} Invalid blob size detected! Size: ${event.data.size} bytes (minimum: ${MIN_VALID_BLOB_SIZE} bytes)`, {\n            c...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7eea81c6dabdf11ba0792b4cc9e0ebd0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "      \n      currentOriginalRecorder.onerror = (error) => {\n        console.error(`❌ ${LOG_PREFIX.CONCAT_STREAM} Original recorder error:`, error);\n      };\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa73dee7348334e36da1d58c141cec42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 183,
            "endLine": 187
          }
        ],
        "sample": "      // When recording stops, process and create chunk\n      currentRecorder.onstop = () => {\n        console.log(`🔄 ${LOG_PREFIX.CONCAT_STREAM} Recorder stopped for cycle #${this.cycleCount}`);\n   ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b12b0dbec34c8b9df7d52e6f06f39a1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 203,
            "endLine": 207
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 204,
            "endLine": 208
          }
        ],
        "sample": "      \n      // Start recording\n      currentRecorder.start(1000);\n      currentOriginalRecorder.start(1000);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22aa148304bf16592d3f4db67f5a04ee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 208,
            "endLine": 212
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 209,
            "endLine": 213
          }
        ],
        "sample": "      // Store refs\n      this.mediaRecorder = currentRecorder;\n      this.originalRecorder = currentOriginalRecorder;\n    };\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ebd1e61dc25a558d0dadd90ee194a7d3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 222,
            "endLine": 226
          }
        ],
        "sample": "      \n      // Store current recorders to ensure onstop handlers complete\n      const currentMediaRecorder = this.mediaRecorder;\n      const currentOriginalRecorder = this.originalRecorder;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "137aa15299d661291b4e8b399912b417",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 226,
            "endLine": 230
          }
        ],
        "sample": "      \n      // Stop recorders if they're recording\n      if (currentMediaRecorder?.state === 'recording') {\n        currentMediaRecorder.stop();\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6adfdd12b390e0f20da9eab95a97cde4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 230,
            "endLine": 234
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 231,
            "endLine": 235
          }
        ],
        "sample": "      \n      if (currentOriginalRecorder?.state === 'recording') {\n        currentOriginalRecorder.stop();\n      }\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "33e5efa1c8547264e2e7b41d3af1e7fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 283,
            "endLine": 287
          }
        ],
        "sample": "    // Create original URL immediately\n    const originalUrl = isValid ? this.urlManager.createObjectURL(chunkId, originalBlob) : undefined;\n    \n    const cycleEndTime = Date.now();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6710680c33cf52a285e7bd9b09fd093",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 317,
            "endLine": 321
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 318,
            "endLine": 322
          }
        ],
        "sample": "        \n        // Create processed blob from result\n        const processedBlob = new Blob([result.processedBuffer], { type: 'audio/wav' });\n        processedUrl = this.urlManager.createObjectURL(ch...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "60ae7b1e2f3d5073fe8448de64d0612f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 321,
            "endLine": 325
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 322,
            "endLine": 326
          }
        ],
        "sample": "        \n        // Extract VAD metrics\n        averageVad = result.averageVad;\n        frameCount = result.metrics.length;\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18994b776fe78d4640d032fdd394e21d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 347,
            "endLine": 351
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 348,
            "endLine": 352
          }
        ],
        "sample": "    // Si por alguna razón no pudimos calcular la duración real, usar la estimada\n    if (actualDuration === 0) {\n      actualDuration = cycleEndTime - cycleStartTime;\n      console.warn(`⚠️ ${LOG_PRE...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50dd9b3d14fd243bfa99aa6260b6be8f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 395,
            "endLine": 399
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 556,
            "endLine": 560
          }
        ],
        "sample": "    \n    // Clear intervals and timeouts first\n    if (this.processChunkInterval) {\n      clearInterval(this.processChunkInterval);\n      this.processChunkInterval = null;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b480496027845c759d4cc852196aca30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 398,
            "endLine": 402
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 559,
            "endLine": 563
          }
        ],
        "sample": "      clearInterval(this.processChunkInterval);\n      this.processChunkInterval = null;\n    }\n    \n    if (this.cycleTimeout) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5c5f22e3ceb004dbadd6b63d44a51a0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 399,
            "endLine": 403
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 560,
            "endLine": 564
          }
        ],
        "sample": "      this.processChunkInterval = null;\n    }\n    \n    if (this.cycleTimeout) {\n      clearTimeout(this.cycleTimeout);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "33c1a4ab698e201a65ad630a41c9b14f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 400,
            "endLine": 404
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 561,
            "endLine": 565
          }
        ],
        "sample": "    }\n    \n    if (this.cycleTimeout) {\n      clearTimeout(this.cycleTimeout);\n      this.cycleTimeout = null;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9a147307b434e0656c64703c43458373",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 474,
            "endLine": 478
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/recording-manager.ts",
            "startLine": 475,
            "endLine": 479
          }
        ],
        "sample": "    // Wait for all stop handlers to complete before cleanup\n    Promise.all(promises).then(() => {\n      // Clear recordings after processing\n      this.chunkRecordings.clear();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e667803ece0e40c8c4d6363e0f1d959f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/types.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "  // Recording State\n  recordingState: RecordingState;\n  currentStream: MediaStream | null;\n  streamController: StreamController | null;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6c983af6a6a71c263251c3e7357e76a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/types.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "  \n  // Audio Playback Actions\n  toggleChunkPlayback: (chunkId: string, audioType: 'processed' | 'original') => Promise<void>;\n  toggleChunkExpansion: (chunkId: string) => void;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e5996aa8842dcb6e6c0907edf09622bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/types.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/types.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "  // Gain Control\n  inputGain: number;\n  setInputGain: (gain: number) => void;\n  getInputGain: () => number;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "06b945c35c524fb84a85cbe1eb507817",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 359,
            "endLine": 363
          }
        ],
        "sample": "    recordingState,\n    startRecording: recordingStateStart,\n    stopRecording: recordingStateStop,\n    pauseRecording: recordingStatePause,\n    resumeRecording: recordingStateResume,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ff60cc6f1db74fceb16bd7cbad4df91",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 360,
            "endLine": 364
          }
        ],
        "sample": "    startRecording: recordingStateStart,\n    stopRecording: recordingStateStop,\n    pauseRecording: recordingStatePause,\n    resumeRecording: recordingStateResume,\n    addChunk,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "12b9ddcd26180cc0f6403f3516aa4b1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 361,
            "endLine": 365
          }
        ],
        "sample": "    stopRecording: recordingStateStop,\n    pauseRecording: recordingStatePause,\n    resumeRecording: recordingStateResume,\n    addChunk,\n    toggleChunkPlayback: recordingStateTogglePlayback,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "90b06b9f3e9ce54c54d042db4eec2d41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 362,
            "endLine": 366
          }
        ],
        "sample": "    pauseRecording: recordingStatePause,\n    resumeRecording: recordingStateResume,\n    addChunk,\n    toggleChunkPlayback: recordingStateTogglePlayback,\n    toggleChunkExpansion,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "738a517cd786e2a0cd469c8e85e50ec0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 363,
            "endLine": 367
          }
        ],
        "sample": "    resumeRecording: recordingStateResume,\n    addChunk,\n    toggleChunkPlayback: recordingStateTogglePlayback,\n    toggleChunkExpansion,\n    clearRecordings: recordingStateClear,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ad23cd569f119921fce34b0dcf84a89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 364,
            "endLine": 368
          }
        ],
        "sample": "    addChunk,\n    toggleChunkPlayback: recordingStateTogglePlayback,\n    toggleChunkExpansion,\n    clearRecordings: recordingStateClear,\n    updateRecordingTime...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d6b1c7fd3a701ce9640e0ff4d2e3a001",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 78,
            "endLine": 82
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 79,
            "endLine": 83
          }
        ],
        "sample": "  \n  const [currentStream, setCurrentStream] = useState<MediaStream | null>(null);\n  const [originalStream, setOriginalStream] = useState<MediaStream | null>(null);\n  const [streamController, setStrea...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e787b0d73c629e6b8c9340463a8f7545",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "  // Other refs\n  const metricsUnsubscribeRef = useRef<(() => void) | null>(null);\n  const initializePromiseRef = useRef<Promise<void> | null>(null);\n  const audioConverterRef = useRef<AudioConverter ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6acc2861a4b8795c8624f5552383eb89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "    \n    if (initializePromiseRef.current) {\n      console.log(`⏳ ${LOG_PREFIX.LIFECYCLE} Already initializing, returning existing promise`);\n      return initializePromiseRef.current;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2d1bdc6abd330d773eb020aa246699d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 143,
            "endLine": 147
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 144,
            "endLine": 148
          }
        ],
        "sample": "    \n    if (isInitialized) {\n      console.log(`✅ ${LOG_PREFIX.LIFECYCLE} Already initialized, skipping`);\n      return;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dd5ed1ca3d9e9f1502cbb107e87ce973",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "            // Enough time has passed, update immediately\n            setMetrics(newMetrics);\n            lastUpdate = now;\n            pendingMetrics = null;\n          } else {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7bf945e67894bcd7be7d147805377171",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 235,
            "endLine": 239
          }
        ],
        "sample": "      // Stop any ongoing recording\n      if (recordingState.isRecording) {\n        console.log(`🛑 ${LOG_PREFIX.LIFECYCLE} Stopping ongoing recording before destroy`);\n        recordingManagerRef.cur...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1fa1ef9fd48bf7dbd28af7664062ff74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 240,
            "endLine": 244
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 241,
            "endLine": 245
          }
        ],
        "sample": "      // Clean up event listeners\n      if (metricsUnsubscribeRef.current) {\n        metricsUnsubscribeRef.current();\n        metricsUnsubscribeRef.current = null;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "33fc0dfb08b8fc0c8fe4ba751bb393b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 349,
            "endLine": 353
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 350,
            "endLine": 354
          }
        ],
        "sample": "  \n  const getAverageNoiseReduction = useCallback(() => {\n    return chunkManagerRef.current.getAverageNoiseReduction(recordingState.chunks);\n  }, [recordingState.chunks]);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "04d768ba54375600ad96aa303d01fbb1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 415,
            "endLine": 419
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 416,
            "endLine": 420
          }
        ],
        "sample": "      \n      return () => clearInterval(interval);\n    }\n  }, [recordingState.isRecording, recordingState.isPaused, recordingState.recordingTime, updateRecordingTime]);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba243d69620b63ce185939b58c10b571",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 435,
            "endLine": 439
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 436,
            "endLine": 440
          }
        ],
        "sample": "  \n  // Cleanup on unmount\n  useEffect(() => {\n    console.log(`🌟 ${LOG_PREFIX.LIFECYCLE} Component mounted, setting up cleanup handler`);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6cee2fbc74d4d815815ede5d7ce5ede9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 488,
            "endLine": 492
          },
          {
            "file": "src/App.tsx",
            "startLine": 77,
            "endLine": 81
          }
        ],
        "sample": "    toggleChunkPlayback,\n    toggleChunkExpansion,\n    \n    // Export Actions\n    exportChunkAsWav,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61b505010eba32617f94832cd33af924",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 489,
            "endLine": 493
          },
          {
            "file": "src/App.tsx",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "    toggleChunkExpansion,\n    \n    // Export Actions\n    exportChunkAsWav,\n    exportChunkAsMp3,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c215abe6b620bfb53d3f770d4b464eaf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 491,
            "endLine": 495
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 492,
            "endLine": 496
          }
        ],
        "sample": "    // Export Actions\n    exportChunkAsWav,\n    exportChunkAsMp3,\n    downloadChunk,\n    downloadAllChunksAsZip,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cdc4995c6765d1932b0aa4da84bebf21",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 496,
            "endLine": 500
          },
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-murmubara-engine.ts",
            "startLine": 497,
            "endLine": 501
          }
        ],
        "sample": "    \n    // Gain Control\n    setInputGain: updateInputGain,\n    getInputGain: getCurrentInputGain,\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d5d460df54363fb02eb8ab3560a2568",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
          "src/features/audio-recording/RecordRoute.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/murmuraba-engine/use-recording-state.ts",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "src/features/audio-recording/RecordRoute.tsx",
            "startLine": 9,
            "endLine": 13
          }
        ],
        "sample": "    recordingState,\n    startRecording,\n    stopRecording,\n    pauseRecording,\n    resumeRecording,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ff1150c6ee3f8ef2fb422c73ce72358a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "      // Create engine instance\n      const engine = createAudioEngine(config);\n      await engine.initialize();\n      engineRef.current = engine;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3999844a4c0371ecc8b80f653fd6104d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "        \n        if (!engineRef.current || !engineDataRef.current) {\n          output.set(input);\n          return;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "67eea2361e20344d5001f3b992aa3b94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 70,
            "endLine": 74
          }
        ],
        "sample": "        // Add to input buffer\n        for (let i = 0; i < input.length; i++) {\n          engineDataRef.current.inputBuffer.push(input[i]);\n          metricsRef.current.peakInput = Math.max(metricsRef...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "393b811aaee15cba982f6af31ab21cc0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "        // Process chunks of 480 samples\n        while (engineDataRef.current.inputBuffer.length >= 480) {\n          const frame = engineDataRef.current.inputBuffer.splice(0, 480);\n          const flo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5b7eed0f6d3310ad0bc40694f8eceb10",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "          \n          // Calculate frame energy for gating\n          const frameEnergy = calculateRMS(floatFrame);\n          const outputEnergy = calculateRMS(outputData);\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1de5e2bff83531d0b20169219b0092a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 87,
            "endLine": 91
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "          // Track frame metrics\n          metricsRef.current.totalFrames++;\n          metricsRef.current.totalInputEnergy += frameEnergy;\n          metricsRef.current.totalOutputEnergy += outputEnerg...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0295bfa3119395d39aba6e4d164a7119",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "          \n          // Update energy history\n          engineDataRef.current.energyHistory[engineDataRef.current.energyIndex] = frameEnergy;\n          engineDataRef.current.energyIndex = (engineDataR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd7cf0059099c34ba476504f73bd0555",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "            // Very quiet - attenuate heavily\n            processedFrame = processedFrame.map(s => s * 0.1);\n            wasSilenced = true;\n            metricsRef.current.silenceFrames++;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ecfa8992cd408147844e31f9bebebb23",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 123,
            "endLine": 127
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "            // RNNoise reduced significantly - likely noise\n            processedFrame = processedFrame.map(s => s * reductionRatio);\n            if (!wasSilenced) metricsRef.current.silenceFrames++;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4dc3e94f9bcdb5a3d12420a4a2f28433",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 140,
            "endLine": 144
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 141,
            "endLine": 145
          }
        ],
        "sample": "          // Add to output buffer\n          for (let i = 0; i < 480; i++) {\n            engineDataRef.current.outputBuffer.push(processedFrame[i]);\n          }\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c526d83277cd66bfa67eb487fa9db915",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 181,
            "endLine": 185
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 121,
            "endLine": 125
          }
        ],
        "sample": "      peakOutput: 0,\n      startTime: Date.now(),\n      totalFrames: 0\n    };\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "276559539053a66ab053ee2b7fa560a3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "    // Calculate noise reduction differently - compare silence frames to total frames\n    // and consider the energy reduction ratio\n    const energyReduction = avgInputEnergy > 0 ? Math.abs(avgInputE...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "46f5c697c64bdd61de20180019bd200f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 217,
            "endLine": 221
          }
        ],
        "sample": "\n  const processStream = async (stream: MediaStream): Promise<MediaStream> => {\n    if (!isInitialized) {\n      await initializeAudioEngine();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2975ee3ddf2bb8d56e1ee6fdfd287d34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 222,
            "endLine": 226
          }
        ],
        "sample": "    \n    if (!audioContextRef.current || !processorRef.current) {\n      throw new Error('Not initialized');\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d51f1dbc4e6d73e450fd3d903facf2b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 264,
            "endLine": 268
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 87,
            "endLine": 91
          }
        ],
        "sample": "  let sum = 0;\n  for (let i = 0; i < frame.length; i++) {\n    sum += frame[i] * frame[i];\n  }\n  return Math.sqrt(sum / frame.length);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1e12f2d6d77b1f91af04564ff9bcf3c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/hooks/use-audio-engine.ts",
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/hooks/use-audio-engine.ts",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 88,
            "endLine": 92
          }
        ],
        "sample": "  for (let i = 0; i < frame.length; i++) {\n    sum += frame[i] * frame[i];\n  }\n  return Math.sqrt(sum / frame.length);\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ebbc5725ab9b5736940e550850625027",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 12,
            "endLine": 16
          }
        ],
        "sample": "\n// Manager exports\nexport { WorkerManager } from './managers/worker-manager';\nexport { MetricsManager } from './managers/metrics-manager';\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cec7dc4f3b7ce49b866b87963d2f841f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "// Engine exports\nexport { AudioWorkletEngine } from './engines/audio-worklet-engine';\nexport { RNNoiseEngine } from './engines/rnnoise-engine';\nexport type { AudioEngine } from './engines/types';\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6aa5e29ab3f88bf1b855a842132d5e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "\n// Export version\nexport const VERSION = '3.0.0';\nexport const MURMURABA_VERSION = VERSION;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "943f770118efe6cd570c9866d95e64a7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "\n// Audio Visualization Components\nexport { WaveformAnalyzer } from './components/waveform-analyzer/waveform-analyzer';\nexport { SyncedWaveforms } from './components/synced-waveforms/synced-waveforms'...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28e2871fdae1e1e0f016df91ae369903",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "\n// Hook exports at the end to avoid circular dependency\nexport { useMurmubaraEngine } from './hooks/use-murmubara-engine';\nexport { useAudioEngine } from './hooks/use-audio-engine';\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ce5726cec1bc75dd1b45a95a3db74724",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/index.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 88,
            "endLine": 92
          },
          {
            "file": "packages/murmuraba/src/index.ts",
            "startLine": 89,
            "endLine": 93
          }
        ],
        "sample": "// Import for default export\nimport { useMurmubaraEngine } from './hooks/use-murmubara-engine';\nimport { useAudioEngine } from './hooks/use-audio-engine';\nimport { MurmubaraEngine } from './core/murmu...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2c7cb1500ad5a51a64a28e3784900e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/infrastructure/gain/web-audio-gain-repository.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/infrastructure/gain/web-audio-gain-repository.ts",
            "startLine": 71,
            "endLine": 75
          },
          {
            "file": "packages/murmuraba/src/infrastructure/gain/web-audio-gain-repository.ts",
            "startLine": 72,
            "endLine": 76
          }
        ],
        "sample": "    // Try memory cache first\n    const cachedPreset = this.presets.get(name);\n    if (cachedPreset) {\n      return cachedPreset;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c133d4fa412380f87e91a1a20a6b6a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 182,
            "endLine": 186
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 365,
            "endLine": 369
          }
        ],
        "sample": "      const endTime = performance.now();\n\n      const processingTime = endTime - startTime;\n\n      expect(result).toBeDefined();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a3297b22da615d1b7f32cf63c3482d99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/__tests__/ChunkProcessor.improved.test.ts",
            "startLine": 205,
            "endLine": 209
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 389,
            "endLine": 393
          }
        ],
        "sample": "\n      const finalMemory = performance.memory?.usedJSHeapSize || 0;\n      const memoryIncrease = finalMemory - initialMemory;\n\n      // Should not increase memory by more than 100MB...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2a3f3504ed317362ea63560950d3b47",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 56,
            "endLine": 60
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 446,
            "endLine": 450
          }
        ],
        "sample": "    totalNoiseReduction: 0,\n    frameCount: 0,\n    totalLatency: 0,\n    periodStartTime: null,\n    totalVAD: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0fcefbfc5c702c84a6940ef88fa70c56",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 447,
            "endLine": 451
          }
        ],
        "sample": "    frameCount: 0,\n    totalLatency: 0,\n    periodStartTime: null,\n    totalVAD: 0,\n    vadReadings: []...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "336b9c99be651e505bcaf42bbe382b01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 448,
            "endLine": 452
          }
        ],
        "sample": "    totalLatency: 0,\n    periodStartTime: null,\n    totalVAD: 0,\n    vadReadings: []\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "43acd3f2070cb77efe1592a4c2bbf614",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 112,
            "endLine": 116
          }
        ],
        "sample": "    // Check if we have enough samples for a chunk\n    while (this.currentSampleCount >= this.samplesPerChunk) {\n      this.processCurrentChunk();\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "99648ec0fdd859dd5f51d3181efa2846",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 158,
            "endLine": 162
          }
        ],
        "sample": "    \n    while (remainingSamples > 0 && this.currentChunk.length > 0) {\n      const buffer = this.currentChunk[0];\n      const samplesToTake = Math.min(remainingSamples, buffer.length);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5dcb667b747b217817c6f0ba8645a631",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "      \n      if (samplesToTake === buffer.length) {\n        // Used entire buffer\n        this.currentChunk.shift();\n      } else {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8eae6b63faa5087903bc2d5c922c91ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 195,
            "endLine": 199
          }
        ],
        "sample": "    // Apply overlap from previous chunk\n    if (this.overlapBuffer.length > 0) {\n      const previousOverlap = this.combineBuffers(this.overlapBuffer);\n      const fadeLength = Math.min(overlapSample...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "de5b3b25c8ec9f19d1eac6b42e3b50c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 208,
            "endLine": 212
          }
        ],
        "sample": "    // Save overlap for next chunk\n    this.overlapBuffer = [samples.subarray(samples.length - overlapSamples)];\n    \n    return result;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2541581f068603f1e550a9a79a9bb054",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 227,
            "endLine": 231
          }
        ],
        "sample": "    \n    const noiseRemoved = originalRMS > 0 \n      ? ((originalRMS - processedRMS) / originalRMS) * 100 \n      : 0;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "92db01a67ad6a7edd4713abe8c5d9265",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 291,
            "endLine": 295
          }
        ],
        "sample": "      // Pad with silence if needed\n      const remainingSamples = this.samplesPerChunk - this.currentSampleCount;\n      if (remainingSamples > 0) {\n        this.addSamples(new Float32Array(remainingS...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4096ea3de3656da4625c9bb77ea5f1c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 321,
            "endLine": 325
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 322,
            "endLine": 326
          }
        ],
        "sample": "    \n    for (const buffer of buffers) {\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "519acc29eb4593d10a6cba5714e1b230",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 357,
            "endLine": 361
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 358,
            "endLine": 362
          }
        ],
        "sample": "    // Set period start time on first frame\n    if (this.accumulatedMetrics.periodStartTime === null) {\n      this.accumulatedMetrics.periodStartTime = timestamp;\n    }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "92aeababa104ba1f52cd329a60e47f76",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 368,
            "endLine": 372
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 369,
            "endLine": 373
          }
        ],
        "sample": "    \n    const frameNoiseReduction = originalRMS > 0 \n      ? ((originalRMS - processedRMS) / originalRMS) * 100 \n      : 0;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "765acfd246acdabf0060e1e5906e0c65",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 378,
            "endLine": 382
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 379,
            "endLine": 383
          }
        ],
        "sample": "    // Accumulate VAD data\n    if (vadLevel !== undefined) {\n      this.accumulatedMetrics.totalVAD += vadLevel;\n      this.accumulatedMetrics.vadReadings.push(vadLevel);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e8897ca52777e486407fd291201b048",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 384,
            "endLine": 388
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 385,
            "endLine": 389
          }
        ],
        "sample": "    // Emit frame-processed event for temporal tracking\n    this.emit('frame-processed', timestamp);\n\n    this.logger.debug(`Frame processed: ${frameNoiseReduction.toFixed(1)}% reduction at ${timestam...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b163b694c229ca2945cf323440ab61f2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 430,
            "endLine": 434
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 431,
            "endLine": 435
          }
        ],
        "sample": "    \n    // Notify through secure bridge\n    this.eventBridge.notifyMetrics(processingMetrics, this.bridgeToken);\n    this.logger.debug('Metrics sent through secure event bridge');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b1f4d47db52aa2bb2d065e99ec1c64b7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/chunk-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 435,
            "endLine": 439
          },
          {
            "file": "packages/murmuraba/src/managers/chunk-processor.ts",
            "startLine": 436,
            "endLine": 440
          }
        ],
        "sample": "    // Reset accumulator for next period\n    this.resetAccumulator();\n\n    return aggregatedMetrics;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d31417eaf2a06691ede4fb07bab48273",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "    outputLevel: 0,\n    timestamp: Date.now(),\n    frameCount: 0,\n    droppedFrames: 0,\n    vadLevel: 0,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3cc9a3615991bc5148508e178e774b62",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 16,
            "endLine": 20
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "    timestamp: Date.now(),\n    frameCount: 0,\n    droppedFrames: 0,\n    vadLevel: 0,\n    isVoiceActive: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "40b4c9634e49f7b137170addfc01b273",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 127,
            "endLine": 131
          }
        ],
        "sample": "    frameCount: 0,\n    droppedFrames: 0,\n    vadLevel: 0,\n    isVoiceActive: false,\n  };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "68517de2701e2877d561b46722b86a24",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 74,
            "endLine": 78
          }
        ],
        "sample": "    // Log significant VAD updates for debugging\n    if (clampedVAD > 0.01) {\n      console.log(`[MetricsManager] VAD updated: ${clampedVAD.toFixed(3)}`);\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4afcdf1bbcc116e4578cf23301d929aa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "    \n    const deltas: number[] = [];\n    for (let i = 1; i < this.frameTimestamps.length; i++) {\n      deltas.push(this.frameTimestamps[i] - this.frameTimestamps[i - 1]);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c46aa6a8d9efd467476b8aab9829e01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/metrics-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "packages/murmuraba/src/managers/metrics-manager.ts",
            "startLine": 152,
            "endLine": 156
          }
        ],
        "sample": "  \n  getAverageVAD(): number {\n    if (this.vadHistory.length === 0) return 0;\n    return this.vadHistory.reduce((a, b) => a + b, 0) / this.vadHistory.length;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9fc9e87bdb878618a3248003e234d6b2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/managers/worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/managers/worker-manager.ts",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "packages/murmuraba/src/managers/worker-manager.ts",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\ninterface WorkerMessage {\n  type: string;\n  payload?: any;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a488527cb3bf1ab14adfc7c87c89436e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/services/gain-service.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 118,
            "endLine": 122
          },
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 119,
            "endLine": 123
          }
        ],
        "sample": "\n  private createGainNode(): void {\n    if (!this.audioContext) {\n      throw new Error('AudioContext not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dcbb2cceceeb3f215f8123a65e83a420",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/services/gain-service.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "\n  private applyPendingGain(): void {\n    if (!this.gainNode || this.pendingGain === undefined) {\n      return;\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ed0ed714a4d763a95b9242eaee66a42",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/services/gain-service.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 132,
            "endLine": 136
          },
          {
            "file": "packages/murmuraba/src/services/gain-service.ts",
            "startLine": 133,
            "endLine": 137
          }
        ],
        "sample": "\n    const targetGain = this.pendingGain;\n    this.pendingGain = undefined;\n\n    if (this.enableSmoothing && this.audioContext) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "75e2a0ccbeb9a469693afdc6ccac7e3a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/types/rnnoise-wasm.d.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/types/rnnoise-wasm.d.ts",
            "startLine": 11,
            "endLine": 15
          },
          {
            "file": "packages/murmuraba/src/types/rnnoise-wasm.d.ts",
            "startLine": 12,
            "endLine": 16
          }
        ],
        "sample": "\n  interface RNNoiseModuleOptions {\n    locateFile?: (filename: string) => string;\n    instantiateWasm?: (imports: WebAssembly.Imports, successCallback: (instance: WebAssembly.Instance, module: WebAss...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fe6ad02c90526a1c091e69ef7e843e82",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "\n    it('should validate WAV header structure', () => {\n      const audioData = new Float32Array(100);\n      audioData.fill(0.1);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6ce6846b065321ab74151dded0d24446",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "\n      // Mock WAV with proper header\n      const mockWavBuffer = new ArrayBuffer(244); // 44 byte header + 200 bytes data\n      const view = new DataView(mockWavBuffer);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a02c750d391120952ad0ee757a696481",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "      expect(mockAudioConverter.resampleAudio).toHaveBeenCalledWith(\n        audioData,\n        fromRate,\n        toRate\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1076fee3627e0b8318c097613894ff2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 265,
            "endLine": 269
          },
          {
            "file": "packages/murmuraba/src/utils/__tests__/AudioConverter.improved.test.ts",
            "startLine": 266,
            "endLine": 270
          }
        ],
        "sample": "\n    it('should apply crossfade between audio segments', () => {\n      const segment1 = new Float32Array([0.8, 0.6, 0.4, 0.2]);\n      const segment2 = new Float32Array([0.1, 0.3, 0.5, 0.7]);\n      con...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a55d7eb692f0859f79e7949b64f9b825",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "      \n      // First decode to AudioBuffer\n      const arrayBuffer = await webmBlob.arrayBuffer();\n      const audioBuffer = await converter.audioContext.decodeAudioData(arrayBuffer);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "218a08ba4d5cada249a5875b57ca5054",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "      \n      // Convert to mono if stereo (lamejs works better with mono)\n      const sampleRate = audioBuffer.sampleRate;\n      const samples = audioBuffer.length;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "84ddcadb5bcf2ba36231df6a33520485",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "      \n      // Get PCM data\n      const pcmData = new Int16Array(samples);\n      const channelData = audioBuffer.getChannelData(0); // Use first channel\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78868b2ed39f7f4228fcb7d38231a9c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "      // Convert float32 to int16\n      for (let i = 0; i < samples; i++) {\n        const s = Math.max(-1, Math.min(1, channelData[i]));\n        pcmData[i] = s < 0 ? s * 0x8000 : s * 0x7FFF;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "afcd51e1d2de6e78e21bf3172d93e0bc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "      // Flush remaining data\n      const mp3buf = mp3encoder.flush();\n      if (mp3buf.length > 0) {\n        mp3Data.push(mp3buf);\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fc4c7654e258815bf88ddb95df782cf2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "  \n  /**\n   * Convert AudioBuffer to WAV format (MONO only for RNNoise compatibility)\n   */\n  private audioBufferToWav(audioBuffer: AudioBuffer): Blob {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "43bab31a065defca1d27105fb6cbb183",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 127,
            "endLine": 131
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "    // RIFF chunk descriptor\n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + length, true);\n    writeString(8, 'WAVE');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a8242bbca4fcb9db9f8928a346df8d1f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 141,
            "endLine": 145
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 142,
            "endLine": 146
          }
        ],
        "sample": "    \n    // Data sub-chunk\n    writeString(36, 'data');\n    view.setUint32(40, length, true);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f41002162906ae760ac13037d70b1971",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 179,
            "endLine": 183
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 180,
            "endLine": 184
          }
        ],
        "sample": "    // WebM FIRST - it actually works for blob playback\n    if (MediaRecorder.isTypeSupported('audio/webm')) {\n      console.log('Using audio/webm for recording');\n      return 'audio/webm';\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3b2b8a964c70447b41ef074a4a5f04d8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 186,
            "endLine": 190
          }
        ],
        "sample": "    // Try webm with codecs\n    if (MediaRecorder.isTypeSupported('audio/webm;codecs=opus')) {\n      console.log('Using audio/webm;codecs=opus for recording');\n      return 'audio/webm;codecs=opus';\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8dc843fdd8ca4c8097d03bf1ee9d46fd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 192,
            "endLine": 196
          }
        ],
        "sample": "    // MP4 as last resort - WARNING: blob playback is broken\n    if (MediaRecorder.isTypeSupported('audio/mp4')) {\n      console.log('Using audio/mp4 - WARNING: Blob playback may fail!');\n      return...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3396575916168dd2a97a82d26c8c977a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "    \n    // If we get here, the browser is COMPLETELY FUCKED\n    console.error('NO AUDIO FORMAT SUPPORTED - THIS BROWSER IS GARBAGE');\n    return 'audio/webm'; // Die trying\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5d6115b56ddab5d9be12c77c4c92cdcc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 210,
            "endLine": 214
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 211,
            "endLine": 215
          }
        ],
        "sample": "      // Check if already WAV\n      if (blob.type === 'audio/wav') {\n        console.log('Audio is already WAV format');\n        return blobUrl;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b2efbc49c6e4662b9ab9d096b651d44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-converter.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "packages/murmuraba/src/utils/audio-converter.ts",
            "startLine": 217,
            "endLine": 221
          }
        ],
        "sample": "      // Skip conversion for WebM/MP4 - let browser handle it natively\n      if (blob.type.includes('webm') || blob.type.includes('mp4')) {\n        console.log('Using native browser playback for', blo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4a35bd3b53155b061ad367d11b0a86a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-resampler.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-resampler.ts",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "packages/murmuraba/src/utils/audio-resampler.ts",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "    \n    // Validate input parameters\n    if (!pcmData || pcmData.length === 0) {\n      throw new Error('PCM data cannot be empty');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e17fcb6b8d5f322cbcd0559772b7f377",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/audio-resampler.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/audio-resampler.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/utils/audio-resampler.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "    \n    if (!Number.isFinite(targetSampleRate) || targetSampleRate <= 0) {\n      throw new Error(`Invalid target sample rate: ${targetSampleRate}`);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b7310ac31629c45bb8a5693297f9092a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/gain-control.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/gain-control.ts",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "packages/murmuraba/src/utils/gain-control.ts",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "\n  constructor(initialGain: number = DEFAULT_GAIN_CONFIG.default, config: GainConfig = DEFAULT_GAIN_CONFIG) {\n    this.config = config;\n    this._currentGain = validateGain(initialGain, config);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f80c24cba67e5d43a9b8edde4a8f7021",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/gain-control.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/gain-control.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "packages/murmuraba/src/utils/gain-control.ts",
            "startLine": 121,
            "endLine": 125
          }
        ],
        "sample": "\n  onGainChange(callback: (gain: number) => void): () => void {\n    this.listeners.add(callback);\n    return () => this.listeners.delete(callback);\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2716be786e8b5529ac22cdd097050cd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 23,
            "endLine": 27
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 24,
            "endLine": 28
          }
        ],
        "sample": "\n  async initialize(engine: AudioEngine, sampleRate: number = 48000): Promise<void> {\n    if (!engine.isInitialized) {\n      await engine.initialize();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "517e62580e0a4b89cffe5eadfc85b12b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 49,
            "endLine": 53
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 50,
            "endLine": 54
          }
        ],
        "sample": "    // Process frames\n    while (this.inputBuffer.length >= this.frameSize) {\n      const frame = new Float32Array(this.inputBuffer.splice(0, this.frameSize));\n      const processedFrame = this.engine...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a654cd4628adcbffef5c7eee641b3017",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "      // Add to output buffer\n      for (let i = 0; i < processedFrame.length; i++) {\n        this.outputBuffer.push(processedFrame[i]);\n      }\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "34392e886809d93ab6fa477368313d5f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/murmuraba-processor.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/utils/murmuraba-processor.ts",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "\n  connectStream(stream: MediaStream): MediaStreamAudioDestinationNode {\n    if (!this.audioContext || !this.processor) {\n      throw new Error('Processor not initialized');\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d0d16a6e4458551788d53ab793cfdc43",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "  \n  private constructor() {\n    this.detectNetworkSpeed();\n    this.setupIdleDetection();\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0d22818851b5debf0c7b3efc5dd4452b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 97,
            "endLine": 101
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 98,
            "endLine": 102
          }
        ],
        "sample": "  \n  // Process queue during idle time\n  private processIdleQueue() {\n    if (!this.isIdle || this.preloadQueue.length === 0) return;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6755f3b48ba8e745783106ca706e4183",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "    \n    if (resource.crossOrigin) {\n      link.crossOrigin = 'anonymous';\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e3060f984cf4416a7058cc23e83d2d4b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "    \n    // Add specific attributes based on type\n    if (resource.type === 'font') {\n      link.type = 'font/woff2';\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1a8d9125f88272d8c025a3a9aeaf619",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/resource-preloader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "packages/murmuraba/src/utils/resource-preloader.ts",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "      // Cancel low priority preloads\n      this.preloadQueue = this.preloadQueue.filter(r => r.priority !== 'low');\n    }\n  }\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "86ab75ee668116b9945a9c03a2cc16f3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-loader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "    \n    if (fallbackImplementation) {\n      console.warn('[RNNoise] Attempting fallback implementation');\n      return fallbackImplementation();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3433a2150ac1aafa4d0047a62d378655",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-loader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "// Centralized WASM path resolution - SINGLE SOURCE OF TRUTH\nfunction getOptimizedWASMPath(filename: string): string {\n  if (typeof window === 'undefined') {\n    return filename;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee6237e1eb44b1d31a77a50b55552eaf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-loader.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-loader.ts",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "\n// Lazy loader for RNNoise module\nexport const lazyLoadRNNoise = () => loadRNNoiseModule();\n\n// Preload WASM for better performance...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f8ef0c579b974d21d732976c644bae30",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 62,
            "endLine": 66
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "      \n      // Set up permanent message handler\n      worker.addEventListener('message', (event) => this.handleWorkerMessage(worker, event));\n      worker.addEventListener('error', (error) => this.ha...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9edaa466481b6a054b5de7d61c151efa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 69,
            "endLine": 73
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 70,
            "endLine": 74
          }
        ],
        "sample": "      \n      this.workers.push(worker);\n      initPromises.push(initPromise);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f156494a7c4cf5bcade0a68d1710415",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "  \n  async processBuffer(buffer: Float32Array): Promise<Float32Array> {\n    if (!this.initialized) {\n      await this.initialize();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cace2caf5c0117cbdda51863c1b99514",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "  \n  private assignTask(worker: Worker, task: WorkerTask): void {\n    this.busyWorkers.add(worker);\n    this.workerTasks.set(worker, task);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c3297621b7a9834fbe6d050bf879ee7b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "  \n  private completeTask(worker: Worker): void {\n    this.busyWorkers.delete(worker);\n    this.workerTasks.delete(worker);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b1ab4da065912beeafc51952dfc9628b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/rnnoise-worker-manager.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/src/utils/rnnoise-worker-manager.ts",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "  \n  private async replaceWorker(failedWorker: Worker): Promise<void> {\n    const index = this.workers.indexOf(failedWorker);\n    if (index === -1) return;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e6d719cf4c259280f6ab3551f1b87a2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/simple-agc.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/simple-agc.ts",
            "startLine": 28,
            "endLine": 32
          },
          {
            "file": "packages/murmuraba/src/utils/simple-agc.ts",
            "startLine": 29,
            "endLine": 33
          }
        ],
        "sample": "    \n    // Create nodes as per WebSearch recommendation\n    this.analyser = audioContext.createAnalyser();\n    this.gainNode = audioContext.createGain();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5815d087e6dd7ea4246be2a00ddc1959",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/simple-agc.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/simple-agc.ts",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "packages/murmuraba/src/utils/simple-agc.ts",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "    // Configure analyser for time-domain analysis\n    this.analyser.fftSize = 256;\n    this.bufferLength = this.analyser.frequencyBinCount;\n    this.dataArray = new Uint8Array(this.bufferLength);\n   ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "00d8deb2730da1a52c2c9765caa751eb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "  \n  if (typeof config.chunkDuration !== 'number' || config.chunkDuration <= 0) {\n    console.error(`Invalid chunkDuration: ${config.chunkDuration}`);\n    return false;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d03a218012d0b776ecee987ab7875a66",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/utils/validation.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "packages/murmuraba/src/utils/validation.ts",
            "startLine": 91,
            "endLine": 95
          }
        ],
        "sample": "  \n  if (config.overlap !== undefined && (typeof config.overlap !== 'number' || config.overlap < 0 || config.overlap >= 1)) {\n    console.error(`Invalid overlap: ${config.overlap}`);\n    return false;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba1ddfc7f5efe694628800f8879fd488",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/workers/rnnoise.worker.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/workers/rnnoise.worker.ts",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "packages/murmuraba/src/workers/rnnoise.worker.ts",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "\n  constructor() {\n    console.log('[RNNoiseWorker] Worker started');\n    self.addEventListener('message', this.handleMessage.bind(this));\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "48744322a2d5be369befd0ed735d66bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/src/workers/rnnoise.worker.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/src/workers/rnnoise.worker.ts",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "packages/murmuraba/src/workers/rnnoise.worker.ts",
            "startLine": 109,
            "endLine": 113
          }
        ],
        "sample": "\n    try {\n      // Process the audio buffer (RNNoiseEngine.process is synchronous)\n      const processedBuffer = this.engine.process(buffer);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "faa3f88ffa192c3281e0389c0ae798c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 6,
            "endLine": 10
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 7,
            "endLine": 11
          }
        ],
        "sample": "// Configuration\nconst SERVER_URL = 'http://localhost:3000';\nconst LOGS_OUTPUT_FILE = path.join(__dirname, 'browser-logs-capture.json');\nconst SCREENSHOT_DIR = path.join(__dirname, 'screenshots');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4162e7077ec7b0b9800fbfc51275e5fc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "      // Server not ready yet\n    }\n    \n    await new Promise(resolve => setTimeout(resolve, 1000));\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "41fa6357837fb37d70ddea42c6a9b553",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 74,
            "endLine": 78
          }
        ],
        "sample": "\n  let serverProcess = null;\n  let browser = null;\n\n  try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "55d4123ed0c0aaf83a6dbace8c873f66",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "\n    // Start server\n    serverProcess = startServer();\n    await waitForServer(SERVER_URL);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "72995a2df6a92bbc3c84f7b2c2ad69bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 94,
            "endLine": 98
          }
        ],
        "sample": "    \n    // Enable coverage collection\n    await page.coverage.startJSCoverage();\n    await page.coverage.startCSSCoverage();\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c9fd0501c2277c34753f86fd243b6a0c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 122,
            "endLine": 126
          }
        ],
        "sample": "      // Extract audio processing logs\n      if (msg.text().includes('Audio') || msg.text().includes('processing') || \n          msg.text().includes('VAD') || msg.text().includes('RNNoise')) {\n       ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a295e676164f810b7aaf9f4b18d0b69b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "\n    // Navigate to the page\n    console.log(`📱 Navigating to ${SERVER_URL}...`);\n    await page.goto(SERVER_URL, { waitUntil: 'networkidle2' });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71889c09616ec180cc79f7fd5060d3d1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "\n    // Wait for AudioDemo to be visible\n    console.log('⏳ Waiting for AudioDemo component...');\n    await page.waitForSelector('[data-testid=\"audio-demo\"]', { timeout: 30000 });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f1fb957bf06fd9f2c6c393793d932dba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "    // Wait for engine status\n    console.log('⏳ Waiting for engine status...');\n    const engineStatusSelector = '[data-testid=\"engine-status\"]';\n    await page.waitForSelector(engineStatusSelector, ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f0a7e936502b21a9ba3413561aa0c0f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 249,
            "endLine": 253
          }
        ],
        "sample": "      await page.waitForFunction(\n        () => {\n          const logs = document.querySelector('[data-testid=\"audio-logs\"]');\n          return logs?.textContent?.includes('Procesamiento completado');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b2dae9f3b41e7b89b1c80cb7541bb1ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 250,
            "endLine": 254
          }
        ],
        "sample": "        () => {\n          const logs = document.querySelector('[data-testid=\"audio-logs\"]');\n          return logs?.textContent?.includes('Procesamiento completado');\n        },\n        { timeout: 300...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "daf2e44c34cdc9637cd6446071f74727",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 251,
            "endLine": 255
          }
        ],
        "sample": "          const logs = document.querySelector('[data-testid=\"audio-logs\"]');\n          return logs?.textContent?.includes('Procesamiento completado');\n        },\n        { timeout: 30000 }\n      );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a09fbdb5edd4d89430adf68df0b3d6e0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 295,
            "endLine": 299
          }
        ],
        "sample": "    // Save logs\n    console.log('💾 Saving logs...');\n    await fs.writeFile(LOGS_OUTPUT_FILE, JSON.stringify(logs, null, 2));\n    console.log(`✅ Logs saved to ${LOGS_OUTPUT_FILE}`);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "262ca5080c4dd5d189533620042ae8bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 335,
            "endLine": 339
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 336,
            "endLine": 340
          }
        ],
        "sample": "    \n    if (serverProcess) {\n      console.log('🛑 Stopping server...');\n      serverProcess.kill('SIGTERM');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5321d4d73b407735e6b29a06b64c579d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js",
          "test-app-puppeteer.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 339,
            "endLine": 343
          },
          {
            "file": "test-app-puppeteer.js",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "      \n      // Give it time to shutdown gracefully\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Force kill if still running...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "566690e88836232a85cf4759a7bc5c18",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/capture-browser-logs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 342,
            "endLine": 346
          },
          {
            "file": "packages/murmuraba/tests/e2e/capture-browser-logs.js",
            "startLine": 343,
            "endLine": 347
          }
        ],
        "sample": "      \n      // Force kill if still running\n      try {\n        serverProcess.kill('SIGKILL');\n      } catch (e) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed44c954aa1520a4c9017daac798131f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 40,
            "endLine": 44
          }
        ],
        "sample": "                \n                if (!window.WebAssembly) {\n                    throw new Error('WebAssembly not supported');\n                }\n                ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65622fbe63f88475e5f0ab427bb25ac4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 151,
            "endLine": 155
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "    await page.goto(`http://localhost:${PORT}`, {\n      waitUntil: 'networkidle0',\n      timeout: 30000\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "877a203fce03d4898e32c67e29425905",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 154,
            "endLine": 158
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "    });\n\n    // Wait for test to complete\n    await page.waitForFunction(\n      () => window.testResult !== undefined,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "934bd89da3c8c8dd9412190c7819138f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 155,
            "endLine": 159
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 182,
            "endLine": 186
          }
        ],
        "sample": "\n    // Wait for test to complete\n    await page.waitForFunction(\n      () => window.testResult !== undefined,\n      { timeout: 10000 }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "12d65bbf720ec375a2c4b2b6c7e17049",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 183,
            "endLine": 187
          }
        ],
        "sample": "    // Wait for test to complete\n    await page.waitForFunction(\n      () => window.testResult !== undefined,\n      { timeout: 10000 }\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "819d261666e0e7414c5adca5eb03848d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 157,
            "endLine": 161
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "    await page.waitForFunction(\n      () => window.testResult !== undefined,\n      { timeout: 10000 }\n    );\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "eea098bb31fb8db66f03560b32861a46",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/tests/e2e/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 188,
            "endLine": 192
          },
          {
            "file": "packages/murmuraba/tests/e2e/wasm-loading.test.js",
            "startLine": 189,
            "endLine": 193
          }
        ],
        "sample": "\n    // Check that WASM was requested at the correct path\n    const wasmRequests = requests.filter(url => url.includes('.wasm'));\n    expect(wasmRequests.length).toBeGreaterThan(0);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "da7bafbc3d0cd5c8c8eaf734dc3e0f11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 6,
            "endLine": 10
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 7,
            "endLine": 11
          }
        ],
        "sample": "// Import your app's main component here\n// import App from './App'\n\ndescribe('React App Health Verification', () => {\n  beforeAll(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "20e85f72d46e468baecfc1fea08ecb66",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "\n    it('should handle ErrorBoundary correctly', () => {\n      const ThrowError = () => {\n        throw new Error('Test error')\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71bddbc6a58ca8e3e14128122eed0a3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "\n  describe('Murmuraba Integration', () => {\n    it('should initialize audio engine correctly', async () => {\n      render(<App />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c5ce1c44ed57c2dc442e030ceb231e28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 68,
            "endLine": 72
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 69,
            "endLine": 73
          }
        ],
        "sample": "\n    it('should load WASM module successfully', async () => {\n      const fetchSpy = vi.spyOn(global, 'fetch')\n      render(<App />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2e3ff900fcf8c51b0654fe68b270698",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 84,
            "endLine": 88
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 85,
            "endLine": 89
          }
        ],
        "sample": "      \n      // Find and click process button\n      const processButton = await screen.findByText(/process|analyze/i)\n      fireEvent.click(processButton)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9cd70cc3256fbbbd792a95dd592cdd74",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 96,
            "endLine": 100
          }
        ],
        "sample": "\n  describe('Performance Checks', () => {\n    it('should not cause memory leaks on unmount', async () => {\n      const { unmount } = render(<App />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61421c1d789f3b7367df7256dd912bc3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 104,
            "endLine": 108
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 105,
            "endLine": 109
          }
        ],
        "sample": "      \n      // Check listeners are cleaned up\n      const afterListeners = (window as any).eventListeners?.length || 0\n      expect(afterListeners).toBeLessThanOrEqual(initialListeners)\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0ecf7c3b9672da2f4122833683584db",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "      \n      render(<CounterWrapper />)\n      \n      // Wait for initial renders\n      await new Promise(resolve => setTimeout(resolve, 100))...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "16767e8e042ac37889ab69326e32c8cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "      \n      global.AudioContext = vi.fn(() => mockContext)\n      \n      render(<App />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2a34e5c984526e4d9a6a8a2b931a59b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 143,
            "endLine": 147
          }
        ],
        "sample": "      \n      // Simulate user interaction\n      const button = await screen.findByRole('button')\n      fireEvent.click(button)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "621a09cb470d05a71029d941b85573d7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 148,
            "endLine": 152
          }
        ],
        "sample": "      // Context should resume\n      await waitFor(() => {\n        expect(mockContext.resume).toHaveBeenCalled()\n      })\n    })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d442a42037875f53db9d84b62d114e27",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "\n    it('should gracefully handle missing AudioWorklet support', () => {\n      // Remove AudioWorklet support\n      const originalAudioWorklet = (window as any).AudioWorklet\n      delete (window as an...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "22739114af1a42fc8c729613fb3b1037",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 163,
            "endLine": 167
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 164,
            "endLine": 168
          }
        ],
        "sample": "      \n      // Restore\n      (window as any).AudioWorklet = originalAudioWorklet\n    })\n  })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "04bd20e3c82acaef4b41553e0760155b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 169,
            "endLine": 173
          }
        ],
        "sample": "\n  describe('Integration Test Suite', () => {\n    it('should complete full audio processing workflow', async () => {\n      render(<App />)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6c3cd1e75fb3d4074273c035ff06d9e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 173,
            "endLine": 177
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "      // 1. Wait for engine ready\n      await waitFor(() => {\n        const status = screen.getByTestId('engine-status')\n        expect(status).toHaveTextContent('ready')\n      }, { timeout: 5000 })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6adbf3dbe690e6053e6f38a4fdcb4ad7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app-health.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "packages/murmuraba/verify-app-health.test.tsx",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "      \n      // 3. Process audio\n      const processButton = screen.getByText(/process/i)\n      fireEvent.click(processButton)\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7a8c2580b0ab264298a5eddc703d5f3d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app.js",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "packages/murmuraba/verify-app.js",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "  // Browser Console Commands\n  browserCommands: () => {\n    console.log('\\n💻 BROWSER CONSOLE COMMANDS:')\n    console.log('Copy and run these in your browser console:')\n    console.log(`...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a976a347318283f731d3518f1afc8226",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/verify-app.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/verify-app.js",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "packages/murmuraba/verify-app.js",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "\n// List all event listeners\nconst listeners = getEventListeners(document);\nconsole.log('Document event listeners:', Object.keys(listeners).length);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "448a95d55326336b2de065f26ef805e4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "vitest.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "vitest.config.ts",
            "startLine": 2,
            "endLine": 6
          }
        ],
        "sample": "import path from 'path';\n\nexport default defineConfig({\n  test: {\n    environment: 'happy-dom',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab7c75e8ae15a3a42b67ee70261196bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\nexport default defineConfig({\n  test: {\n    environment: 'happy-dom',\n    environmentOptions: {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "28e3e372077722c6fb55360419862699",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 6,
            "endLine": 10
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 7,
            "endLine": 11
          }
        ],
        "sample": "    environment: 'happy-dom',\n    environmentOptions: {\n      happyDOM: {\n        settings: {\n          disableJavaScriptFileLoading: false,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5be34099fe98504740df05df2d3d6deb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/vitest.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 47,
            "endLine": 51
          }
        ],
        "sample": "        // Global thresholds (realistic for current 17.54% coverage)\n        lines: 25,\n        functions: 40,\n        branches: 25,\n        statements: 25,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4f4a010c808b6f861bdf47688de307b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "packages/murmuraba/vitest.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "packages/murmuraba/vitest.config.ts",
            "startLine": 92,
            "endLine": 96
          }
        ],
        "sample": "    // Optimize snapshot handling\n    snapshotFormat: {\n      escapeString: false,\n      printBasicPrototype: false\n    },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "304c816b64f78d3aa328ba39fa5f584c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "public/sw.js",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "// 2025 best practices: Cache-first strategy for WASM, network-first for API\n\nconst CACHE_NAME = 'murmuraba-v2.3.1';\nconst WASM_CACHE = 'murmuraba-wasm-v1';\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fbc47d26aa1bc3e066dba453a31f7999",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "public/sw.js",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "      // Cache static resources\n      caches.open(CACHE_NAME).then((cache) => {\n        console.log('[ServiceWorker] Caching static resources');\n        return cache.addAll(STATIC_RESOURCES);\n      })...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6cb9ef6c9c333c5dff658a8d76461e6c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 60,
            "endLine": 64
          },
          {
            "file": "public/sw.js",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "// Fetch event - implement caching strategies\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0bf0930741871a684f1d1be09faa0745",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 89,
            "endLine": 93
          },
          {
            "file": "public/sw.js",
            "startLine": 90,
            "endLine": 94
          }
        ],
        "sample": "  // Cache-first strategy for static assets\n  if (url.pathname.match(/\\.(js|css|png|jpg|jpeg|svg|ico)$/)) {\n    event.respondWith(\n      caches.match(request).then((cachedResponse) => {\n        if (ca...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3239d29e46fadf139d22da66f3d59c3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "public/sw.js",
            "startLine": 123,
            "endLine": 127
          }
        ],
        "sample": "            const responseClone = response.clone();\n            caches.open(CACHE_NAME).then((cache) => {\n              cache.put(request, responseClone);\n            });\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e5dafbd5699cec1fe227c7c1e101622",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "public/sw.js",
            "startLine": 124,
            "endLine": 128
          }
        ],
        "sample": "            caches.open(CACHE_NAME).then((cache) => {\n              cache.put(request, responseClone);\n            });\n          }\n          return response;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3f1be31d15e664e40290abfa62edd28a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 130,
            "endLine": 134
          },
          {
            "file": "public/sw.js",
            "startLine": 131,
            "endLine": 135
          }
        ],
        "sample": "      // Fallback to cache if network fails\n      return caches.match(request).then((cachedResponse) => {\n        if (cachedResponse) {\n          return cachedResponse;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2b048a03a43af793aa37973403201533",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "public/sw.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "public/sw.js",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "public/sw.js",
            "startLine": 149,
            "endLine": 153
          }
        ],
        "sample": "// Message handling for cache control\nself.addEventListener('message', (event) => {\n  if (event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1fbb5ac3a5923b3365320cc1bc8245ae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-performance.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-performance.js",
            "startLine": 96,
            "endLine": 100
          },
          {
            "file": "scripts/analyze-performance.js",
            "startLine": 97,
            "endLine": 101
          }
        ],
        "sample": "  \n  recommendations.forEach(rec => console.log(`   ${rec}`));\n  console.log();\n}\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6e2c0946c75ca4e156e39c9e7ccf6bd3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-performance.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-performance.js",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "scripts/analyze-performance.js",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "  \n  improvements.forEach(improvement => console.log(`   ${improvement}`));\n  console.log();\n}\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c894bfbadcfc9be98d8d6ca4c48c6b9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\nconst rootDir = join(__dirname, '..');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5eb99ad37b4bd1ebb3d5b0b4fa984d9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 63,
            "endLine": 67
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "\nfunction info(message) {\n  log(`ℹ️  ${message}`, colors.blue);\n}\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b22a2a6a73e9d9386ae42e744bd2f4c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 131,
            "endLine": 135
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 132,
            "endLine": 136
          }
        ],
        "sample": "\n// 1. Dead Code Detection\nasync function analyzeDeadCode() {\n  section('DEAD CODE ANALYSIS');\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "871f984859e67bc1ed0390500e794bbd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 143,
            "endLine": 147
          }
        ],
        "sample": "      \n      if (knipData.files?.length > 0) {\n        warning(`Found ${knipData.files.length} unused files:`);\n        knipData.files.forEach(file => log(`  - ${file}`, colors.yellow));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8db89173458ccc94fa70edb2c869e01f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 147,
            "endLine": 151
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 148,
            "endLine": 152
          }
        ],
        "sample": "      \n      if (knipData.dependencies?.length > 0) {\n        warning(`Found ${knipData.dependencies.length} unused dependencies:`);\n        knipData.dependencies.forEach(dep => log(`  - ${dep}`, colo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3718b438663cf73bd99c4da321e7baf5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 153,
            "endLine": 157
          }
        ],
        "sample": "      \n      if (knipData.exports?.length > 0) {\n        warning(`Found ${knipData.exports.length} unused exports:`);\n        knipData.exports.forEach(exp => log(`  - ${exp.file}:${exp.symbol}`, color...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dfe01d695c8dec1dff96f9082b145143",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 180,
            "endLine": 184
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 181,
            "endLine": 185
          }
        ],
        "sample": "      \n      if (unusedDeps.length > 0) {\n        warning(`Unused dependencies (${unusedDeps.length}):`);\n        unusedDeps.forEach(dep => log(`  - ${dep}`, colors.yellow));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b0d2bad51551423db3f798f2bbb410d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 185,
            "endLine": 189
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 186,
            "endLine": 190
          }
        ],
        "sample": "      \n      if (unusedDevDeps.length > 0) {\n        warning(`Unused dev dependencies (${unusedDevDeps.length}):`);\n        unusedDevDeps.forEach(dep => log(`  - ${dep}`, colors.yellow));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6abde1feac669dddba7eb8860f2c3687",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 191,
            "endLine": 195
          }
        ],
        "sample": "      \n      if (missingDeps.length > 0) {\n        error(`Missing dependencies (${missingDeps.length}):`);\n        missingDeps.forEach(dep => log(`  - ${dep}`, colors.red));\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "abf8e24d560002d134e5f08814624c44",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 235,
            "endLine": 239
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 236,
            "endLine": 240
          }
        ],
        "sample": "\n// 2. Bundle Analysis\nasync function analyzeBundleSize() {\n  section('BUNDLE SIZE ANALYSIS');\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "73244858eddd61d8a7586fcb718e50ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 243,
            "endLine": 247
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 244,
            "endLine": 248
          }
        ],
        "sample": "  \n  if (!buildResult.success) {\n    error('Build failed - cannot analyze bundle');\n    return;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7da095e4b313e30e6ae6a69d9d6c8f33",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 370,
            "endLine": 374
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 371,
            "endLine": 375
          }
        ],
        "sample": "  \n  const testResult = execCommand('find src packages/murmuraba/src -name \"*.test.*\" -o -name \"*__tests__*\" | wc -l');\n  if (testResult.success) {\n    structureAnalysis.tests = parseInt(testResult.ou...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f423b1ec8df1e9accd43beb4713f656",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-refactoring.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 531,
            "endLine": 535
          },
          {
            "file": "scripts/analyze-refactoring.js",
            "startLine": 532,
            "endLine": 536
          }
        ],
        "sample": "  \n  log(`\\n${colors.bright}${colors.green}✅ Analysis Complete!${colors.reset}`);\n  log(`📁 Check generated reports in: ./jscpd-report.json`, colors.blue);\n  log(`🚀 Start with High Impact, Low Effort...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1506ce2c1c2e0037dd6d71307f20df57",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-zustand-performance.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 22,
            "endLine": 26
          },
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 23,
            "endLine": 27
          }
        ],
        "sample": "\n  analyzeFile(filePath) {\n    const content = fs.readFileSync(filePath, 'utf-8');\n    const relativePath = path.relative(process.cwd(), filePath);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0613976a4db464539e6f0bef27a7df6d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-zustand-performance.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 48,
            "endLine": 52
          },
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 49,
            "endLine": 53
          }
        ],
        "sample": "    \n    if (selectorUsages.length > 0) {\n      this.metrics.componentsWithSelectors++;\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae8cd6daa4d2817bdff6b2a389e9cd17",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/analyze-zustand-performance.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 109,
            "endLine": 113
          },
          {
            "file": "scripts/analyze-zustand-performance.js",
            "startLine": 110,
            "endLine": 114
          }
        ],
        "sample": "\n  generateReport() {\n    console.log('\\\\n🔍 Zustand Store Performance Analysis Report\\\\n');\n    console.log('=' * 60);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd2a1c90693f2da9573e75124dc7b462",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/check-docs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/check-docs.js",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "scripts/check-docs.js",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "// Paths\nconst indexPath = path.join(__dirname, '../packages/murmuraba/src/index.ts');\nconst readmePath = path.join(__dirname, '../packages/murmuraba/README.md');\nconst packagePath = path.join(__dirna...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05316f1a3d8ae3eef5c011f34259fd55",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/check-docs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/check-docs.js",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "scripts/check-docs.js",
            "startLine": 51,
            "endLine": 55
          }
        ],
        "sample": "// Also check for direct exports\nconst directExportRegex = /export\\s+(?:const|function|class|interface|type)\\s+(\\w+)/g;\nwhile ((match = directExportRegex.exec(indexContent)) !== null) {\n  namedExports...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "185170cf53e1476b505f1b7281675c84",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/check-docs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/check-docs.js",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "scripts/check-docs.js",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "\n// Remove duplicates\nconst uniqueExports = [...new Set(namedExports)];\nconsole.log(`Found ${uniqueExports.length} exports`);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e789aadfa650aa9bbbe7d9fb7c3a122a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/check-docs.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/check-docs.js",
            "startLine": 103,
            "endLine": 107
          },
          {
            "file": "scripts/check-docs.js",
            "startLine": 104,
            "endLine": 108
          }
        ],
        "sample": "// 5. Check for TODO or FIXME in README\nif (readmeContent.includes('TODO') || readmeContent.includes('FIXME')) {\n  console.warn('⚠️  README contains TODO or FIXME markers');\n  hasWarnings = true;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "578e7e0d9853bd0ad1a476f0b10a6494",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/comprehensive-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "\nif (orphanedTests.length > 0) {\n  console.log('🚨 ORPHANED TESTS DETECTED:');\n  orphanedTests.forEach(file => console.log(`   ${file}`));\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "36c83bd2937b90f3ba2560a9cecb26c0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/comprehensive-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 171,
            "endLine": 175
          },
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 172,
            "endLine": 176
          }
        ],
        "sample": "\nif (tempFiles.length > 0) {\n  console.log('🗑️  TEMPORARY FILES DETECTED:');\n  tempFiles.forEach(file => console.log(`   ${file}`));\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e6168f7def7209682ecaf1cb01060a03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/comprehensive-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 176,
            "endLine": 180
          },
          {
            "file": "scripts/comprehensive-analysis.js",
            "startLine": 177,
            "endLine": 181
          }
        ],
        "sample": "\nif (tsbuildinfo.length > 0) {\n  console.log('🏗️  BUILD INFO FILES:');\n  tsbuildinfo.forEach(file => console.log(`   ${file}`));\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8faa3085ce223aec2221e037f0383a90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 33,
            "endLine": 37
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "\n  // The Eye of Sauron - Screenshot Analysis\n  async captureScreenshots() {\n    console.log('\\n📸 ACTIVATING THE EYE OF SAURON - CAPTURING SCREENSHOTS...\\n');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b8136eaf22ce392eeba6c34ff2a03afb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "\n    const screenshotDir = path.join(process.cwd(), 'gandalf-screenshots');\n    if (!fs.existsSync(screenshotDir)) {\n      fs.mkdirSync(screenshotDir);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d276d65b09b71249cbb6bc6d14c1568",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 120,
            "endLine": 124
          }
        ],
        "sample": "\n  // The Nazgûl Detection System - CSS Module Analysis\n  detectCSSOrphans() {\n    console.log('\\n🦅 NAZGÛL SEARCHING FOR CSS ORPHANS...\\n');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e1dd81d085ba324e5f51e673e4d60cae",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "    // Find all CSS modules\n    const cssModules = glob('**/*.module.css', { \n      ignore: ['node_modules/**', 'dist/**', 'build/**'] \n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "dddbf1cc6511c67771b04502eb3c2967",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "    // Find all component files\n    const componentFiles = glob('**/*.{tsx,jsx,ts,js}', { \n      ignore: ['node_modules/**', 'dist/**', 'build/**', '**/*.test.*', '**/*.spec.*'] \n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cae4aff728a293bdedd231f64de1fb03",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 146,
            "endLine": 150
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 147,
            "endLine": 151
          }
        ],
        "sample": "\n    // Analyze component usage\n    componentFiles.forEach(componentFile => {\n      const content = fs.readFileSync(componentFile, 'utf-8');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ac25943053aa90258bd869b4c0da93a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 219,
            "endLine": 223
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 220,
            "endLine": 224
          }
        ],
        "sample": "\n  // Enhanced Balrog Detection with Visual Analysis\n  async detectBalrogsWithVisualContext(content, filePath) {\n    const balrogs = [];\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e119a720e56e8efd4582940cb0846afb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 222,
            "endLine": 226
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 30,
            "endLine": 34
          }
        ],
        "sample": "    const balrogs = [];\n\n    // Original accessibility checks\n    if (content.match(/<button[^>]*>(?!.*aria-label)/gi)) {\n      balrogs.push({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "36bbe88508cc1f74dff20541d84b54c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 31,
            "endLine": 35
          }
        ],
        "sample": "\n    // Original accessibility checks\n    if (content.match(/<button[^>]*>(?!.*aria-label)/gi)) {\n      balrogs.push({\n        file: filePath,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65b3fa5253e856b8119980c9a1f0c86b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "    // Original accessibility checks\n    if (content.match(/<button[^>]*>(?!.*aria-label)/gi)) {\n      balrogs.push({\n        file: filePath,\n        issue: 'Button without aria-label detected',...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a992bf3cf46b42a921d46d430c4cca3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 33,
            "endLine": 37
          }
        ],
        "sample": "    if (content.match(/<button[^>]*>(?!.*aria-label)/gi)) {\n      balrogs.push({\n        file: filePath,\n        issue: 'Button without aria-label detected',\n        line: this.findLineNumber(content,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0ab453f584a4c4b57a43bfd354f7b794",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 226,
            "endLine": 230
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 34,
            "endLine": 38
          }
        ],
        "sample": "      balrogs.push({\n        file: filePath,\n        issue: 'Button without aria-label detected',\n        line: this.findLineNumber(content, /<button[^>]*>(?!.*aria-label)/i),\n        severity: 'CRITI...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b929edf88d8ca522ac9adfe4bc7c6df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 268,
            "endLine": 272
          }
        ],
        "sample": "    // Simplified color extraction - in production, use a proper CSS parser\n    const pairs = [];\n    const colorRegex = /color:\\s*(#[0-9a-f]{3,6}|rgb\\([^)]+\\))/gi;\n    const bgRegex = /background(-co...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e57008d95444b7fe4ae81f66a7617172",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 280,
            "endLine": 284
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "  }\n\n  findLineNumber(content, regex) {\n    const lines = content.split('\\n');\n    for (let i = 0; i < lines.length; i++) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03aedb4056b4bebf82b4ab0187de3c94",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 281,
            "endLine": 285
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 175,
            "endLine": 179
          }
        ],
        "sample": "\n  findLineNumber(content, regex) {\n    const lines = content.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      if (regex.test(lines[i])) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95d3f84b970fe6c63cca06888dd190fb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 282,
            "endLine": 286
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 176,
            "endLine": 180
          }
        ],
        "sample": "  findLineNumber(content, regex) {\n    const lines = content.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      if (regex.test(lines[i])) {\n        return i + 1;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f9ca222824d99a7fdeea9be4b68443f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 283,
            "endLine": 287
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 177,
            "endLine": 181
          }
        ],
        "sample": "    const lines = content.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n      if (regex.test(lines[i])) {\n        return i + 1;\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1810792a7af3988277ba55b8ced9ddfc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 284,
            "endLine": 288
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "    for (let i = 0; i < lines.length; i++) {\n      if (regex.test(lines[i])) {\n        return i + 1;\n      }\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "afd547c1a34372ebf6e18abd833ed718",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 285,
            "endLine": 289
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "      if (regex.test(lines[i])) {\n        return i + 1;\n      }\n    }\n    return 0;...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4c7d9ce7fe92bac14ada6e7cfe171844",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 290,
            "endLine": 294
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "  }\n\n  async analyzeFile(filePath) {\n    try {\n      const content = await fs.promises.readFile(filePath, 'utf-8');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "50c884684f7d853ab56882a553373d9b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 301,
            "endLine": 305
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "      console.error(`Failed to analyze ${filePath}:`, error.message);\n    }\n  }\n\n  async runAnalysis() {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ec4389133a67bb20e3c73becac4f6c8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 304,
            "endLine": 308
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 305,
            "endLine": 309
          }
        ],
        "sample": "\n  async runAnalysis() {\n    console.log('\\n🧙‍♂️ GANDALF FURIOSO ENHANCED UX ANALYSIS INITIATED');\n    console.log('=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\\n');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "05bdd8cf04191aa2f962f583513e4541",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 316,
            "endLine": 320
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 212,
            "endLine": 216
          }
        ],
        "sample": "    const componentFiles = glob('src/**/*.{tsx,jsx}', { ignore: 'node_modules/**' });\n    const styleFiles = glob('src/**/*.{css,scss}', { ignore: 'node_modules/**' });\n\n    // Analyze all files\n    f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e364d08ebfe5f6d2c1ba4574d2d4aa4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 317,
            "endLine": 321
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 213,
            "endLine": 217
          }
        ],
        "sample": "    const styleFiles = glob('src/**/*.{css,scss}', { ignore: 'node_modules/**' });\n\n    // Analyze all files\n    for (const file of [...componentFiles, ...styleFiles]) {\n      await this.analyzeFile(f...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "38acdcf325a0ad8124183bafa13ac27c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 321,
            "endLine": 325
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 217,
            "endLine": 221
          }
        ],
        "sample": "      await this.analyzeFile(file);\n    }\n\n    // Generate report\n    this.generateReport();...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "843a14548c798a0e8dd6b66974835612",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 221,
            "endLine": 225
          }
        ],
        "sample": "    this.generateReport();\n  }\n\n  generateReport() {\n    console.log('\\n⚔️  BALROGS DETECTED (CRITICAL ISSUES - YOU SHALL NOT PASS!)');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "08f0622e9082708daa5c14a41338d10b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 326,
            "endLine": 330
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 222,
            "endLine": 226
          }
        ],
        "sample": "  }\n\n  generateReport() {\n    console.log('\\n⚔️  BALROGS DETECTED (CRITICAL ISSUES - YOU SHALL NOT PASS!)');\n    console.log('═══════════════════════════════════════════════════════════\\n');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1ae629d61a999c3abcae78df70080df7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 327,
            "endLine": 331
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 223,
            "endLine": 227
          }
        ],
        "sample": "\n  generateReport() {\n    console.log('\\n⚔️  BALROGS DETECTED (CRITICAL ISSUES - YOU SHALL NOT PASS!)');\n    console.log('═══════════════════════════════════════════════════════════\\n');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5cc75bb8736d3a5ffff686019044507c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 328,
            "endLine": 332
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 224,
            "endLine": 228
          }
        ],
        "sample": "  generateReport() {\n    console.log('\\n⚔️  BALROGS DETECTED (CRITICAL ISSUES - YOU SHALL NOT PASS!)');\n    console.log('═══════════════════════════════════════════════════════════\\n');\n    \n    if (t...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa8844e999dd4b0b65be894ccb09de4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 329,
            "endLine": 333
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 225,
            "endLine": 229
          }
        ],
        "sample": "    console.log('\\n⚔️  BALROGS DETECTED (CRITICAL ISSUES - YOU SHALL NOT PASS!)');\n    console.log('═══════════════════════════════════════════════════════════\\n');\n    \n    if (this.issues.critical.l...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d2823248faa1c1cd1ab31f65c48c000a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 226,
            "endLine": 230
          }
        ],
        "sample": "    console.log('═══════════════════════════════════════════════════════════\\n');\n    \n    if (this.issues.critical.length === 0) {\n      console.log('✅ No critical issues found. The bridge is clear!\\...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "045cd4974839acdebf214d9902bb1564",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 331,
            "endLine": 335
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 227,
            "endLine": 231
          }
        ],
        "sample": "    \n    if (this.issues.critical.length === 0) {\n      console.log('✅ No critical issues found. The bridge is clear!\\n');\n    } else {\n      this.issues.critical.forEach((issue, index) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "efb9fc0c25b10d645378371aff49307f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 332,
            "endLine": 336
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 228,
            "endLine": 232
          }
        ],
        "sample": "    if (this.issues.critical.length === 0) {\n      console.log('✅ No critical issues found. The bridge is clear!\\n');\n    } else {\n      this.issues.critical.forEach((issue, index) => {\n        consol...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74220888e5a0ae0fe71bde910c9b9b9e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 333,
            "endLine": 337
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 229,
            "endLine": 233
          }
        ],
        "sample": "      console.log('✅ No critical issues found. The bridge is clear!\\n');\n    } else {\n      this.issues.critical.forEach((issue, index) => {\n        console.log(`🔥 BALROG #${index + 1}: ${issue.issue...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b12594cc98e1117bca50632c640a99be",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js",
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 334,
            "endLine": 338
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 230,
            "endLine": 234
          }
        ],
        "sample": "    } else {\n      this.issues.critical.forEach((issue, index) => {\n        console.log(`🔥 BALROG #${index + 1}: ${issue.issue}`);\n        console.log(`   File: ${issue.file}${issue.line ? ` (Line ${...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c47a62f18ff3a2446494910efb98bdfc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-enhanced-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 391,
            "endLine": 395
          },
          {
            "file": "scripts/gandalf-enhanced-ux-analysis.js",
            "startLine": 392,
            "endLine": 396
          }
        ],
        "sample": "    \n    console.log('\\n\"Even the smallest CSS class can change the course of the future!\"');\n    console.log('\\n🧙‍♂️ Enhanced analysis complete. May your styles be ever purposeful!\\n');\n  }\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7b964f83917c316d5bdbb58aad587ea5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 27,
            "endLine": 31
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 28,
            "endLine": 32
          }
        ],
        "sample": "\n  // The Balrog Detection System - Critical Issues\n  detectBalrogs(content, filePath) {\n    const balrogs = [];\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "951f8f0af469235d6ea44cf047ec2891",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 138,
            "endLine": 142
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "\n  // The Goblin Detection System - Suggestions\n  detectGoblins(content, filePath) {\n    const goblins = [];\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c22228956323bf6df04a2ac02394f7bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 189,
            "endLine": 193
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 190,
            "endLine": 194
          }
        ],
        "sample": "      \n      // Detect critical issues (Balrogs)\n      const balrogs = this.detectBalrogs(content, filePath);\n      this.issues.critical.push(...balrogs);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bd7eb31c210861a48dfa1386ce61fac3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "\n      // Detect warnings (Orcs)\n      const orcs = this.detectOrcs(content, filePath);\n      this.issues.warnings.push(...orcs);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d5105f0c3173bf0fca0654467a751202",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 206,
            "endLine": 210
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "\n  async runAnalysis() {\n    console.log('\\n🧙‍♂️ GANDALF FURIOSO UX ANALYSIS INITIATED');\n    console.log('=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\"=\\n');\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9f807226d1461481a344d5e2669b6d5b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 247,
            "endLine": 251
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 261,
            "endLine": 265
          }
        ],
        "sample": "        console.log(`   File: ${issue.file}`);\n        console.log(`   Fix: ${issue.fix}`);\n        console.log('');\n      });\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4eac1b7921bca81facf5130b1ba71a21",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/gandalf-ux-analysis.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 294,
            "endLine": 298
          },
          {
            "file": "scripts/gandalf-ux-analysis.js",
            "startLine": 295,
            "endLine": 299
          }
        ],
        "sample": "    \n    console.log('\\n\"A wizard\\'s UX is never late, nor is it early. It arrives precisely when the user needs it!\"');\n    console.log('\\n🧙‍♂️ Analysis complete. May your UX be ever accessible!\\n')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "579ab4aaf9a40a266771d11b27d75188",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "scripts/generate-build-info.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "scripts/generate-build-info.js",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "scripts/generate-build-info.js",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\n// Get package version\nconst packageJson = require('../package.json');\nconst version = packageJson.version;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2cf027c46c74c0d23b571782f8f59a16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/App.tsx",
            "startLine": 24,
            "endLine": 28
          },
          {
            "file": "src/App.tsx",
            "startLine": 25,
            "endLine": 29
          }
        ],
        "sample": "// Lazy load heavy components for code splitting\nconst AdvancedMetricsPanel = lazy(() => import('murmuraba').then(m => ({ default: m.AdvancedMetricsPanel })));\n\n\nconst App = memo(function App() {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "860de66d19a3e50ffea047e303ad8f15",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/App.tsx",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "src/App.tsx",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "  // Destructure UI state\n  const { isDarkMode, isChatOpen, toggleChat, isSettingsOpen, toggleSettings, isMetricsPanelOpen, toggleMetricsPanel, selectedTab } = uiState;\n\n  // CRITICAL FIX: Deep compar...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cb61e6c705568f56309e58e3151559b5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/App.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/App.tsx",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "src/App.tsx",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "    // Gain Control\n    inputGain,\n    setInputGain\n  } = useMurmubaraEngine(memoizedEngineConfig);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2db6d0545b8b23764ef0a8bb324e1a31",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "    \n    // Recording State\n    recordingState: { isRecording: false, isPaused: false },\n    currentStream: null,\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "79cd8db9c527215bf3b730ab3a7e9950",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 25,
            "endLine": 29
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 26,
            "endLine": 30
          }
        ],
        "sample": "    \n    // Actions\n    initialize: vi.fn(() => Promise.resolve()),\n    processFile: vi.fn(() => Promise.resolve()),\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10784891724e407be59a1e6e10e7f562",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 36,
            "endLine": 40
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 37,
            "endLine": 41
          }
        ],
        "sample": "    \n    // Audio Playback Actions\n    toggleChunkPlayback: vi.fn(),\n    toggleChunkExpansion: vi.fn(),\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d4feac6090af060b74e71bd39e58210b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "  \n  // File Processing State\n  processedFileResult: null,\n  setProcessedFileResult: vi.fn(),\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b0be27f553613f4df44f8b3e5ab1c68d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "\nvi.mock('../core/store/useAppStore', () => ({\n  useAppStore: vi.fn((selector) => selector(mockStoreState))\n}));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2dda05e15871bda7cb243bcb1e8bdba2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 113,
            "endLine": 117
          }
        ],
        "sample": "// Mock the hooks\nvi.mock('../hooks', () => ({\n  useEngineEffects: vi.fn()\n}));\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "83213daabdc067e0eee19aa736939589",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 255,
            "endLine": 259
          }
        ],
        "sample": "      metrics: null,\n      diagnostics: null,\n      recordingState: { \n        isRecording: false, \n        isPaused: false, ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6e6a7ea43fec31d346773402173bc609",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 215,
            "endLine": 219
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 256,
            "endLine": 260
          }
        ],
        "sample": "      diagnostics: null,\n      recordingState: { \n        isRecording: false, \n        isPaused: false, \n        recordingTime: 0, ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f490f9807801513743945dbdf459c6dc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 216,
            "endLine": 220
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 257,
            "endLine": 261
          }
        ],
        "sample": "      recordingState: { \n        isRecording: false, \n        isPaused: false, \n        recordingTime: 0, \n        chunks: [], ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "64d3c84f05223edfc1260804869f6bfb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 219,
            "endLine": 223
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "        recordingTime: 0, \n        chunks: [], \n        playingChunks: {}, \n        expandedChunk: null \n      },...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10e745320ece786cafdcb3530ebaea8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 220,
            "endLine": 224
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 261,
            "endLine": 265
          }
        ],
        "sample": "        chunks: [], \n        playingChunks: {}, \n        expandedChunk: null \n      },\n      currentStream: null,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "298e7d3c6f4ba30cd8546564f178a42d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 221,
            "endLine": 225
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 262,
            "endLine": 266
          }
        ],
        "sample": "        playingChunks: {}, \n        expandedChunk: null \n      },\n      currentStream: null,\n      initialize: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8d9972cbb988c034d95f18d4a42a3709",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 222,
            "endLine": 226
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 263,
            "endLine": 267
          }
        ],
        "sample": "        expandedChunk: null \n      },\n      currentStream: null,\n      initialize: vi.fn(),\n      processFile: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "53217816f8fcaeb233ed48dff04a0688",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 223,
            "endLine": 227
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 264,
            "endLine": 268
          }
        ],
        "sample": "      },\n      currentStream: null,\n      initialize: vi.fn(),\n      processFile: vi.fn(),\n      startRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7afc7d1d4c6dc5f9999d128cc20c4870",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 224,
            "endLine": 228
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 265,
            "endLine": 269
          }
        ],
        "sample": "      currentStream: null,\n      initialize: vi.fn(),\n      processFile: vi.fn(),\n      startRecording: vi.fn(),\n      stopRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7d8f52792377211604f5dd692b78e35a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 225,
            "endLine": 229
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 266,
            "endLine": 270
          }
        ],
        "sample": "      initialize: vi.fn(),\n      processFile: vi.fn(),\n      startRecording: vi.fn(),\n      stopRecording: vi.fn(),\n      pauseRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cfe02b7ed3bf98d6aca55c478e1e0877",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 274,
            "endLine": 278
          }
        ],
        "sample": "      toggleChunkExpansion: vi.fn(),\n      exportChunkAsWav: vi.fn(),\n      exportChunkAsMp3: vi.fn(),\n      downloadAllChunksAsZip: vi.fn()\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "308dcf68d768d7eb77e3782594d6f493",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 234,
            "endLine": 238
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 275,
            "endLine": 279
          }
        ],
        "sample": "      exportChunkAsWav: vi.fn(),\n      exportChunkAsMp3: vi.fn(),\n      downloadAllChunksAsZip: vi.fn()\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "482afbf5e16dc0ac3b3ff761df2d5b41",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 235,
            "endLine": 239
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 276,
            "endLine": 280
          }
        ],
        "sample": "      exportChunkAsMp3: vi.fn(),\n      downloadAllChunksAsZip: vi.fn()\n    });\n\n    await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "89c423d89505caaa673a743c4f51ac9c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 236,
            "endLine": 240
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 277,
            "endLine": 281
          }
        ],
        "sample": "      downloadAllChunksAsZip: vi.fn()\n    });\n\n    await act(async () => {\n      render(<App />);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0c9d958cdbb26c81f70657a3d803eb05",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/App.startup.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 295,
            "endLine": 299
          },
          {
            "file": "src/__tests__/App.startup.test.tsx",
            "startLine": 296,
            "endLine": 300
          }
        ],
        "sample": "\n    expect(useAppStore).toHaveBeenCalled();\n    const selectorFunction = vi.mocked(useAppStore).mock.calls[0][0];\n    expect(typeof selectorFunction).toBe('function');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "af3a07f20d288a949fe0e6a8ff5ac59d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "\n  beforeAll(async () => {\n    // Setup realistic audio environment for E2E testing\n    mockAudioContext = new ((globalThis as any).AudioContext || (globalThis as any).webkitAudioContext)();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9a4b529d53038ae67192441cd54ed66d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 34,
            "endLine": 38
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 35,
            "endLine": 39
          }
        ],
        "sample": "    // Mock getUserMedia for E2E scenarios\n    global.navigator.mediaDevices.getUserMedia = vi.fn().mockResolvedValue(mockMediaStream);\n  });\n\n  afterAll(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5e6c40b3dfd31272fd7bd6b7f8327322",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 65,
            "endLine": 69
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 66,
            "endLine": 70
          }
        ],
        "sample": "\n    it('should initialize audio engine with proper error handling', async () => {\n      // Import the actual engine (not mocked for E2E)\n      const { useMurmubaraEngine } = await import('murmuraba')...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4898941f7c534746dff57662e2bdd59e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 70,
            "endLine": 74
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 71,
            "endLine": 75
          }
        ],
        "sample": "      // Test the complete initialization flow\n      let engineError: string | null = null;\n      let isInitialized = false;\n      \n      try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "56ebadae6402dcfa3c65e1e3eb6aa212",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "        // Simulate speech: higher activity in certain intervals\n        const speechProbability = Math.sin(time * 0.5) > 0 ? 0.8 : 0.2;\n        mockChunkData[i] = Math.random() * speechProbability;\n ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf01109f8e686c142b487164cbfa939e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "      \n      // Verify chunk data properties\n      expect(mockChunkData.length).toBe(expectedSamples);\n      expect(mockChunkData.length).toBe(1323000); // 30 seconds at 44.1kHz\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ab5ac867edb934d003bd20180e173cde",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 200,
            "endLine": 204
          }
        ],
        "sample": "      \n      // Verify memory allocation is reasonable\n      const afterMemory = (performance as any).memory?.usedJSHeapSize || 0;\n      const memoryIncrease = afterMemory - initialMemory;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7df2d2b383bf293722a290a6b1a93a75",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/e2e/audio-engine.e2e.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 207,
            "endLine": 211
          },
          {
            "file": "src/__tests__/e2e/audio-engine.e2e.test.ts",
            "startLine": 208,
            "endLine": 212
          }
        ],
        "sample": "      // Cleanup\n      chunks.length = 0;\n    });\n\n    it('should process audio within acceptable latency limits', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "024def1cb4c97b5d68d3e02bf1811192",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 5,
            "endLine": 9
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 6,
            "endLine": 10
          }
        ],
        "sample": "// Mock the murmuraba package to test actual engine integration\nvi.mock('murmuraba', async () => {\n  const actual = await vi.importActual('murmuraba');\n  return {\n    ...actual,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f81db016a7b607deac4aa28eb53e7f34",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 113,
            "endLine": 117
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "      render(<TestEngineComponent />);\n    });\n\n    // Click initialize\n    const initBtn = screen.getByTestId('initialize-btn');...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ddfdf2c0dbf746e0555a8e20711bcacf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 195,
            "endLine": 199
          }
        ],
        "sample": "    });\n\n    // Click initialize\n    const initBtn = screen.getByTestId('initialize-btn');\n    await act(async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "65a4d8f2710f6c6d492bd0a70d4ad4bd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 115,
            "endLine": 119
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 196,
            "endLine": 200
          }
        ],
        "sample": "\n    // Click initialize\n    const initBtn = screen.getByTestId('initialize-btn');\n    await act(async () => {\n      fireEvent.click(initBtn);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "384a0713d612cf1a8a49f46a697dd10c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "    // Click initialize\n    const initBtn = screen.getByTestId('initialize-btn');\n    await act(async () => {\n      fireEvent.click(initBtn);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6dcaecb0a5ae8486f7e3782a65b837a6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 117,
            "endLine": 121
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 198,
            "endLine": 202
          }
        ],
        "sample": "    const initBtn = screen.getByTestId('initialize-btn');\n    await act(async () => {\n      fireEvent.click(initBtn);\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8e57724dfe603507d681e45a5a79f315",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 175,
            "endLine": 179
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 176,
            "endLine": 180
          }
        ],
        "sample": "\n    expect(screen.getByTestId('status')).toHaveTextContent(`Error: ${networkError.message}`);\n  });\n\n  it('should retry initialization on failure', async () => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d6df33470679de55571b747d79618fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/engine-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "src/__tests__/engine-integration.test.tsx",
            "startLine": 206,
            "endLine": 210
          }
        ],
        "sample": "    await act(async () => {\n      fireEvent.click(initBtn);\n    });\n\n    // Should have been called once and failed...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "87a7263d7a05a2149983885e14074cd7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 116,
            "endLine": 120
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 117,
            "endLine": 121
          }
        ],
        "sample": "\ndescribe('Gain Control - Integration Tests', () => {\n  beforeEach(() => {\n    vi.clearAllMocks();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "25e7d69c6016e7285f3113a3d46b8231",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 121,
            "endLine": 125
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 122,
            "endLine": 126
          }
        ],
        "sample": "    // Mock getUserMedia\n    global.navigator.mediaDevices = {\n      getUserMedia: vi.fn().mockResolvedValue(new MediaStream())\n    } as any;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2822cb8652df6fd1a6996127908a367f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 183,
            "endLine": 187
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 184,
            "endLine": 188
          }
        ],
        "sample": "\n      await waitFor(() => {\n        expect(engineHook.current.isInitialized).toBe(true);\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9fa29687f0ac46c21e59b15a6e5e1fa5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 190,
            "endLine": 194
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 223,
            "endLine": 227
          }
        ],
        "sample": "        <AudioRecorder\n          recordingState={engineHook.current.recordingState}\n          isInitialized={engineHook.current.isInitialized}\n          isLoading={engineHook.current.isLoading}\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d53ae35817b9f7c620f2eb5a3654b89a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 191,
            "endLine": 195
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 224,
            "endLine": 228
          }
        ],
        "sample": "          recordingState={engineHook.current.recordingState}\n          isInitialized={engineHook.current.isInitialized}\n          isLoading={engineHook.current.isLoading}\n          inputGain={engineHo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ba9e4930c9e8c9ad728edb091fc08a20",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 192,
            "endLine": 196
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 225,
            "endLine": 229
          }
        ],
        "sample": "          isInitialized={engineHook.current.isInitialized}\n          isLoading={engineHook.current.isLoading}\n          inputGain={engineHook.current.inputGain}\n          onStartRecording={engineHook....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bfa8f82640cfb24ab2e063ac98bc64ac",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 193,
            "endLine": 197
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 226,
            "endLine": 230
          }
        ],
        "sample": "          isLoading={engineHook.current.isLoading}\n          inputGain={engineHook.current.inputGain}\n          onStartRecording={engineHook.current.startRecording}\n          onStopRecording={engineHo...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a484a03216416cff903e09ed8273c013",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 194,
            "endLine": 198
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 227,
            "endLine": 231
          }
        ],
        "sample": "          inputGain={engineHook.current.inputGain}\n          onStartRecording={engineHook.current.startRecording}\n          onStopRecording={engineHook.current.stopRecording}\n          onPauseRecordin...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "52447c6bfe627113daeb0d70ed5a00ff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 195,
            "endLine": 199
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 228,
            "endLine": 232
          }
        ],
        "sample": "          onStartRecording={engineHook.current.startRecording}\n          onStopRecording={engineHook.current.stopRecording}\n          onPauseRecording={engineHook.current.pauseRecording}\n          onR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cebc0c2c77d14b0f2be589031701245b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 229,
            "endLine": 233
          }
        ],
        "sample": "          onStopRecording={engineHook.current.stopRecording}\n          onPauseRecording={engineHook.current.pauseRecording}\n          onResumeRecording={engineHook.current.resumeRecording}\n          o...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2a03e2a75c2c10dcdab6860077c2179",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 230,
            "endLine": 234
          }
        ],
        "sample": "          onPauseRecording={engineHook.current.pauseRecording}\n          onResumeRecording={engineHook.current.resumeRecording}\n          onClearRecordings={engineHook.current.clearRecordings}\n       ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c2b8927bbf97f988f091588e693a66b5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 231,
            "endLine": 235
          }
        ],
        "sample": "          onResumeRecording={engineHook.current.resumeRecording}\n          onClearRecordings={engineHook.current.clearRecordings}\n          onSetInputGain={engineHook.current.setInputGain}\n        />\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0a33bc98dbc85754808ea25beacc4c0a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 232,
            "endLine": 236
          }
        ],
        "sample": "          onClearRecordings={engineHook.current.clearRecordings}\n          onSetInputGain={engineHook.current.setInputGain}\n        />\n      );\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96bf0ccf61deec04bc9a5fc23fd813a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 200,
            "endLine": 204
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 233,
            "endLine": 237
          }
        ],
        "sample": "          onSetInputGain={engineHook.current.setInputGain}\n        />\n      );\n\n      // Step 3: Open gain control panel...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ae22f37f2f4c5db9118bf3877ee0b698",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 209,
            "endLine": 213
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 210,
            "endLine": 214
          }
        ],
        "sample": "\n      // Step 4: Adjust gain using slider\n      const slider = screen.getByRole('slider');\n      fireEvent.change(slider, { target: { value: '2.0' } });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c6f0f16ff3eb0d78933daebcff260200",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 214,
            "endLine": 218
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "      // Step 5: Verify gain was updated in hook\n      await act(async () => {\n        await new Promise(resolve => setTimeout(resolve, 100));\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "66d63aa5ebaa8a57421068038c080494",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 240,
            "endLine": 244
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 241,
            "endLine": 245
          }
        ],
        "sample": "      // Step 8: Start recording with adjusted gain\n      await act(async () => {\n        await engineHook.current.startRecording();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "119f05dd26f81122cb4ee5098c838479",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 244,
            "endLine": 248
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 245,
            "endLine": 249
          }
        ],
        "sample": "\n      // Step 9: Verify gain persists during recording\n      expect(engineHook.current.inputGain).toBe(2.0);\n      expect(engineHook.current.recordingState.isRecording).toBe(true);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "737c7992a43b1e095aae74f7f74d2528",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 259,
            "endLine": 263
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 260,
            "endLine": 264
          }
        ],
        "sample": "      // Step 11: Stop recording\n      act(() => {\n        engineHook.current.stopRecording();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b321a3a8b9e1a423723ed50fbd337153",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 342,
            "endLine": 346
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 343,
            "endLine": 347
          }
        ],
        "sample": "\n  describe('Error Recovery', () => {\n    it('should recover from gain update errors', async () => {\n      const { result } = renderHook(() => useMurmubaraEngine());\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "67c9b16cfa2cbea97a31ba2489e1b1e1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 447,
            "endLine": 451
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 176,
            "endLine": 180
          }
        ],
        "sample": "      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n\n      // Use preset button\n      const boostButton = screen.getByRole('butt...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e9c3dbd90eb4c10defc6ba7bee5d8086",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 449,
            "endLine": 453
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 450,
            "endLine": 454
          }
        ],
        "sample": "\n      // Use preset button\n      const boostButton = screen.getByRole('button', { name: /boost/i });\n      await userEvent.click(boostButton);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "740e5a92c4161273bd6268874a09db95",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 454,
            "endLine": 458
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 455,
            "endLine": 459
          }
        ],
        "sample": "      // Verify gain updated\n      await waitFor(() => {\n        expect(screen.getByTestId('gain-display')).toHaveTextContent('Current Gain: 2.0x');\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "96b50965a49eef6cd42ea2e5fd5d7162",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 458,
            "endLine": 462
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 459,
            "endLine": 463
          }
        ],
        "sample": "\n      // Start recording\n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      await userEvent.click(recordButton);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d5e67a85d890f8768b6cfa8dbf7c1b11",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/gain-control-integration.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 463,
            "endLine": 467
          },
          {
            "file": "src/__tests__/gain-control-integration.test.tsx",
            "startLine": 464,
            "endLine": 468
          }
        ],
        "sample": "      // Verify recording started\n      await waitFor(() => {\n        expect(screen.getByText(/recording/i)).toBeInTheDocument();\n      });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ed22344d53468bbfafee2105af2c9c90",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/__tests__/setup.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/__tests__/setup.ts",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "src/__tests__/setup.ts",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "// Mock Audio\nwindow.HTMLMediaElement.prototype.play = () => Promise.resolve();\nwindow.HTMLMediaElement.prototype.pause = () => undefined;\nwindow.HTMLMediaElement.prototype.load = () => undefined;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bcda2276b9fe54863d78c2d7a31ff107",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/audio-config-loader/audio-config-loader.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/audio-config-loader/audio-config-loader.tsx",
            "startLine": 9,
            "endLine": 13
          },
          {
            "file": "src/components/audio-config-loader/audio-config-loader.tsx",
            "startLine": 10,
            "endLine": 14
          }
        ],
        "sample": "\n// Promise that fetches audio configuration\nconst audioConfigPromise = fetchAudioConfig();\n\nasync function fetchAudioConfig(): Promise<IAudioConfig> {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b8493503fa219ad4fafee17f3fa20734",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/audio-demo/audio-demo.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 37,
            "endLine": 41
          },
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 38,
            "endLine": 42
          }
        ],
        "sample": "  \n  const originalAudioRef = useRef<HTMLAudioElement>(null)\n  const processedAudioRef = useRef<HTMLAudioElement>(null)\n  const logContainerRef = useRef<HTMLDivElement>(null)\n  const processAudioDemoR...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "81f8a679f101e608f09c487344df8f3f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/audio-demo/audio-demo.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 142,
            "endLine": 146
          },
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 143,
            "endLine": 147
          }
        ],
        "sample": "        // Fallback to standard processing\n        processedBuffer = await processFile(arrayBuffer)\n        const endTime = Date.now()\n        addLog({ timestamp: endTime, frame: logs.length + 1, vad:...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "aec7e08232d0f577f16052c2cc57da8e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/audio-demo/audio-demo.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 161,
            "endLine": 165
          },
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 162,
            "endLine": 166
          }
        ],
        "sample": "\n  // Only call process once when engine is ready\n  useEffect(() => {\n    if (!autoProcess || autoProcessStarted || isProcessing || engineStatus !== 'ready') return\n    setAutoProcessStarted(true)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a9a741a522d1601abc8eb83e0f7fb8e7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/audio-demo/audio-demo.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "src/components/audio-demo/audio-demo.tsx",
            "startLine": 167,
            "endLine": 171
          }
        ],
        "sample": "    // Add small delay to ensure engine is fully ready\n    setTimeout(() => {\n      processAudioDemoRef.current?.()\n    }, 500)\n  }, [autoProcess, autoProcessStarted, isProcessing, engineStatus])...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d755e739e301a449f73cd968ab05c8fc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/copilot-chat/copilot-chat.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/copilot-chat/copilot-chat.tsx",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "src/components/copilot-chat/copilot-chat.tsx",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "    \n    setMessages(prev => prev.filter(m => m.id !== 'typing'))\n    addMessage('copilot', response)\n    setIsTyping(false)\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3a6b3ad2e78b8750c5f438f6674f5608",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/copilot-chat/copilot-chat.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/copilot-chat/copilot-chat.tsx",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "src/components/copilot-chat/copilot-chat.tsx",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "        \n      default:\n        await simulateTyping(`❓ Comando no reconocido: ${cmd}. Escribe /help para ver los comandos disponibles.`)\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "723564bc143531879b4011e697c8ea0d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 3,
            "endLine": 7
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 4,
            "endLine": 8
          }
        ],
        "sample": "\n// Extended interface to handle optional VAD properties (already defined in ProcessingMetrics)\ninterface ExtendedProcessingMetrics extends ProcessingMetrics {\n  // All properties are already defined ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fcf60d1bf3efc26d84be070afa16a4b9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 29,
            "endLine": 33
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 138,
            "endLine": 142
          }
        ],
        "sample": "    currentVad: 0,\n    averageVad: 0,\n    peakVad: 0,\n    voiceDetectedPercentage: 0,\n    sampleCount: 0...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a3661ca81447c20814a68d016bb5e4ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 30,
            "endLine": 34
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 139,
            "endLine": 143
          }
        ],
        "sample": "    averageVad: 0,\n    peakVad: 0,\n    voiceDetectedPercentage: 0,\n    sampleCount: 0\n  });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fe2ff9e606a95f2421f346efdd6d4e3e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "  \n  const vadHistoryRef = useRef<number[]>([]);\n  const animationRef = useRef<number>(0);\n  const lastUpdateTimeRef = useRef<number>(0);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "faf1020f5a31d631323b262498bf2e59",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 39,
            "endLine": 43
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 40,
            "endLine": 44
          }
        ],
        "sample": "\n  // CRITICAL FIX: Stabilize updateVadMetrics with useRef to prevent animation loop\n  const metricsRef = useRef(metrics);\n  const isActiveRef = useRef(isActive);\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ddfbd13bcafe2e66cfd17246492ddb3a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 53,
            "endLine": 57
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 54,
            "endLine": 58
          }
        ],
        "sample": "    \n    if (!currentMetrics || !currentIsActive) return;\n\n    const now = Date.now();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bc861e22aab44f8f5b9e844abd874933",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "    \n    if (now - lastUpdateTimeRef.current < throttleMs) return;\n    lastUpdateTimeRef.current = now;\n\n    // Extract VAD data from engine metrics - prefer real-time vadLevel...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2cfe1002d19d3243eedcd42fc841d8c2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 83,
            "endLine": 87
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 84,
            "endLine": 88
          }
        ],
        "sample": "    // Add to history (keep last 100 samples for rolling average)\n    vadHistoryRef.current.push(currentVad);\n    if (vadHistoryRef.current.length > 100) {\n      vadHistoryRef.current.shift();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9ec2c1d54091e2890907e61402748e51",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "            />\n          </div>\n        </div>\n        \n        <div className=\"real-time-vad__metric\">...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "533a0ac99b593bade5ddf097ca05d929",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 252,
            "endLine": 256
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 253,
            "endLine": 257
          }
        ],
        "sample": "\n        .real-time-vad__status--high {\n          background: rgba(34, 197, 94, 0.2);\n          color: #22c55e;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "78e3b354e120beeca2776bb60d3be1ef",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 257,
            "endLine": 261
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 258,
            "endLine": 262
          }
        ],
        "sample": "\n        .real-time-vad__status--medium {\n          background: rgba(245, 158, 11, 0.2);\n          color: #f59e0b;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6be90abb86dd9094ae0b3bbab566b5e8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 262,
            "endLine": 266
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 263,
            "endLine": 267
          }
        ],
        "sample": "\n        .real-time-vad__status--low {\n          background: rgba(239, 68, 68, 0.2);\n          color: #ef4444;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a2decb06a120f47d3fd8d4d953f8ce1e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 302,
            "endLine": 306
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 303,
            "endLine": 307
          }
        ],
        "sample": "\n        .vad-metric__value--large {\n          font-size: 1.5rem;\n          margin: 0.5rem 0;\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0010cd51dfea9a60a46c561751412b06",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 325,
            "endLine": 329
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 326,
            "endLine": 330
          }
        ],
        "sample": "\n        .vad-metric__fill--high {\n          background: linear-gradient(90deg, #22c55e, #16a34a);\n          box-shadow: 0 0 10px rgba(34, 197, 94, 0.3);\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0eee10956f548b802e593d7fc1d80fff",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 330,
            "endLine": 334
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 331,
            "endLine": 335
          }
        ],
        "sample": "\n        .vad-metric__fill--medium {\n          background: linear-gradient(90deg, #f59e0b, #d97706);\n          box-shadow: 0 0 10px rgba(245, 158, 11, 0.3);\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "66a9c3fb0b511d1aeed1a557afdae81a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/real-time-vad/real-time-vad.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 335,
            "endLine": 339
          },
          {
            "file": "src/components/real-time-vad/real-time-vad.tsx",
            "startLine": 336,
            "endLine": 340
          }
        ],
        "sample": "\n        .vad-metric__fill--low {\n          background: linear-gradient(90deg, #ef4444, #dc2626);\n          box-shadow: 0 0 10px rgba(239, 68, 68, 0.3);\n        }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d4d28a0206957c27a84b8d9b5b51967",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/tab-content/TabContent.tsx",
          "src/features/audio-recording/AudioRecorder.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/tab-content/TabContent.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "src/features/audio-recording/AudioRecorder.tsx",
            "startLine": 21,
            "endLine": 25
          }
        ],
        "sample": "  inputGain,\n  onStartRecording,\n  onStopRecording,\n  onPauseRecording,\n  onResumeRecording,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d39490bed63248226082169a19524880",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/tab-content/TabContent.tsx",
          "src/features/audio-recording/AudioRecorder.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/tab-content/TabContent.tsx",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "src/features/audio-recording/AudioRecorder.tsx",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "  onStartRecording,\n  onStopRecording,\n  onPauseRecording,\n  onResumeRecording,\n  onClearRecordings,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "80b42b0c7152fb263f3274544b846e2f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/wasm-error-display/wasm-error-display.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 67,
            "endLine": 71
          },
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 68,
            "endLine": 72
          }
        ],
        "sample": "          \n          .wasm-error-header h3 {\n            margin: 0;\n            color: var(--error-main, #ef4444);\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "59e375d3e3ec45ab5258bc7e0cc746f5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/wasm-error-display/wasm-error-display.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 72,
            "endLine": 76
          },
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 73,
            "endLine": 77
          }
        ],
        "sample": "          \n          .wasm-error-content {\n            color: var(--dark-text-primary, #CACBDA);\n            line-height: 1.6;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ef5e89c586aeeb5429f0a14e70c985a5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/wasm-error-display/wasm-error-display.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 77,
            "endLine": 81
          },
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 78,
            "endLine": 82
          }
        ],
        "sample": "          \n          .wasm-error-content ul {\n            margin: 10px 0;\n            padding-left: 20px;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d16c7cf8a1a40ae570a664cf56dbdb28",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/wasm-error-display/wasm-error-display.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "          \n          .wasm-error-solution h4 {\n            margin: 0 0 10px 0;\n            color: var(--accent-blue, #3B82F6);\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9c99bed40fdd68dbc5777f1b07efb699",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/components/wasm-error-display/wasm-error-display.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "src/components/wasm-error-display/wasm-error-display.tsx",
            "startLine": 107,
            "endLine": 111
          }
        ],
        "sample": "          \n          .wasm-error-solution ol {\n            margin: 0;\n            padding-left: 20px;\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "982655214b53d08158322c41bc73ed83",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/contexts/theme-context.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/contexts/theme-context.tsx",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "src/contexts/theme-context.tsx",
            "startLine": 13,
            "endLine": 17
          }
        ],
        "sample": "\ninterface IThemeProviderProps {\n  children: ReactNode;\n  defaultTheme?: Theme;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1b7601f6ed98eb1bd54f01f0d1037dcf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "      \n      if (typeof context === 'string' || typeof context === 'number' || typeof context === 'boolean') {\n        return String(context);\n      }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "715962667c22f0ca9c960540a8f3cf99",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 102,
            "endLine": 106
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 103,
            "endLine": 107
          }
        ],
        "sample": "        // Skip React internal properties\n        if (key.startsWith('__react') || key.startsWith('_react') || key === '_owner' || key === 'ref') {\n          return '[React Internal]';\n        }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "61c6d0cf5d4e4f8a4b066e38b9a9e93e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts",
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 105,
            "endLine": 109
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 61,
            "endLine": 65
          }
        ],
        "sample": "        }\n\n        // Handle circular references\n        if (typeof value === 'object' && value !== null) {\n          if (seen.has(value)) {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2cb1a1936952be2725611e7f2e144c7e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts",
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 106,
            "endLine": 110
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "\n        // Handle circular references\n        if (typeof value === 'object' && value !== null) {\n          if (seen.has(value)) {\n            return '[Circular Reference]';...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b9444a6c4eecacb2f3a64d3eb3e38163",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts",
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 63,
            "endLine": 67
          }
        ],
        "sample": "        // Handle circular references\n        if (typeof value === 'object' && value !== null) {\n          if (seen.has(value)) {\n            return '[Circular Reference]';\n          }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2e24f424539c0d3e179093c7bb1e82bb",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts",
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 108,
            "endLine": 112
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 64,
            "endLine": 68
          }
        ],
        "sample": "        if (typeof value === 'object' && value !== null) {\n          if (seen.has(value)) {\n            return '[Circular Reference]';\n          }\n          seen.add(value);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "885ce797b2172e76a1ace14e707eaecd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 169,
            "endLine": 173
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 170,
            "endLine": 174
          }
        ],
        "sample": "    \n    if (this.buffer.length >= this.config.maxBufferSize) {\n      this.flush();\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b3bf2121388c4d959b7343103cd380cc",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "\n    const logs = [...this.buffer];\n    this.buffer = [];\n\n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "593af995428c15d0bfeaea2e66cd7024",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 196,
            "endLine": 200
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "      // Failed to send logs, add them back to buffer if not too large\n      if (this.buffer.length + logs.length < this.config.maxBufferSize * 2) {\n        this.buffer = [...logs, ...this.buffer];\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0b4c8edfebe63f228b406bbae16b8525",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/Logger.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 254,
            "endLine": 258
          },
          {
            "file": "src/core/services/Logger.ts",
            "startLine": 255,
            "endLine": 259
          }
        ],
        "sample": "\n  fatal(message: string, context?: any, error?: Error) {\n    this.log(LogLevel.FATAL, message, context, error);\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "b4c7bed612c4eb6d1120cdd6160b1244",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/__tests__/Logger.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 12,
            "endLine": 16
          },
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 13,
            "endLine": 17
          }
        ],
        "sample": "    \n    // Create object with circular reference\n    const obj: any = { name: 'test' };\n    obj.self = obj;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3dc7865f6843dd86161a1b80939927a9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/__tests__/Logger.integration.test.ts",
          "src/core/utils/__tests__/serialization.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "src/core/utils/__tests__/serialization.test.ts",
            "startLine": 17,
            "endLine": 21
          }
        ],
        "sample": "    const obj: any = { name: 'test' };\n    obj.self = obj;\n    \n    // This should not throw\n    expect(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4800805702dd7cad9b0a73775407d262",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/services/__tests__/Logger.integration.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 17,
            "endLine": 21
          },
          {
            "file": "src/core/services/__tests__/Logger.integration.test.ts",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "    // This should not throw\n    expect(() => {\n      Logger.error('Test error', obj);\n    }).not.toThrow();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "354c4cbd436c282157d6efa162aa95df",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/__tests__/useAppStore.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/__tests__/useAppStore.test.ts",
            "startLine": 217,
            "endLine": 221
          },
          {
            "file": "src/core/store/__tests__/useAppStore.test.ts",
            "startLine": 218,
            "endLine": 222
          }
        ],
        "sample": "\n  describe('Persistence', () => {\n    it('persists only specified state properties', () => {\n      const { result } = renderHook(() => useAppStore());\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c99fc7b9fd568cbb5e41488ab1fef364",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 42,
            "endLine": 46
          }
        ],
        "sample": "\ninterface DisplaySettings {\n  showVadValues: boolean;\n  showVadTimeline: boolean;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d6f9997b53994ab19ec96773afa21e5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 57,
            "endLine": 61
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 58,
            "endLine": 62
          }
        ],
        "sample": "  \n  // Display Settings\n  displaySettings: DisplaySettings;\n  updateDisplaySettings: (settings: Partial<DisplaySettings>) => void;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "053406ffd860b9e3eaf64ae831bad60a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "  \n  // VAD Thresholds\n  vadThresholds: VadThresholds;\n  updateVadThresholds: (thresholds: Partial<VadThresholds>) => void;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f7e4697296148a40e1c5212bdaac6607",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 81,
            "endLine": 85
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 82,
            "endLine": 86
          }
        ],
        "sample": "  \n  // File Processing State\n  processedFileResult: any | null;\n  setProcessedFileResult: (result: any | null) => void;\n  ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c24c605b25a184a4866de2b4c892ee4",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "  \n  // Recording State (will be managed by murmuraba hook)\n  isProcessingAudio: boolean;\n  setIsProcessingAudio: (processing: boolean) => void;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4ba30e780ca13cdd3a8711c098666403",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 200,
            "endLine": 204
          }
        ],
        "sample": "\nexport const useAppStore = create<AppState>()(\n  devtools(\n    persist(\n      (set) => ({...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "20ecf24fb8744c548307c0c6aa30ffc5",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 231,
            "endLine": 235
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 232,
            "endLine": 236
          }
        ],
        "sample": "        \n        // UI State\n        isDarkMode: true,\n        toggleDarkMode: () =>\n          set((state) => ({ isDarkMode: !state.isDarkMode })),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "95af65abff3fd8b72505bfb2ae6c8cee",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/store/useAppStore.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 251,
            "endLine": 255
          },
          {
            "file": "src/core/store/useAppStore.ts",
            "startLine": 252,
            "endLine": 256
          }
        ],
        "sample": "        \n        // File Processing State\n        processedFileResult: null,\n        setProcessedFileResult: (result) => set({ processedFileResult: result }),\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6c74f8ac157144bff7263e7b66829bdf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/__tests__/serialization.test.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/__tests__/serialization.test.ts",
            "startLine": 15,
            "endLine": 19
          },
          {
            "file": "src/core/utils/__tests__/serialization.test.ts",
            "startLine": 16,
            "endLine": 20
          }
        ],
        "sample": "\n    it('should not crash with deep circular references', () => {\n      const obj: any = { name: 'test' };\n      obj.self = obj;\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3c07aa568c785517078f3e0bfd3dac89",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 13,
            "endLine": 17
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 14,
            "endLine": 18
          }
        ],
        "sample": "  /** Custom replacer function */\n  replacer?: (key: string, value: any) => any;\n  /** Keys to exclude from serialization */\n  excludeKeys?: string[];\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "534a3f8f1225d2cd56c2b04e4dc4f970",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 50,
            "endLine": 54
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 51,
            "endLine": 55
          }
        ],
        "sample": "    // Skip excluded keys\n    if (options.excludeKeys.includes(key)) {\n      return undefined;\n    }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "fa467141d8f6707db2d72232653e6c9a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 76,
            "endLine": 80
          }
        ],
        "sample": "\n/**\n * Process a value based on its type and options\n */\nfunction processValue(value: any, options: Required<SerializationOptions>, depth: number): any {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "838788cc4d260e92f4e36339d70f0c16",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 80,
            "endLine": 84
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 81,
            "endLine": 85
          }
        ],
        "sample": "  // Check max depth\n  if (depth > options.maxDepth) {\n    return '[Max Depth Exceeded]';\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "486339ffd9e44387cd6c180f44aa562b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 108,
            "endLine": 112
          }
        ],
        "sample": "\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${value.toString()}]`;\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1445d95017b851c0a26716da73b004a0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 112,
            "endLine": 116
          }
        ],
        "sample": "\n  // Handle special objects\n  if (value instanceof Date) {\n    return value.toISOString();\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "320a5bdbe1367406f5e48325970ffb48",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 120,
            "endLine": 124
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 121,
            "endLine": 125
          }
        ],
        "sample": "\n  if (value instanceof RegExp) {\n    return `[RegExp: ${value.toString()}]`;\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4272fcc40002f995c1ca2c901a0a3092",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "\n  // Handle React-specific objects\n  if (isReactElement(value)) {\n    return `[React Element: ${getReactElementType(value)}]`;\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4a521f88b203efaa1bd2973eaa4c7bcf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/core/utils/serialization.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 129,
            "endLine": 133
          },
          {
            "file": "src/core/utils/serialization.ts",
            "startLine": 130,
            "endLine": 134
          }
        ],
        "sample": "\n  if (isReactFiber(value)) {\n    return `[React Fiber: ${getFiberType(value)}]`;\n  }\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "38f6ebfe6bac9b0d652ba6c27b88c164",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 46,
            "endLine": 50
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 47,
            "endLine": 51
          }
        ],
        "sample": "      // Only include dynamic properties that actually change\n      const isChunkPlaying = isPlaying[chunk.id] || false;\n      const isChunkExpanded = expandedChunk === chunk.id;\n      \n      return {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f6f8fb8e61e9d6c03c2c8cca7e64c486",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 51,
            "endLine": 55
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "        // Core chunk properties\n        id: chunk.id,\n        index: chunk.index, // Add missing index property\n        duration: chunk.duration / 1000, // Convert ms to seconds for display\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5ed1010253c04c6045dafd38e6deee2e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "        \n        // Audio URLs\n        originalAudioUrl: chunk.originalAudioUrl,\n        processedAudioUrl: chunk.processedAudioUrl,\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d2ff6c0b78f7f36b529c9d564297069",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 82,
            "endLine": 86
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 83,
            "endLine": 87
          }
        ],
        "sample": "        \n        // VAD (Voice Activity Detection) data\n        averageVad: chunk.averageVad,\n        vadData: chunk.vadData || [],\n        ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d00fd703d0135a1413cb9db80c88c9ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 124,
            "endLine": 128
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 125,
            "endLine": 129
          }
        ],
        "sample": "          // For WebM, use the existing blob URL directly\n          const chunk = chunks.find(c => c.id === chunkId);\n          if (!chunk) {\n            throw new Error(`Chunk ${chunkId} not found`);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "58154df19dd81e52d4e7fb6d4347ab4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 133,
            "endLine": 137
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 134,
            "endLine": 138
          }
        ],
        "sample": "            \n          if (!url) {\n            throw new Error(`No ${audioType} audio available for chunk ${chunkId}`);\n          }\n          ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e104d913e9eae7579395e6248841c48a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-processing/AudioProcessor.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "src/features/audio-processing/AudioProcessor.tsx",
            "startLine": 154,
            "endLine": 158
          }
        ],
        "sample": "      // Could trigger a toast notification here\n      throw error; // Re-throw to let ChunkProcessingResults handle it\n    }\n  }, [chunks, onExportWav, onExportMp3]);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "91b130a6a8fe5d529dcf29f8fead57b3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/AudioRecorder.tsx",
          "src/features/audio-recording/components/GainControlPanel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/AudioRecorder.tsx",
            "startLine": 148,
            "endLine": 152
          },
          {
            "file": "src/features/audio-recording/components/GainControlPanel.tsx",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "              </label>\n              <input\n                id=\"gain-slider\"\n                type=\"range\"\n                min=\"0.5\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8fa856a020f4696e78d105fd9ea35ec3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/AudioRecorder.tsx",
          "src/features/audio-recording/components/GainControlPanel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/AudioRecorder.tsx",
            "startLine": 149,
            "endLine": 153
          },
          {
            "file": "src/features/audio-recording/components/GainControlPanel.tsx",
            "startLine": 101,
            "endLine": 105
          }
        ],
        "sample": "              <input\n                id=\"gain-slider\"\n                type=\"range\"\n                min=\"0.5\"\n                max=\"3.0\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "03c33ef2d0d40f1b0fd0aee822ad1677",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/AudioRecorder.tsx",
          "src/features/audio-recording/components/GainControlPanel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/AudioRecorder.tsx",
            "startLine": 150,
            "endLine": 154
          },
          {
            "file": "src/features/audio-recording/components/GainControlPanel.tsx",
            "startLine": 102,
            "endLine": 106
          }
        ],
        "sample": "                id=\"gain-slider\"\n                type=\"range\"\n                min=\"0.5\"\n                max=\"3.0\"\n                step=\"0.1\"...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3f4a12b83288cdc2b625a357610fd1f0",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 46,
            "endLine": 50
          }
        ],
        "sample": "      \n      // Click to show\n      await userEvent.click(gainButton);\n      expect(screen.getByLabelText(/input gain/i)).toBeInTheDocument();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bf6bd5cd8fa550297c5cf1ef3db7a66d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 152,
            "endLine": 156
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 435,
            "endLine": 439
          }
        ],
        "sample": "      \n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      \n      const normalButton = screen.getByRole('button', { name: ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6d3528c01075d5f7d98ecc0c968f6038",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 153,
            "endLine": 157
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 436,
            "endLine": 440
          }
        ],
        "sample": "      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      \n      const normalButton = screen.getByRole('button', { name: /normal...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "655adb22917de53d66a0ae489933abf6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 154,
            "endLine": 158
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 437,
            "endLine": 441
          }
        ],
        "sample": "      await userEvent.click(gainButton);\n      \n      const normalButton = screen.getByRole('button', { name: /normal/i });\n      await userEvent.click(normalButton);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4f7d7a2849e88c6eccbbaab1b443c483",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 155,
            "endLine": 159
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 438,
            "endLine": 442
          }
        ],
        "sample": "      \n      const normalButton = screen.getByRole('button', { name: /normal/i });\n      await userEvent.click(normalButton);\n      \n      expect(defaultProps.onSetInputGain).toHaveBeenCalledWith(1.0)...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cf52411653795ec45aece9bb40e1b628",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 156,
            "endLine": 160
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 439,
            "endLine": 443
          }
        ],
        "sample": "      const normalButton = screen.getByRole('button', { name: /normal/i });\n      await userEvent.click(normalButton);\n      \n      expect(defaultProps.onSetInputGain).toHaveBeenCalledWith(1.0);\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c47c3c5270c7b72bb490a6a774aae05f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 164,
            "endLine": 168
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 283,
            "endLine": 287
          }
        ],
        "sample": "      \n      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      \n      const highButton = screen.getByRole('button', { name: /h...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71c25a1d7a57e0d884a6b4c0f9d2adc3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 165,
            "endLine": 169
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 284,
            "endLine": 288
          }
        ],
        "sample": "      const gainButton = screen.getByRole('button', { name: /microphone gain/i });\n      await userEvent.click(gainButton);\n      \n      const highButton = screen.getByRole('button', { name: /high/i }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "215ad0d131704e1eed8e4424275fa3c3",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 166,
            "endLine": 170
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 285,
            "endLine": 289
          }
        ],
        "sample": "      await userEvent.click(gainButton);\n      \n      const highButton = screen.getByRole('button', { name: /high/i });\n      await userEvent.click(highButton);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c4370ef595f52a22740325874b50c988",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 167,
            "endLine": 171
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 286,
            "endLine": 290
          }
        ],
        "sample": "      \n      const highButton = screen.getByRole('button', { name: /high/i });\n      await userEvent.click(highButton);\n      \n      expect(defaultProps.onSetInputGain).toHaveBeenCalledWith(1.5);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8f10da2f4921baad700254d91361ab64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 168,
            "endLine": 172
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 287,
            "endLine": 291
          }
        ],
        "sample": "      const highButton = screen.getByRole('button', { name: /high/i });\n      await userEvent.click(highButton);\n      \n      expect(defaultProps.onSetInputGain).toHaveBeenCalledWith(1.5);\n    });...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "09ec5b9987ed9dc6d88a2beb718a963a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 267,
            "endLine": 271
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 355,
            "endLine": 359
          }
        ],
        "sample": "      \n      // Gain panel should still be visible\n      expect(screen.getByRole('slider')).toBeInTheDocument();\n    });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "10199da682d59e1464760a6b9915c171",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 289,
            "endLine": 293
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.gain.test.tsx",
            "startLine": 369,
            "endLine": 373
          }
        ],
        "sample": "      \n      expect(defaultProps.onSetInputGain).toHaveBeenCalledWith(1.5);\n    });\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a0aa8cec05aa8b42c7a111f4aec06b64",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 18,
            "endLine": 22
          }
        ],
        "sample": "  isInitialized: true,\n  isLoading: false,\n  onStartRecording: vi.fn().mockResolvedValue(undefined),\n  onStopRecording: vi.fn().mockResolvedValue(undefined),\n  onPauseRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6115388cb11f0534941ccb4765b4890e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 32,
            "endLine": 36
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 19,
            "endLine": 23
          }
        ],
        "sample": "  isLoading: false,\n  onStartRecording: vi.fn().mockResolvedValue(undefined),\n  onStopRecording: vi.fn().mockResolvedValue(undefined),\n  onPauseRecording: vi.fn(),\n  onResumeRecording: vi.fn(),...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "21a01855b830339f39133467c0ccca76",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 58,
            "endLine": 62
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 59,
            "endLine": 63
          }
        ],
        "sample": "      // Use semantic queries for better accessibility testing\n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      expect(recordButton).toBeInTheDocument();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f95f0f67b9a8485e4219aead63fb968b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 74,
            "endLine": 78
          }
        ],
        "sample": "      \n      // Test keyboard navigation\n      recordButton.focus();\n      expect(recordButton).toHaveFocus();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c7ba1552ab3a4ab23c83f7d31e9ebf61",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 100,
            "endLine": 104
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 204,
            "endLine": 208
          }
        ],
        "sample": "      \n      // Start recording\n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      await user.click(recordButton);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2585fe9b3a69070cce9c16beff9fd16e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 101,
            "endLine": 105
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 205,
            "endLine": 209
          }
        ],
        "sample": "      // Start recording\n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      await user.click(recordButton);\n      \n      await waitFor(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bbae7703a89db433c4c1f324eb3a1b4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 114,
            "endLine": 118
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 115,
            "endLine": 119
          }
        ],
        "sample": "      \n      // Verify UI updates\n      expect(screen.getByRole('button', { name: /stop recording/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /pause/i })).toBeInTheDocum...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "74fa091258468a8fc622a37676b6dc0b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 177,
            "endLine": 181
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 188,
            "endLine": 192
          }
        ],
        "sample": "      render(<AudioRecorder {...props} />);\n      \n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      expect(recordButton).toBeDisabled();\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e8b4d61894db032ea7f761e0d87b6365",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 178,
            "endLine": 182
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 189,
            "endLine": 193
          }
        ],
        "sample": "      \n      const recordButton = screen.getByRole('button', { name: /start recording/i });\n      expect(recordButton).toBeDisabled();\n      \n      // Should show appropriate message...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8fa5c0041bfdba605e572429e8230ad8",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 233,
            "endLine": 237
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.improved.test.tsx",
            "startLine": 234,
            "endLine": 238
          }
        ],
        "sample": "\n    it('should handle rapid state changes without issues', async () => {\n      const props = createMockProps();\n      const { rerender } = render(<AudioRecorder {...props} />);\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "158fd04302f296be8b5c9cc79bec7211",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 73,
            "endLine": 77
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 176,
            "endLine": 180
          }
        ],
        "sample": "    const pausedProps = {\n      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        isRecording: true,...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "5f6cb03342b75ceaf1fcafd36be8c620",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 177,
            "endLine": 181
          }
        ],
        "sample": "      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        isRecording: true,\n        isPaused: true...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1877c3f878ad0f1a1f691dbc3a4ba399",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 75,
            "endLine": 79
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 178,
            "endLine": 182
          }
        ],
        "sample": "      recordingState: {\n        ...mockRecordingState,\n        isRecording: true,\n        isPaused: true\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "43e232ebcb29f6018f92b1f2d1e771ca",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 76,
            "endLine": 80
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 179,
            "endLine": 183
          }
        ],
        "sample": "        ...mockRecordingState,\n        isRecording: true,\n        isPaused: true\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7430d2e65ceaf427371846fe0bfd4762",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 90,
            "endLine": 94
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 194,
            "endLine": 198
          }
        ],
        "sample": "    const withChunksProps = {\n      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        chunks: [{ id: '1', index: 0, duration: 1000 } as any]...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "18b7db8e3a454f1269f3ee6231d481c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 91,
            "endLine": 95
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 195,
            "endLine": 199
          }
        ],
        "sample": "      ...mockProps,\n      recordingState: {\n        ...mockRecordingState,\n        chunks: [{ id: '1', index: 0, duration: 1000 } as any]\n      }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d495c1b5f8bebac040bd53c49093ed2a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 196,
            "endLine": 200
          }
        ],
        "sample": "      recordingState: {\n        ...mockRecordingState,\n        chunks: [{ id: '1', index: 0, duration: 1000 } as any]\n      }\n    };...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3de50bfe4684e85098381085fbbee1ab",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 93,
            "endLine": 97
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 197,
            "endLine": 201
          }
        ],
        "sample": "        ...mockRecordingState,\n        chunks: [{ id: '1', index: 0, duration: 1000 } as any]\n      }\n    };\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "0eebae1dd94e802f7f77dbfde246dbfd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 94,
            "endLine": 98
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 198,
            "endLine": 202
          }
        ],
        "sample": "        chunks: [{ id: '1', index: 0, duration: 1000 } as any]\n      }\n    };\n    \n    render(<AudioRecorder {...withChunksProps} />);...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1c5ec359194c25fb3120bef9eb284e4d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 199,
            "endLine": 203
          }
        ],
        "sample": "      }\n    };\n    \n    render(<AudioRecorder {...withChunksProps} />);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "58f3ae4c05a53822d9ae6282fff645fa",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/__tests__/AudioRecorder.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 111,
            "endLine": 115
          },
          {
            "file": "src/features/audio-recording/__tests__/AudioRecorder.test.tsx",
            "startLine": 123,
            "endLine": 127
          }
        ],
        "sample": "    \n    const recordButton = screen.getByText('Start Recording').closest('button');\n    expect(recordButton).toBeDisabled();\n  });\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d8d8a075391855af299f90396bbe4413",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/features/audio-recording/components/GainControlPanel.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/features/audio-recording/components/GainControlPanel.tsx",
            "startLine": 35,
            "endLine": 39
          },
          {
            "file": "src/features/audio-recording/components/GainControlPanel.tsx",
            "startLine": 36,
            "endLine": 40
          }
        ],
        "sample": "  // Memoized preset data to prevent unnecessary recalculations\n  const presets = useMemo(() => GainPresetService.getAllPresets(), []);\n\n  const handleGainChange = useCallback(async (event: React.Chan...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f20d06b35daacf389b3d3e76a632dcd",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/hooks/useEngineEffects.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 31,
            "endLine": 35
          },
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 32,
            "endLine": 36
          }
        ],
        "sample": "  \n  // Update refs on every render\n  initializeRef.current = initialize;\n  engineConfigRef.current = engineConfig;\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ece0f3745e8b061efa6768c0f80fe42e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/hooks/useEngineEffects.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 45,
            "endLine": 49
          },
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 52,
            "endLine": 56
          }
        ],
        "sample": "    }\n  }, [isInitialized, isLoading, error]);\n\n  // Reset initialization flag when engine is destroyed\n  useEffect(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "2c93d9fecf489e3faa613d01c583a930",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/hooks/useEngineEffects.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 55,
            "endLine": 59
          },
          {
            "file": "src/hooks/useEngineEffects.ts",
            "startLine": 56,
            "endLine": 60
          }
        ],
        "sample": "  // Apply dark mode - STABLE: no issues here\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', isDarkMode);\n  }, [isDarkMode]);\n...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "6929f1d76a87f785377858b69289ff72",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/ErrorBoundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 43,
            "endLine": 47
          },
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 44,
            "endLine": 48
          }
        ],
        "sample": "\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    const { onError, level = 'component' } = this.props;\n    \n    try {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f2db54ac7d9d70aba5bd03b75c54e953",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/ErrorBoundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 85,
            "endLine": 89
          },
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 86,
            "endLine": 90
          }
        ],
        "sample": "\n  componentDidUpdate(prevProps: Props) {\n    const { resetKeys, resetOnPropsChange } = this.props;\n    const { hasError } = this.state;\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f12a11bf81e27e5d3bc4fc19cc48188f",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/ErrorBoundary.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 98,
            "endLine": 102
          },
          {
            "file": "src/shared/components/ErrorBoundary.tsx",
            "startLine": 99,
            "endLine": 103
          }
        ],
        "sample": "    \n    // Reset when props change (if enabled)\n    if (hasError && resetOnPropsChange && prevProps.children !== this.props.children) {\n      this.resetErrorBoundary();\n    }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "cd0b95712f5e8ec4476cbee0ed12f907",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/LazyLoadWrapper.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/LazyLoadWrapper.tsx",
            "startLine": 2,
            "endLine": 6
          },
          {
            "file": "src/shared/components/LazyLoadWrapper.tsx",
            "startLine": 3,
            "endLine": 7
          }
        ],
        "sample": "\ninterface LazyLoadWrapperProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "7fe9b5eaff7a5dad0062696a437a82cf",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 21,
            "endLine": 25
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 22,
            "endLine": 26
          }
        ],
        "sample": "\ndescribe('ErrorBoundary', () => {\n  const originalConsoleError = console.error;\n  \n  beforeEach(() => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3e9c5ddef25dddf6893c4450b05a86c9",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 74,
            "endLine": 78
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 75,
            "endLine": 79
          }
        ],
        "sample": "    \n    expect(screen.getByText('⚠️ Oops! Something went wrong')).toBeInTheDocument();\n    expect(screen.getByText(\"We're sorry, but something unexpected happened. Please try refreshing the page.\"))....",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d248c32fe747f5d69614d17ffe0dbd87",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 107,
            "endLine": 111
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 189,
            "endLine": 193
          }
        ],
        "sample": "    const { rerender } = render(\n      <ErrorBoundary>\n        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "bfeaf76b950fbedac253124400e60890",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 112,
            "endLine": 116
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 174,
            "endLine": 178
          }
        ],
        "sample": "    \n    expect(screen.getByText('Component Error')).toBeInTheDocument();\n    \n    // Update to not throw\n    rerender(...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4b8c5744707f17b69ee43637b6c81e01",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 119,
            "endLine": 123
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 203,
            "endLine": 207
          }
        ],
        "sample": "      </ErrorBoundary>\n    );\n    \n    // Click Try Again\n    fireEvent.click(screen.getByText('Try Again'));...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8086a407625707c706818b74400a3da1",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 197,
            "endLine": 201
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 205,
            "endLine": 209
          }
        ],
        "sample": "    \n    // Reset and trigger second error\n    fireEvent.click(screen.getByText('Try Again'));\n    rerender(\n      <ErrorBoundary>...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "4d2897b351065aed534ab70c5f5448c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 198,
            "endLine": 202
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 206,
            "endLine": 210
          }
        ],
        "sample": "    // Reset and trigger second error\n    fireEvent.click(screen.getByText('Try Again'));\n    rerender(\n      <ErrorBoundary>\n        <ThrowError shouldThrow={true} />...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "a41be501f61f1861fed320dffc0bb8c7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 199,
            "endLine": 203
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 207,
            "endLine": 211
          }
        ],
        "sample": "    fireEvent.click(screen.getByText('Try Again'));\n    rerender(\n      <ErrorBoundary>\n        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "1f78e23e579bde0b83693b4bbd27400d",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "src/shared/components/__tests__/ErrorBoundary.test.tsx"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 200,
            "endLine": 204
          },
          {
            "file": "src/shared/components/__tests__/ErrorBoundary.test.tsx",
            "startLine": 208,
            "endLine": 212
          }
        ],
        "sample": "    rerender(\n      <ErrorBoundary>\n        <ThrowError shouldThrow={true} />\n      </ErrorBoundary>\n    );...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "ee7712ed513c0b097ec54fa1d224044e",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "test-app-puppeteer.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "test-app-puppeteer.js",
            "startLine": 14,
            "endLine": 18
          },
          {
            "file": "test-app-puppeteer.js",
            "startLine": 15,
            "endLine": 19
          }
        ],
        "sample": "    // Capture console logs\n    page.on('console', msg => {\n      console.log(`📋 Browser Console [${msg.type()}]:`, msg.text());\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "d470e46a8c03c54102bbe850b4cf1b35",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "test-app-puppeteer.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "test-app-puppeteer.js",
            "startLine": 19,
            "endLine": 23
          },
          {
            "file": "test-app-puppeteer.js",
            "startLine": 20,
            "endLine": 24
          }
        ],
        "sample": "    // Capture errors\n    page.on('pageerror', error => {\n      console.error('❌ Page Error:', error.message);\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "e170ff6b23e163b944dae3cad09b14da",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "test-app-puppeteer.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "test-app-puppeteer.js",
            "startLine": 52,
            "endLine": 56
          },
          {
            "file": "test-app-puppeteer.js",
            "startLine": 53,
            "endLine": 57
          }
        ],
        "sample": "    \n    // Check for specific elements\n    const appTitle = await page.$eval('h1', el => el.textContent).catch(() => 'Not found');\n    console.log('\\n🏷️ App Title:', appTitle);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "56d818b943c03c4e895285885fa292f7",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "test-app-puppeteer.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "test-app-puppeteer.js",
            "startLine": 61,
            "endLine": 65
          },
          {
            "file": "test-app-puppeteer.js",
            "startLine": 62,
            "endLine": 66
          }
        ],
        "sample": "    \n    if (errors.length > 0) {\n      console.log('\\n⚠️ Error messages found:', errors);\n    }\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "8aa830ccdc712ecdf643251eab32ca4c",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 7,
            "endLine": 11
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 8,
            "endLine": 12
          }
        ],
        "sample": "\ntest.describe('WASM Module Loading', () => {\n  test.beforeEach(async ({ page }) => {\n    // Intercept and mock WASM requests for testing\n    await page.route('**/rnnoise.wasm', route => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "32602049cc5d68481cb91f551450b736",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 59,
            "endLine": 63
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "    \n    expect(engineStatus).toBe(true);\n  });\n\n  test('should handle microphone permissions gracefully', async ({ page, browserName }) => {...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "935d1495802e661ce6d3f2ae8fe8e785",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 64,
            "endLine": 68
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 65,
            "endLine": 69
          }
        ],
        "sample": "    // Grant microphone permissions\n    await page.context().grantPermissions(['microphone']);\n    \n    await page.goto('/');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "958d0371fd5fa59f66208a3a592a6403",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 92,
            "endLine": 96
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 93,
            "endLine": 97
          }
        ],
        "sample": "\ntest.describe('Cross-browser Compatibility', () => {\n  test('should work consistently across browsers', async ({ page, browserName }) => {\n    await page.goto('/');\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "71ccc12b1cf0b092bf0a11089818234a",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 95,
            "endLine": 99
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 128,
            "endLine": 132
          }
        ],
        "sample": "    await page.goto('/');\n    \n    // Basic functionality should work in all browsers\n    await expect(page.locator('h1')).toBeVisible();\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3ff1a742f0d26eeedfd8b4c0562dffba",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 99,
            "endLine": 103
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 100,
            "endLine": 104
          }
        ],
        "sample": "    \n    // Check for browser-specific issues\n    const userAgent = await page.evaluate(() => navigator.userAgent);\n    console.log(`Testing on ${browserName}: ${userAgent}`);\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "9e97449c8d32e7c63532bd205d7ae83b",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 125,
            "endLine": 129
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 126,
            "endLine": 130
          }
        ],
        "sample": "    \n    for (const viewport of viewports) {\n      await page.setViewportSize(viewport);\n      await page.goto('/');\n      ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "3d137f303ed5ad610567f683d3549ff2",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "tests/browser/wasm-loading.test.js"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 162,
            "endLine": 166
          },
          {
            "file": "tests/browser/wasm-loading.test.js",
            "startLine": 163,
            "endLine": 167
          }
        ],
        "sample": "    // Get initial memory usage\n    const initialMemory = await page.evaluate(() => {\n      return performance.memory?.usedJSHeapSize || 0;\n    });\n    ...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "c28d87c43dd3490b99f69cdba0f71904",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vitest.config.ts",
            "startLine": 41,
            "endLine": 45
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 59,
            "endLine": 63
          }
        ],
        "sample": "      '@core': path.resolve(__dirname, './src/core'),\n      '@shared': path.resolve(__dirname, './src/shared'),\n      'murmuraba': path.resolve(__dirname, './packages/murmuraba/src')\n    }\n  }...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "230da38483b3748107b20f2ea25fda58",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "vitest.config.ts",
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vitest.config.ts",
            "startLine": 42,
            "endLine": 46
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 60,
            "endLine": 64
          }
        ],
        "sample": "      '@shared': path.resolve(__dirname, './src/shared'),\n      'murmuraba': path.resolve(__dirname, './packages/murmuraba/src')\n    }\n  }\n});...",
        "recommendation": "Extract to a shared utility function or component"
      },
      {
        "hash": "f25893c995c563c930f4fe27c5be79c6",
        "severity": "low",
        "occurrences": 2,
        "files": [
          "vitest.e2e.config.ts"
        ],
        "linesOfCode": 5,
        "locations": [
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 40,
            "endLine": 44
          },
          {
            "file": "vitest.e2e.config.ts",
            "startLine": 41,
            "endLine": 45
          }
        ],
        "sample": "    // Better reporting for E2E\n    reporters: ['default', 'html'],\n    outputFile: {\n      html: './coverage/e2e-report.html'\n    },...",
        "recommendation": "Extract to a shared utility function or component"
      }
    ]
  },
  "recommendations": [
    {
      "priority": "high",
      "category": "Architecture",
      "description": "High number of duplicated functions detected. Consider implementing a shared utilities architecture.",
      "estimatedImpact": "Bundle size reduction: 15-25%"
    },
    {
      "priority": "medium",
      "category": "Constants",
      "description": "Duplicated constants detected. Centralize in a constants file.",
      "estimatedImpact": "Maintainability improvement"
    }
  ]
}