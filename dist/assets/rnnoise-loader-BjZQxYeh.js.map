{"version":3,"mappings":"uCAUA,IAAIA,EAA+C,KAEnD,eAAsBC,GAA4C,CAChE,OAAKD,IAEHA,EAAAE,EAAA,IAAgB,OAAO,qBAAqB,MAAE,KAAK,MAAOC,GAAkB,CAC1E,KAAM,CAAE,oBAAAC,GAAwBD,EAkChC,OA/Be,MAAMC,EAAoB,CACvC,WAAaC,GAAqB,CAChC,GAAIA,EAAS,SAAS,OAAO,GAGvB,OAAO,OAAW,KAAe,OAAO,SAAU,CAEpD,MAAMC,EAAQ,CACZ,0CAA0CD,CAAQ,GAClD,4BAA4BA,CAAQ,GACpC,IAAIA,CAAQ,GACZ,SAASA,CAAQ,GACjBA,CAAA,EAIF,GAAI,OAAO,SAAS,WAAa,aAAe,OAAO,SAAS,WAAa,YAAa,CACxF,MAAME,EAAU,IAAIF,CAAQ,GAC5B,eAAQ,IAAI,6CAA8CE,CAAO,EAC1DA,CACT,CAGA,eAAQ,IAAI,4CAA6CD,EAAM,CAAC,CAAC,EAC1DA,EAAM,CAAC,CAChB,CAEF,OAAOD,CACT,EACD,CAGH,CAAC,GAEIL,CACT","names":["modulePromise","loadRNNoiseModule","__vitePreload","rnnoiseModule","createRNNWasmModule","filename","paths","devPath"],"ignoreList":[],"sources":["../../packages/murmuraba/src/utils/rnnoise-loader.ts"],"sourcesContent":["export interface RNNoiseModule {\n  _malloc: (size: number) => number;\n  _free: (ptr: number) => void;\n  _rnnoise_create: (model: number) => number;\n  _rnnoise_destroy: (state: number) => void;\n  _rnnoise_process_frame: (state: number, output: number, input: number) => number;\n  HEAPU8: Uint8Array;\n  HEAPF32: Float32Array;\n}\n\nlet modulePromise: Promise<RNNoiseModule> | null = null;\n\nexport async function loadRNNoiseModule(): Promise<RNNoiseModule> {\n  if (!modulePromise) {\n    // Dynamic import to avoid TypeScript issues\n    modulePromise = import('@jitsi/rnnoise-wasm').then(async (rnnoiseModule) => {\n      const { createRNNWasmModule } = rnnoiseModule as any;\n      \n      // Configure the module to load WASM from the correct path\n      const module = await createRNNWasmModule({\n        locateFile: (filename: string) => {\n          if (filename.endsWith('.wasm')) {\n            // In production, the WASM file should be in the same directory as the bundle\n            // In development, it might be served from node_modules\n            if (typeof window !== 'undefined' && window.location) {\n              // Try multiple possible locations\n              const paths = [\n                `/node_modules/@jitsi/rnnoise-wasm/dist/${filename}`,\n                `/node_modules/.vite/deps/${filename}`,\n                `/${filename}`,\n                `/dist/${filename}`,\n                filename\n              ];\n              \n              // In development with Vite, the WASM should be in public\n              if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n                const devPath = `/${filename}`;\n                console.log('[RNNoise Loader] Development mode, trying:', devPath);\n                return devPath;\n              }\n              \n              // In production, assume the file is in the root or dist\n              console.log('[RNNoise Loader] Production mode, trying:', paths[3]);\n              return paths[3];\n            }\n          }\n          return filename;\n        }\n      });\n      \n      return module as unknown as RNNoiseModule;\n    });\n  }\n  return modulePromise;\n}"],"file":"assets/rnnoise-loader-BjZQxYeh.js"}