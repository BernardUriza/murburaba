!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Murmuraba={},t.React)}(this,function(t,e){"use strict";class r{constructor(){this.name="RNNoise",this.description="Neural network-based noise suppression",this.isInitialized=!1,this.module=null,this.state=null,this.inputPtr=0,this.outputPtr=0}async initialize(){if(this.isInitialized)return;console.log("[RNNoiseEngine] Starting initialization...");const t=document.createElement("script");t.src="/rnnoise-fixed.js",await new Promise((e,r)=>{t.onload=e,t.onerror=r,document.head.appendChild(t)});const e=window.createRNNWasmModule;if(this.module=await e({locateFile:t=>t.endsWith(".wasm")?`/dist/${t}`:t}),this.state=this.module._rnnoise_create(0),!this.state)throw new Error("Failed to create RNNoise state");this.inputPtr=this.module._malloc(1920),this.outputPtr=this.module._malloc(1920);const r=new Float32Array(480);for(let t=0;t<10;t++)this.module.HEAPF32.set(r,this.inputPtr>>2),this.module._rnnoise_process_frame(this.state,this.outputPtr,this.inputPtr);this.isInitialized=!0,console.log("[RNNoiseEngine] Initialization complete!")}process(t){if(!this.isInitialized)throw new Error("RNNoiseEngine not initialized");if(480!==t.length)throw new Error("RNNoise requires exactly 480 samples per frame");this.module.HEAPF32.set(t,this.inputPtr>>2),this.module._rnnoise_process_frame(this.state,this.outputPtr,this.inputPtr);const e=new Float32Array(480);for(let t=0;t<480;t++)e[t]=this.module.HEAPF32[(this.outputPtr>>2)+t];return e}cleanup(){this.module&&this.state&&(this.module._free(this.inputPtr),this.module._free(this.outputPtr),this.module._rnnoise_destroy(this.state),this.state=null,this.module=null,this.isInitialized=!1)}}function s(t){switch(t.engineType){case"rnnoise":return new r;case"speex":throw new Error("Speex engine not implemented yet");case"custom":throw new Error("Custom engine not implemented yet");default:throw new Error(`Unknown engine type: ${t.engineType}`)}}function n(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r]*t[r];return Math.sqrt(e/t.length)}t.AudioStreamManager=class{constructor(t){this.audioContext=t,this.streams=new Map,this.sources=new Map}addStream(t,e){this.streams.has(t)&&this.removeStream(t),this.streams.set(t,e);const r=this.audioContext.createMediaStreamSource(e);return this.sources.set(t,r),r}getStream(t){return this.streams.get(t)}getSource(t){return this.sources.get(t)}removeStream(t){const e=this.streams.get(t);e&&(e.getTracks().forEach(t=>t.stop()),this.streams.delete(t));const r=this.sources.get(t);r&&(r.disconnect(),this.sources.delete(t))}removeAllStreams(){Array.from(this.streams.keys()).forEach(t=>this.removeStream(t))}get size(){return this.streams.size}},t.MURMURABA_VERSION="0.1.0",t.MurmurabaProcessor=class{constructor(t=480){this.frameSize=t,this.audioContext=null,this.processor=null,this.engine=null,this.inputBuffer=[],this.outputBuffer=[],this.metrics={inputSamples:0,outputSamples:0,silenceFrames:0,activeFrames:0,totalInputEnergy:0,totalOutputEnergy:0,peakInput:0,peakOutput:0,startTime:Date.now(),totalFrames:0}}async initialize(t,e=48e3){t.isInitialized||await t.initialize(),this.engine=t,this.audioContext=new AudioContext({sampleRate:e}),this.processor=this.audioContext.createScriptProcessor(4096,1,1),this.processor.onaudioprocess=t=>this.processAudio(t)}processAudio(t){if(!this.engine)return;const e=t.inputBuffer.getChannelData(0),r=t.outputBuffer.getChannelData(0);for(let t=0;t<e.length;t++)this.inputBuffer.push(e[t]),this.metrics.inputSamples++,this.metrics.peakInput=Math.max(this.metrics.peakInput,Math.abs(e[t]));for(;this.inputBuffer.length>=this.frameSize;){const t=new Float32Array(this.inputBuffer.splice(0,this.frameSize)),e=this.engine.process(t);this.metrics.totalFrames++;const r=this.calculateRMS(t),s=this.calculateRMS(e);this.metrics.totalInputEnergy+=r,this.metrics.totalOutputEnergy+=s,s<.001?this.metrics.silenceFrames++:this.metrics.activeFrames++;for(let t=0;t<e.length;t++)this.outputBuffer.push(e[t])}for(let t=0;t<r.length;t++)if(this.outputBuffer.length>0){const e=this.outputBuffer.shift();r[t]=e,this.metrics.outputSamples++,this.metrics.peakOutput=Math.max(this.metrics.peakOutput,Math.abs(e))}else r[t]=0}calculateRMS(t){let e=0;for(let r=0;r<t.length;r++)e+=t[r]*t[r];return Math.sqrt(e/t.length)}connectStream(t){if(!this.audioContext||!this.processor)throw new Error("Processor not initialized");const e=this.audioContext.createMediaStreamSource(t),r=this.audioContext.createMediaStreamDestination();return e.connect(this.processor),this.processor.connect(r),r}getMetrics(){return{...this.metrics}}resetMetrics(){this.metrics={inputSamples:0,outputSamples:0,silenceFrames:0,activeFrames:0,totalInputEnergy:0,totalOutputEnergy:0,peakInput:0,peakOutput:0,startTime:Date.now(),totalFrames:0}}cleanup(){this.processor&&(this.processor.disconnect(),this.processor=null),this.audioContext&&"closed"!==this.audioContext.state&&(this.audioContext.close(),this.audioContext=null),this.engine&&(this.engine.cleanup(),this.engine=null)}},t.RNNoiseEngine=r,t.SUPPORTED_ENGINES=["rnnoise","speex","custom"],t.createAudioEngine=s,t.useAudioEngine=(t={engineType:"rnnoise"})=>{const[r,i]=e.useState(!1),[o,a]=e.useState(!1),[u,c]=e.useState(null),l=e.useRef(null),p=e.useRef(null),h=e.useRef(null),m=e.useRef(null),d=e.useRef({inputSamples:0,outputSamples:0,silenceFrames:0,activeFrames:0,totalInputEnergy:0,totalOutputEnergy:0,peakInput:0,peakOutput:0,startTime:0,totalFrames:0}),f=async()=>{if(!r&&!o){a(!0),c(null);try{console.log("[AudioEngine] Creating audio engine with config:",t);const e=s(t);await e.initialize(),h.current=e,m.current={inputBuffer:[],outputBuffer:[],energyHistory:new Array(20).fill(0),energyIndex:0},console.log("[AudioEngine] Engine ready for processing"),l.current=new AudioContext({sampleRate:48e3});const r=l.current.createScriptProcessor(4096,1,1);r.onaudioprocess=t=>{const e=t.inputBuffer.getChannelData(0),r=t.outputBuffer.getChannelData(0);if(h.current&&m.current){d.current.inputSamples+=e.length;for(let t=0;t<e.length;t++)m.current.inputBuffer.push(e[t]),d.current.peakInput=Math.max(d.current.peakInput,Math.abs(e[t]));for(;m.current.inputBuffer.length>=480;){const t=m.current.inputBuffer.splice(0,480),e=new Float32Array(t),r=h.current.process(e),s=n(e),i=n(r);d.current.totalFrames++,d.current.totalInputEnergy+=s,d.current.totalOutputEnergy+=i,m.current.energyHistory[m.current.energyIndex]=s,m.current.energyIndex=(m.current.energyIndex+1)%20;const o=m.current.energyHistory.reduce((t,e)=>t+e)/20;let a=r;const u=.001,c=.005;let l=!1;if(o<u)a=a.map(t=>.1*t),l=!0,d.current.silenceFrames++;else if(o<c){const t=.1+.9*((o-u)/(c-u));a=a.map(e=>e*t),d.current.activeFrames++}else d.current.activeFrames++;const p=i/(s+1e-4);if(p<.3&&o<c&&(a=a.map(t=>t*p),l||d.current.silenceFrames++),Math.random()<.02){const t=o<u?"SILENCE":o<c?"TRANSITION":"SPEECH";console.log("[AudioEngine]","\n  Status:",t,"\n  Avg Energy:",o.toFixed(6),"\n  Frame Energy:",s.toFixed(6),"\n  Engine Reduction:",(100*(1-p)).toFixed(1)+"%","\n  Gate Applied:",o<c?"Yes":"No")}for(let t=0;t<480;t++)m.current.outputBuffer.push(a[t])}for(let t=0;t<r.length;t++)if(m.current.outputBuffer.length>0){const e=m.current.outputBuffer.shift();r[t]=e,d.current.outputSamples++,d.current.peakOutput=Math.max(d.current.peakOutput,Math.abs(e))}else r[t]=0}else r.set(e)},p.current=r,i(!0),console.log("[AudioEngine] Initialization complete!")}catch(t){throw console.error("[AudioEngine] Error:",t),c(t instanceof Error?t.message:String(t)),t}finally{a(!1)}}},g=()=>{d.current={inputSamples:0,outputSamples:0,silenceFrames:0,activeFrames:0,totalInputEnergy:0,totalOutputEnergy:0,peakInput:0,peakOutput:0,startTime:Date.now(),totalFrames:0}};return{isInitialized:r,isLoading:o,error:u,processStream:async t=>{if(r||await f(),!l.current||!p.current)throw new Error("Not initialized");g();const e=l.current.createMediaStreamSource(t),s=l.current.createMediaStreamDestination();return e.connect(p.current),p.current.connect(s),s.stream},cleanup:()=>{p.current&&p.current.disconnect(),h.current&&(h.current.cleanup(),h.current=null),l.current&&"closed"!==l.current.state&&l.current.close()},initializeAudioEngine:f,getMetrics:()=>{const t=d.current,e=Date.now()-t.startTime,r=t.totalFrames>0?t.totalInputEnergy/t.totalFrames:0,s=t.totalFrames>0?t.totalOutputEnergy/t.totalFrames:0,n=100*(.5*(r>0?Math.abs(r-s)/r:0)+.5*(t.totalFrames>0?t.silenceFrames/t.totalFrames:0));return{inputSamples:t.inputSamples,outputSamples:t.outputSamples,noiseReductionLevel:Math.max(0,Math.min(100,n)),silenceFrames:t.silenceFrames,activeFrames:t.activeFrames,averageInputEnergy:r,averageOutputEnergy:s,peakInputLevel:t.peakInput,peakOutputLevel:t.peakOutput,processingTimeMs:e,chunkOffset:0,totalFramesProcessed:t.totalFrames}},resetMetrics:g}}});
//# sourceMappingURL=index.umd.min.js.map
